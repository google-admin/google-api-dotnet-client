// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by google-apis-code-generator 1.5.1
//     C# generator version: 1.29.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

/**
 * \brief
 *   DLP API Version v2beta1
 *
 * \section ApiInfo API Version Information
 *    <table>
 *      <tr><th>API
 *          <td><a href='https://cloud.google.com/dlp/docs/'>DLP API</a>
 *      <tr><th>API Version<td>v2beta1
 *      <tr><th>API Rev<td>20170928 (1001)
 *      <tr><th>API Docs
 *          <td><a href='https://cloud.google.com/dlp/docs/'>
 *              https://cloud.google.com/dlp/docs/</a>
 *      <tr><th>Discovery Name<td>dlp
 *    </table>
 *
 * \section ForMoreInfo For More Information
 *
 * The complete API documentation for using DLP API can be found at
 * <a href='https://cloud.google.com/dlp/docs/'>https://cloud.google.com/dlp/docs/</a>.
 *
 * For more information about the Google APIs Client Library for .NET, see
 * <a href='https://developers.google.com/api-client-library/dotnet/get_started'>
 * https://developers.google.com/api-client-library/dotnet/get_started</a>
 */

namespace Google.Apis.DLP.v2beta1
{
    /// <summary>The DLP Service.</summary>
    public class DLPService : Google.Apis.Services.BaseClientService
    {
        /// <summary>The API version.</summary>
        public const string Version = "v2beta1";

        /// <summary>The discovery version used to generate this service.</summary>
        public static Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed =
            Google.Apis.Discovery.DiscoveryVersion.Version_1_0;

        /// <summary>Constructs a new service.</summary>
        public DLPService() :
            this(new Google.Apis.Services.BaseClientService.Initializer()) {}

        /// <summary>Constructs a new service.</summary>
        /// <param name="initializer">The service initializer.</param>
        public DLPService(Google.Apis.Services.BaseClientService.Initializer initializer)
            : base(initializer)
        {
            content = new ContentResource(this);
            dataSource = new DataSourceResource(this);
            inspect = new InspectResource(this);
            riskAnalysis = new RiskAnalysisResource(this);
            rootCategories = new RootCategoriesResource(this);
        }

        /// <summary>Gets the service supported features.</summary>
        public override System.Collections.Generic.IList<string> Features
        {
            get { return new string[0]; }
        }

        /// <summary>Gets the service name.</summary>
        public override string Name
        {
            get { return "dlp"; }
        }

        /// <summary>Gets the service base URI.</summary>
        public override string BaseUri
        {
            get { return "https://dlp.googleapis.com/"; }
        }

        /// <summary>Gets the service base path.</summary>
        public override string BasePath
        {
            get { return ""; }
        }

        #if !NET40
        /// <summary>Gets the batch base URI; <c>null</c> if unspecified.</summary>
        public override string BatchUri
        {
            get { return "https://dlp.googleapis.com/batch"; }
        }

        /// <summary>Gets the batch base path; <c>null</c> if unspecified.</summary>
        public override string BatchPath
        {
            get { return "batch"; }
        }
        #endif

        /// <summary>Available OAuth 2.0 scopes for use with the DLP API.</summary>
        public class Scope
        {
            /// <summary>View and manage your data across Google Cloud Platform services</summary>
            public static string CloudPlatform = "https://www.googleapis.com/auth/cloud-platform";

        }



        private readonly ContentResource content;

        /// <summary>Gets the Content resource.</summary>
        public virtual ContentResource Content
        {
            get { return content; }
        }

        private readonly DataSourceResource dataSource;

        /// <summary>Gets the DataSource resource.</summary>
        public virtual DataSourceResource DataSource
        {
            get { return dataSource; }
        }

        private readonly InspectResource inspect;

        /// <summary>Gets the Inspect resource.</summary>
        public virtual InspectResource Inspect
        {
            get { return inspect; }
        }

        private readonly RiskAnalysisResource riskAnalysis;

        /// <summary>Gets the RiskAnalysis resource.</summary>
        public virtual RiskAnalysisResource RiskAnalysis
        {
            get { return riskAnalysis; }
        }

        private readonly RootCategoriesResource rootCategories;

        /// <summary>Gets the RootCategories resource.</summary>
        public virtual RootCategoriesResource RootCategories
        {
            get { return rootCategories; }
        }
    }

    ///<summary>A base abstract class for DLP requests.</summary>
    public abstract class DLPBaseServiceRequest<TResponse> : Google.Apis.Requests.ClientServiceRequest<TResponse>
    {
        ///<summary>Constructs a new DLPBaseServiceRequest instance.</summary>
        protected DLPBaseServiceRequest(Google.Apis.Services.IClientService service)
            : base(service)
        {
        }

        /// <summary>V1 error format.</summary>
        [Google.Apis.Util.RequestParameterAttribute("$.xgafv", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<XgafvEnum> Xgafv { get; set; }

        /// <summary>V1 error format.</summary>
        public enum XgafvEnum
        {
            /// <summary>v1 error format</summary>
            [Google.Apis.Util.StringValueAttribute("1")]
            Value1,
            /// <summary>v2 error format</summary>
            [Google.Apis.Util.StringValueAttribute("2")]
            Value2,
        }

        /// <summary>OAuth access token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("access_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string AccessToken { get; set; }

        /// <summary>Data format for response.</summary>
        /// [default: json]
        [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<AltEnum> Alt { get; set; }

        /// <summary>Data format for response.</summary>
        public enum AltEnum
        {
            /// <summary>Responses with Content-Type of application/json</summary>
            [Google.Apis.Util.StringValueAttribute("json")]
            Json,
            /// <summary>Media download with context-dependent Content-Type</summary>
            [Google.Apis.Util.StringValueAttribute("media")]
            Media,
            /// <summary>Responses with Content-Type of application/x-protobuf</summary>
            [Google.Apis.Util.StringValueAttribute("proto")]
            Proto,
        }

        /// <summary>OAuth bearer token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("bearer_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string BearerToken { get; set; }

        /// <summary>JSONP</summary>
        [Google.Apis.Util.RequestParameterAttribute("callback", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Callback { get; set; }

        /// <summary>Selector specifying which fields to include in a partial response.</summary>
        [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Fields { get; set; }

        /// <summary>API key. Your API key identifies your project and provides you with API access, quota, and reports.
        /// Required unless you provide an OAuth 2.0 token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("key", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Key { get; set; }

        /// <summary>OAuth 2.0 token for the current user.</summary>
        [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string OauthToken { get; set; }

        /// <summary>Pretty-print response.</summary>
        /// [default: true]
        [Google.Apis.Util.RequestParameterAttribute("pp", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<bool> Pp { get; set; }

        /// <summary>Returns response with indentations and line breaks.</summary>
        /// [default: true]
        [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<bool> PrettyPrint { get; set; }

        /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string
        /// assigned to a user, but should not exceed 40 characters.</summary>
        [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string QuotaUser { get; set; }

        /// <summary>Legacy upload protocol for media (e.g. "media", "multipart").</summary>
        [Google.Apis.Util.RequestParameterAttribute("uploadType", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UploadType { get; set; }

        /// <summary>Upload protocol for media (e.g. "raw", "multipart").</summary>
        [Google.Apis.Util.RequestParameterAttribute("upload_protocol", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UploadProtocol { get; set; }

        /// <summary>Initializes DLP parameter list.</summary>
        protected override void InitParameters()
        {
            base.InitParameters();

            RequestParameters.Add(
                "$.xgafv", new Google.Apis.Discovery.Parameter
                {
                    Name = "$.xgafv",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "access_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "access_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "alt", new Google.Apis.Discovery.Parameter
                {
                    Name = "alt",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "json",
                    Pattern = null,
                });
            RequestParameters.Add(
                "bearer_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "bearer_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "callback", new Google.Apis.Discovery.Parameter
                {
                    Name = "callback",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "fields", new Google.Apis.Discovery.Parameter
                {
                    Name = "fields",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "key", new Google.Apis.Discovery.Parameter
                {
                    Name = "key",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "oauth_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "oauth_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "pp", new Google.Apis.Discovery.Parameter
                {
                    Name = "pp",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "true",
                    Pattern = null,
                });
            RequestParameters.Add(
                "prettyPrint", new Google.Apis.Discovery.Parameter
                {
                    Name = "prettyPrint",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "true",
                    Pattern = null,
                });
            RequestParameters.Add(
                "quotaUser", new Google.Apis.Discovery.Parameter
                {
                    Name = "quotaUser",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "uploadType", new Google.Apis.Discovery.Parameter
                {
                    Name = "uploadType",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "upload_protocol", new Google.Apis.Discovery.Parameter
                {
                    Name = "upload_protocol",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
        }
    }

    /// <summary>The "content" collection of methods.</summary>
    public class ContentResource
    {
        private const string Resource = "content";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public ContentResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>De-identifies potentially sensitive info from a list of strings. This method has limits on input
        /// size and output size.</summary>
        /// <param name="body">The body of the request.</param>
        public virtual DeidentifyRequest Deidentify(Google.Apis.DLP.v2beta1.Data.GooglePrivacyDlpV2beta1DeidentifyContentRequest body)
        {
            return new DeidentifyRequest(service, body);
        }

        /// <summary>De-identifies potentially sensitive info from a list of strings. This method has limits on input
        /// size and output size.</summary>
        public class DeidentifyRequest : DLPBaseServiceRequest<Google.Apis.DLP.v2beta1.Data.GooglePrivacyDlpV2beta1DeidentifyContentResponse>
        {
            /// <summary>Constructs a new Deidentify request.</summary>
            public DeidentifyRequest(Google.Apis.Services.IClientService service, Google.Apis.DLP.v2beta1.Data.GooglePrivacyDlpV2beta1DeidentifyContentRequest body)
                : base(service)
            {
                Body = body;
                InitParameters();
            }



            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.DLP.v2beta1.Data.GooglePrivacyDlpV2beta1DeidentifyContentRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "deidentify"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v2beta1/content:deidentify"; }
            }

            /// <summary>Initializes Deidentify parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

            }

        }

        /// <summary>Finds potentially sensitive info in a list of strings. This method has limits on input size,
        /// processing time, and output size.</summary>
        /// <param name="body">The body of the request.</param>
        public virtual InspectRequest Inspect(Google.Apis.DLP.v2beta1.Data.GooglePrivacyDlpV2beta1InspectContentRequest body)
        {
            return new InspectRequest(service, body);
        }

        /// <summary>Finds potentially sensitive info in a list of strings. This method has limits on input size,
        /// processing time, and output size.</summary>
        public class InspectRequest : DLPBaseServiceRequest<Google.Apis.DLP.v2beta1.Data.GooglePrivacyDlpV2beta1InspectContentResponse>
        {
            /// <summary>Constructs a new Inspect request.</summary>
            public InspectRequest(Google.Apis.Services.IClientService service, Google.Apis.DLP.v2beta1.Data.GooglePrivacyDlpV2beta1InspectContentRequest body)
                : base(service)
            {
                Body = body;
                InitParameters();
            }



            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.DLP.v2beta1.Data.GooglePrivacyDlpV2beta1InspectContentRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "inspect"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v2beta1/content:inspect"; }
            }

            /// <summary>Initializes Inspect parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

            }

        }

        /// <summary>Redacts potentially sensitive info from a list of strings. This method has limits on input size,
        /// processing time, and output size.</summary>
        /// <param name="body">The body of the request.</param>
        public virtual RedactRequest Redact(Google.Apis.DLP.v2beta1.Data.GooglePrivacyDlpV2beta1RedactContentRequest body)
        {
            return new RedactRequest(service, body);
        }

        /// <summary>Redacts potentially sensitive info from a list of strings. This method has limits on input size,
        /// processing time, and output size.</summary>
        public class RedactRequest : DLPBaseServiceRequest<Google.Apis.DLP.v2beta1.Data.GooglePrivacyDlpV2beta1RedactContentResponse>
        {
            /// <summary>Constructs a new Redact request.</summary>
            public RedactRequest(Google.Apis.Services.IClientService service, Google.Apis.DLP.v2beta1.Data.GooglePrivacyDlpV2beta1RedactContentRequest body)
                : base(service)
            {
                Body = body;
                InitParameters();
            }



            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.DLP.v2beta1.Data.GooglePrivacyDlpV2beta1RedactContentRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "redact"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v2beta1/content:redact"; }
            }

            /// <summary>Initializes Redact parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

            }

        }
    }

    /// <summary>The "dataSource" collection of methods.</summary>
    public class DataSourceResource
    {
        private const string Resource = "dataSource";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public DataSourceResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Schedules a job to compute risk analysis metrics over content in a Google Cloud Platform
        /// repository.</summary>
        /// <param name="body">The body of the request.</param>
        public virtual AnalyzeRequest Analyze(Google.Apis.DLP.v2beta1.Data.GooglePrivacyDlpV2beta1AnalyzeDataSourceRiskRequest body)
        {
            return new AnalyzeRequest(service, body);
        }

        /// <summary>Schedules a job to compute risk analysis metrics over content in a Google Cloud Platform
        /// repository.</summary>
        public class AnalyzeRequest : DLPBaseServiceRequest<Google.Apis.DLP.v2beta1.Data.GoogleLongrunningOperation>
        {
            /// <summary>Constructs a new Analyze request.</summary>
            public AnalyzeRequest(Google.Apis.Services.IClientService service, Google.Apis.DLP.v2beta1.Data.GooglePrivacyDlpV2beta1AnalyzeDataSourceRiskRequest body)
                : base(service)
            {
                Body = body;
                InitParameters();
            }



            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.DLP.v2beta1.Data.GooglePrivacyDlpV2beta1AnalyzeDataSourceRiskRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "analyze"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v2beta1/dataSource:analyze"; }
            }

            /// <summary>Initializes Analyze parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

            }

        }
    }

    /// <summary>The "inspect" collection of methods.</summary>
    public class InspectResource
    {
        private const string Resource = "inspect";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public InspectResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
            operations = new OperationsResource(service);
            results = new ResultsResource(service);

        }

        private readonly OperationsResource operations;

        /// <summary>Gets the Operations resource.</summary>
        public virtual OperationsResource Operations
        {
            get { return operations; }
        }

        /// <summary>The "operations" collection of methods.</summary>
        public class OperationsResource
        {
            private const string Resource = "operations";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public OperationsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Cancels an operation. Use the `inspect.operations.get` to check whether the cancellation
            /// succeeded or the operation completed despite cancellation.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="name">The name of the operation resource to be cancelled.</param>
            public virtual CancelRequest Cancel(Google.Apis.DLP.v2beta1.Data.GoogleLongrunningCancelOperationRequest body, string name)
            {
                return new CancelRequest(service, body, name);
            }

            /// <summary>Cancels an operation. Use the `inspect.operations.get` to check whether the cancellation
            /// succeeded or the operation completed despite cancellation.</summary>
            public class CancelRequest : DLPBaseServiceRequest<Google.Apis.DLP.v2beta1.Data.GoogleProtobufEmpty>
            {
                /// <summary>Constructs a new Cancel request.</summary>
                public CancelRequest(Google.Apis.Services.IClientService service, Google.Apis.DLP.v2beta1.Data.GoogleLongrunningCancelOperationRequest body, string name)
                    : base(service)
                {
                    Name = name;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The name of the operation resource to be cancelled.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.DLP.v2beta1.Data.GoogleLongrunningCancelOperationRequest Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "cancel"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v2beta1/{+name}:cancel"; }
                }

                /// <summary>Initializes Cancel parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^inspect/operations/[^/]+$",
                        });
                }

            }

            /// <summary>Schedules a job scanning content in a Google Cloud Platform data repository.</summary>
            /// <param name="body">The body of the request.</param>
            public virtual CreateRequest Create(Google.Apis.DLP.v2beta1.Data.GooglePrivacyDlpV2beta1CreateInspectOperationRequest body)
            {
                return new CreateRequest(service, body);
            }

            /// <summary>Schedules a job scanning content in a Google Cloud Platform data repository.</summary>
            public class CreateRequest : DLPBaseServiceRequest<Google.Apis.DLP.v2beta1.Data.GoogleLongrunningOperation>
            {
                /// <summary>Constructs a new Create request.</summary>
                public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.DLP.v2beta1.Data.GooglePrivacyDlpV2beta1CreateInspectOperationRequest body)
                    : base(service)
                {
                    Body = body;
                    InitParameters();
                }



                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.DLP.v2beta1.Data.GooglePrivacyDlpV2beta1CreateInspectOperationRequest Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "create"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v2beta1/inspect/operations"; }
                }

                /// <summary>Initializes Create parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                }

            }

            /// <summary>This method is not supported and the server returns `UNIMPLEMENTED`.</summary>
            /// <param name="name">The name of the operation resource to be deleted.</param>
            public virtual DeleteRequest Delete(string name)
            {
                return new DeleteRequest(service, name);
            }

            /// <summary>This method is not supported and the server returns `UNIMPLEMENTED`.</summary>
            public class DeleteRequest : DLPBaseServiceRequest<Google.Apis.DLP.v2beta1.Data.GoogleProtobufEmpty>
            {
                /// <summary>Constructs a new Delete request.</summary>
                public DeleteRequest(Google.Apis.Services.IClientService service, string name)
                    : base(service)
                {
                    Name = name;
                    InitParameters();
                }


                /// <summary>The name of the operation resource to be deleted.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "delete"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "DELETE"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v2beta1/{+name}"; }
                }

                /// <summary>Initializes Delete parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^inspect/operations/[^/]+$",
                        });
                }

            }

            /// <summary>Gets the latest state of a long-running operation.  Clients can use this method to poll the
            /// operation result at intervals as recommended by the API service.</summary>
            /// <param name="name">The name of the operation resource.</param>
            public virtual GetRequest Get(string name)
            {
                return new GetRequest(service, name);
            }

            /// <summary>Gets the latest state of a long-running operation.  Clients can use this method to poll the
            /// operation result at intervals as recommended by the API service.</summary>
            public class GetRequest : DLPBaseServiceRequest<Google.Apis.DLP.v2beta1.Data.GoogleLongrunningOperation>
            {
                /// <summary>Constructs a new Get request.</summary>
                public GetRequest(Google.Apis.Services.IClientService service, string name)
                    : base(service)
                {
                    Name = name;
                    InitParameters();
                }


                /// <summary>The name of the operation resource.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "get"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v2beta1/{+name}"; }
                }

                /// <summary>Initializes Get parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^inspect/operations/[^/]+$",
                        });
                }

            }

            /// <summary>Fetches the list of long running operations.</summary>
            /// <param name="name">The name of the operation's parent resource.</param>
            public virtual ListRequest List(string name)
            {
                return new ListRequest(service, name);
            }

            /// <summary>Fetches the list of long running operations.</summary>
            public class ListRequest : DLPBaseServiceRequest<Google.Apis.DLP.v2beta1.Data.GoogleLongrunningListOperationsResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, string name)
                    : base(service)
                {
                    Name = name;
                    InitParameters();
                }


                /// <summary>The name of the operation's parent resource.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }

                /// <summary>The standard list page token.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string PageToken { get; set; }

                /// <summary>The list page size. The maximum allowed value is 256 and the default is 100.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<int> PageSize { get; set; }

                /// <summary>Filters by `done`. That is, `done=true` or `done=false`.</summary>
                [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string Filter { get; set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v2beta1/{+name}"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^inspect/operations$",
                        });
                    RequestParameters.Add(
                        "pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "filter", new Google.Apis.Discovery.Parameter
                        {
                            Name = "filter",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }
        }
        private readonly ResultsResource results;

        /// <summary>Gets the Results resource.</summary>
        public virtual ResultsResource Results
        {
            get { return results; }
        }

        /// <summary>The "results" collection of methods.</summary>
        public class ResultsResource
        {
            private const string Resource = "results";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public ResultsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;
                findings = new FindingsResource(service);

            }

            private readonly FindingsResource findings;

            /// <summary>Gets the Findings resource.</summary>
            public virtual FindingsResource Findings
            {
                get { return findings; }
            }

            /// <summary>The "findings" collection of methods.</summary>
            public class FindingsResource
            {
                private const string Resource = "findings";

                /// <summary>The service which this resource belongs to.</summary>
                private readonly Google.Apis.Services.IClientService service;

                /// <summary>Constructs a new resource.</summary>
                public FindingsResource(Google.Apis.Services.IClientService service)
                {
                    this.service = service;

                }


                /// <summary>Returns list of results for given inspect operation result set id.</summary>
                /// <param name="name">Identifier of the results set returned as metadata of the longrunning operation created by a call
                /// to InspectDataSource. Should be in the format of `inspect/results/{id}`.</param>
                public virtual ListRequest List(string name)
                {
                    return new ListRequest(service, name);
                }

                /// <summary>Returns list of results for given inspect operation result set id.</summary>
                public class ListRequest : DLPBaseServiceRequest<Google.Apis.DLP.v2beta1.Data.GooglePrivacyDlpV2beta1ListInspectFindingsResponse>
                {
                    /// <summary>Constructs a new List request.</summary>
                    public ListRequest(Google.Apis.Services.IClientService service, string name)
                        : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }


                    /// <summary>Identifier of the results set returned as metadata of the longrunning operation created
                    /// by a call to InspectDataSource. Should be in the format of `inspect/results/{id}`.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Restricts findings to items that match. Supports info_type and likelihood.
                    ///
                    /// Examples:
                    ///
                    /// - info_type=EMAIL_ADDRESS - info_type=PHONE_NUMBER,EMAIL_ADDRESS - likelihood=VERY_LIKELY -
                    /// likelihood=VERY_LIKELY,LIKELY - info_type=EMAIL_ADDRESS,likelihood=VERY_LIKELY,LIKELY</summary>
                    [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string Filter { get; set; }

                    /// <summary>The value returned by the last `ListInspectFindingsResponse`; indicates that this is a
                    /// continuation of a prior `ListInspectFindings` call, and that the system should return the next
                    /// page of data.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string PageToken { get; set; }

                    /// <summary>Maximum number of results to return. If 0, the implementation selects a reasonable
                    /// value.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<int> PageSize { get; set; }


                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "list"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "GET"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v2beta1/{+name}/findings"; }
                    }

                    /// <summary>Initializes List parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^inspect/results/[^/]+$",
                            });
                        RequestParameters.Add(
                            "filter", new Google.Apis.Discovery.Parameter
                            {
                                Name = "filter",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        RequestParameters.Add(
                            "pageToken", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageToken",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        RequestParameters.Add(
                            "pageSize", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageSize",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                    }

                }
            }
        }
    }

    /// <summary>The "riskAnalysis" collection of methods.</summary>
    public class RiskAnalysisResource
    {
        private const string Resource = "riskAnalysis";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public RiskAnalysisResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
            operations = new OperationsResource(service);

        }

        private readonly OperationsResource operations;

        /// <summary>Gets the Operations resource.</summary>
        public virtual OperationsResource Operations
        {
            get { return operations; }
        }

        /// <summary>The "operations" collection of methods.</summary>
        public class OperationsResource
        {
            private const string Resource = "operations";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public OperationsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Cancels an operation. Use the `inspect.operations.get` to check whether the cancellation
            /// succeeded or the operation completed despite cancellation.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="name">The name of the operation resource to be cancelled.</param>
            public virtual CancelRequest Cancel(Google.Apis.DLP.v2beta1.Data.GoogleLongrunningCancelOperationRequest body, string name)
            {
                return new CancelRequest(service, body, name);
            }

            /// <summary>Cancels an operation. Use the `inspect.operations.get` to check whether the cancellation
            /// succeeded or the operation completed despite cancellation.</summary>
            public class CancelRequest : DLPBaseServiceRequest<Google.Apis.DLP.v2beta1.Data.GoogleProtobufEmpty>
            {
                /// <summary>Constructs a new Cancel request.</summary>
                public CancelRequest(Google.Apis.Services.IClientService service, Google.Apis.DLP.v2beta1.Data.GoogleLongrunningCancelOperationRequest body, string name)
                    : base(service)
                {
                    Name = name;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The name of the operation resource to be cancelled.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.DLP.v2beta1.Data.GoogleLongrunningCancelOperationRequest Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "cancel"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v2beta1/{+name}:cancel"; }
                }

                /// <summary>Initializes Cancel parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^riskAnalysis/operations/[^/]+$",
                        });
                }

            }

            /// <summary>This method is not supported and the server returns `UNIMPLEMENTED`.</summary>
            /// <param name="name">The name of the operation resource to be deleted.</param>
            public virtual DeleteRequest Delete(string name)
            {
                return new DeleteRequest(service, name);
            }

            /// <summary>This method is not supported and the server returns `UNIMPLEMENTED`.</summary>
            public class DeleteRequest : DLPBaseServiceRequest<Google.Apis.DLP.v2beta1.Data.GoogleProtobufEmpty>
            {
                /// <summary>Constructs a new Delete request.</summary>
                public DeleteRequest(Google.Apis.Services.IClientService service, string name)
                    : base(service)
                {
                    Name = name;
                    InitParameters();
                }


                /// <summary>The name of the operation resource to be deleted.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "delete"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "DELETE"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v2beta1/{+name}"; }
                }

                /// <summary>Initializes Delete parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^riskAnalysis/operations/[^/]+$",
                        });
                }

            }

            /// <summary>Gets the latest state of a long-running operation.  Clients can use this method to poll the
            /// operation result at intervals as recommended by the API service.</summary>
            /// <param name="name">The name of the operation resource.</param>
            public virtual GetRequest Get(string name)
            {
                return new GetRequest(service, name);
            }

            /// <summary>Gets the latest state of a long-running operation.  Clients can use this method to poll the
            /// operation result at intervals as recommended by the API service.</summary>
            public class GetRequest : DLPBaseServiceRequest<Google.Apis.DLP.v2beta1.Data.GoogleLongrunningOperation>
            {
                /// <summary>Constructs a new Get request.</summary>
                public GetRequest(Google.Apis.Services.IClientService service, string name)
                    : base(service)
                {
                    Name = name;
                    InitParameters();
                }


                /// <summary>The name of the operation resource.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "get"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v2beta1/{+name}"; }
                }

                /// <summary>Initializes Get parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^riskAnalysis/operations/[^/]+$",
                        });
                }

            }

            /// <summary>Fetches the list of long running operations.</summary>
            /// <param name="name">The name of the operation's parent resource.</param>
            public virtual ListRequest List(string name)
            {
                return new ListRequest(service, name);
            }

            /// <summary>Fetches the list of long running operations.</summary>
            public class ListRequest : DLPBaseServiceRequest<Google.Apis.DLP.v2beta1.Data.GoogleLongrunningListOperationsResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, string name)
                    : base(service)
                {
                    Name = name;
                    InitParameters();
                }


                /// <summary>The name of the operation's parent resource.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }

                /// <summary>The standard list page token.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string PageToken { get; set; }

                /// <summary>The list page size. The maximum allowed value is 256 and the default is 100.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<int> PageSize { get; set; }

                /// <summary>Filters by `done`. That is, `done=true` or `done=false`.</summary>
                [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string Filter { get; set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v2beta1/{+name}"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^riskAnalysis/operations$",
                        });
                    RequestParameters.Add(
                        "pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "filter", new Google.Apis.Discovery.Parameter
                        {
                            Name = "filter",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }
        }
    }

    /// <summary>The "rootCategories" collection of methods.</summary>
    public class RootCategoriesResource
    {
        private const string Resource = "rootCategories";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public RootCategoriesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
            infoTypes = new InfoTypesResource(service);

        }

        private readonly InfoTypesResource infoTypes;

        /// <summary>Gets the InfoTypes resource.</summary>
        public virtual InfoTypesResource InfoTypes
        {
            get { return infoTypes; }
        }

        /// <summary>The "infoTypes" collection of methods.</summary>
        public class InfoTypesResource
        {
            private const string Resource = "infoTypes";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public InfoTypesResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Returns sensitive information types for given category.</summary>
            /// <param name="category">Category name as returned by ListRootCategories.</param>
            public virtual ListRequest List(string category)
            {
                return new ListRequest(service, category);
            }

            /// <summary>Returns sensitive information types for given category.</summary>
            public class ListRequest : DLPBaseServiceRequest<Google.Apis.DLP.v2beta1.Data.GooglePrivacyDlpV2beta1ListInfoTypesResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, string category)
                    : base(service)
                {
                    Category = category;
                    InitParameters();
                }


                /// <summary>Category name as returned by ListRootCategories.</summary>
                [Google.Apis.Util.RequestParameterAttribute("category", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Category { get; private set; }

                /// <summary>Optional BCP-47 language code for localized info type friendly names. If omitted, or if
                /// localized strings are not available, en-US strings will be returned.</summary>
                [Google.Apis.Util.RequestParameterAttribute("languageCode", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string LanguageCode { get; set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v2beta1/rootCategories/{+category}/infoTypes"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "category", new Google.Apis.Discovery.Parameter
                        {
                            Name = "category",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^[^/]+$",
                        });
                    RequestParameters.Add(
                        "languageCode", new Google.Apis.Discovery.Parameter
                        {
                            Name = "languageCode",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }
        }

        /// <summary>Returns the list of root categories of sensitive information.</summary>
        public virtual ListRequest List()
        {
            return new ListRequest(service);
        }

        /// <summary>Returns the list of root categories of sensitive information.</summary>
        public class ListRequest : DLPBaseServiceRequest<Google.Apis.DLP.v2beta1.Data.GooglePrivacyDlpV2beta1ListRootCategoriesResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service)
                : base(service)
            {
                InitParameters();
            }


            /// <summary>Optional language code for localized friendly category names. If omitted or if localized
            /// strings are not available, en-US strings will be returned.</summary>
            [Google.Apis.Util.RequestParameterAttribute("languageCode", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string LanguageCode { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v2beta1/rootCategories"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "languageCode", new Google.Apis.Discovery.Parameter
                    {
                        Name = "languageCode",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }
}

namespace Google.Apis.DLP.v2beta1.Data
{    

    /// <summary>The request message for Operations.CancelOperation.</summary>
    public class GoogleLongrunningCancelOperationRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The response message for Operations.ListOperations.</summary>
    public class GoogleLongrunningListOperationsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The standard List next-page token.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>A list of operations that matches the specified filter in the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("operations")]
        public virtual System.Collections.Generic.IList<GoogleLongrunningOperation> Operations { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>This resource represents a long-running operation that is the result of a network API call.</summary>
    public class GoogleLongrunningOperation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>If the value is `false`, it means the operation is still in progress. If `true`, the operation is
        /// completed, and either `error` or `response` is available.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("done")]
        public virtual System.Nullable<bool> Done { get; set; } 

        /// <summary>The error result of the operation in case of failure or cancellation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual GoogleRpcStatus Error { get; set; } 

        /// <summary>This field will contain an InspectOperationMetadata object for `inspect.operations.create` or a
        /// RiskAnalysisOperationMetadata object for `dataSource.analyze`.  This will always be returned with the
        /// Operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual System.Collections.Generic.IDictionary<string,object> Metadata { get; set; } 

        /// <summary>The server-assigned name. The `name` should have the format of `inspect/operations/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>This field will contain an InspectOperationResult object for `inspect.operations.create` or a
        /// RiskAnalysisOperationResult object for `dataSource.analyze`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("response")]
        public virtual System.Collections.Generic.IDictionary<string,object> Response { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Request for creating a risk analysis operation.</summary>
    public class GooglePrivacyDlpV2beta1AnalyzeDataSourceRiskRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Privacy metric to compute.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("privacyMetric")]
        public virtual GooglePrivacyDlpV2beta1PrivacyMetric PrivacyMetric { get; set; } 

        /// <summary>Input dataset to compute metrics over.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sourceTable")]
        public virtual GooglePrivacyDlpV2beta1BigQueryTable SourceTable { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Options defining BigQuery table and row identifiers.</summary>
    public class GooglePrivacyDlpV2beta1BigQueryOptions : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>References to fields uniquely identifying rows within the table. Nested fields in the format, like
        /// `person.birthdate.year`, are allowed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("identifyingFields")]
        public virtual System.Collections.Generic.IList<GooglePrivacyDlpV2beta1FieldId> IdentifyingFields { get; set; } 

        /// <summary>Complete BigQuery table reference.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tableReference")]
        public virtual GooglePrivacyDlpV2beta1BigQueryTable TableReference { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Message defining the location of a BigQuery table. A table is uniquely identified  by its project_id,
    /// dataset_id, and table_name. Within a query a table is often referenced with a string in the format of: `:.` or
    /// `..`.</summary>
    public class GooglePrivacyDlpV2beta1BigQueryTable : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Dataset ID of the table.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("datasetId")]
        public virtual string DatasetId { get; set; } 

        /// <summary>The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is
        /// inferred from the API call.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("projectId")]
        public virtual string ProjectId { get; set; } 

        /// <summary>Name of the table.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tableId")]
        public virtual string TableId { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Buckets represented as ranges, along with replacement values. Ranges must be non-overlapping.</summary>
    public class GooglePrivacyDlpV2beta1Bucket : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Upper bound of the range, exclusive; type must match min.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("max")]
        public virtual GooglePrivacyDlpV2beta1Value Max { get; set; } 

        /// <summary>Lower bound of the range, inclusive. Type should be the same as max if used.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("min")]
        public virtual GooglePrivacyDlpV2beta1Value Min { get; set; } 

        /// <summary>Replacement value for this bucket. If not provided the default behavior will be to hyphenate the
        /// min-max range.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("replacementValue")]
        public virtual GooglePrivacyDlpV2beta1Value ReplacementValue { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Generalization function that buckets values based on ranges. The ranges and replacement values are
    /// dynamically provided by the user for custom behavior, such as 1-30 -> LOW 31-65 -> MEDIUM 66-100 -> HIGH This
    /// can be used on data of type: number, long, string, timestamp. If the bound `Value` type differs from the type of
    /// data being transformed, we will first attempt converting the type of the data to be transformed to match the
    /// type of the bound before comparing.</summary>
    public class GooglePrivacyDlpV2beta1BucketingConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("buckets")]
        public virtual System.Collections.Generic.IList<GooglePrivacyDlpV2beta1Bucket> Buckets { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Compute numerical stats over an individual column, including number of distinct values and value count
    /// distribution.</summary>
    public class GooglePrivacyDlpV2beta1CategoricalStatsConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Field to compute categorical stats on. All column types are supported except for arrays and
        /// structs. However, it may be more informative to use NumericalStats when the field type is supported,
        /// depending on the data.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("field")]
        public virtual GooglePrivacyDlpV2beta1FieldId Field { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Histogram bucket of value frequencies in the column.</summary>
    public class GooglePrivacyDlpV2beta1CategoricalStatsHistogramBucket : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Total number of records in this bucket.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bucketSize")]
        public virtual System.Nullable<long> BucketSize { get; set; } 

        /// <summary>Sample of value frequencies in this bucket. The total number of values returned per bucket is
        /// capped at 20.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bucketValues")]
        public virtual System.Collections.Generic.IList<GooglePrivacyDlpV2beta1ValueFrequency> BucketValues { get; set; } 

        /// <summary>Lower bound on the value frequency of the values in this bucket.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("valueFrequencyLowerBound")]
        public virtual System.Nullable<long> ValueFrequencyLowerBound { get; set; } 

        /// <summary>Upper bound on the value frequency of the values in this bucket.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("valueFrequencyUpperBound")]
        public virtual System.Nullable<long> ValueFrequencyUpperBound { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Result of the categorical stats computation.</summary>
    public class GooglePrivacyDlpV2beta1CategoricalStatsResult : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Histogram of value frequencies in the column.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("valueFrequencyHistogramBuckets")]
        public virtual System.Collections.Generic.IList<GooglePrivacyDlpV2beta1CategoricalStatsHistogramBucket> ValueFrequencyHistogramBuckets { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Info Type Category description.</summary>
    public class GooglePrivacyDlpV2beta1CategoryDescription : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Human readable form of the category name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; } 

        /// <summary>Internal name of the category.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Partially mask a string by replacing a given number of characters with a fixed character. Masking can
    /// start from the beginning or end of the string. This can be used on data of any type (numbers, longs, and so on)
    /// and when de-identifying structured data we'll attempt to preserve the original data's type. (This allows you to
    /// take a long like 123 and modify it to a string like **3.</summary>
    public class GooglePrivacyDlpV2beta1CharacterMaskConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>When masking a string, items in this list will be skipped when replacing. For example, if your
        /// string is 555-555-5555 and you ask us to skip `-` and mask 5 chars with * we would produce
        /// ***-*55-5555.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("charactersToIgnore")]
        public virtual System.Collections.Generic.IList<GooglePrivacyDlpV2beta1CharsToIgnore> CharactersToIgnore { get; set; } 

        /// <summary>Character to mask the sensitive valuesfor example, "*" for an alphabetic string such as name, or
        /// "0" for a numeric string such as ZIP code or credit card number. String must have length 1. If not supplied,
        /// we will default to "*" for strings, 0 for digits.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maskingCharacter")]
        public virtual string MaskingCharacter { get; set; } 

        /// <summary>Number of characters to mask. If not set, all matching chars will be masked. Skipped characters do
        /// not count towards this tally.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("numberToMask")]
        public virtual System.Nullable<int> NumberToMask { get; set; } 

        /// <summary>Mask characters in reverse order. For example, if `masking_character` is '0', number_to_mask is 14,
        /// and `reverse_order` is false, then 1234-5678-9012-3456 -> 00000000000000-3456 If `masking_character` is '*',
        /// `number_to_mask` is 3, and `reverse_order` is true, then 12345 -> 12***</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reverseOrder")]
        public virtual System.Nullable<bool> ReverseOrder { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Characters to skip when doing deidentification of a value. These will be left alone and
    /// skipped.</summary>
    public class GooglePrivacyDlpV2beta1CharsToIgnore : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("charactersToSkip")]
        public virtual string CharactersToSkip { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("commonCharactersToIgnore")]
        public virtual string CommonCharactersToIgnore { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Record key for a finding in a Cloud Storage file.</summary>
    public class GooglePrivacyDlpV2beta1CloudStorageKey : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Path to the file.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filePath")]
        public virtual string FilePath { get; set; } 

        /// <summary>Byte offset of the referenced data in the file.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startOffset")]
        public virtual System.Nullable<long> StartOffset { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Options defining a file or a set of files (path ending with *) within a Google Cloud Storage
    /// bucket.</summary>
    public class GooglePrivacyDlpV2beta1CloudStorageOptions : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("fileSet")]
        public virtual GooglePrivacyDlpV2beta1FileSet FileSet { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A location in Cloud Storage.</summary>
    public class GooglePrivacyDlpV2beta1CloudStoragePath : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The url, in the format of `gs://bucket/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("path")]
        public virtual string Path { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents a color in the RGB color space.</summary>
    public class GooglePrivacyDlpV2beta1Color : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The amount of blue in the color as a value in the interval [0, 1].</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("blue")]
        public virtual System.Nullable<float> Blue { get; set; } 

        /// <summary>The amount of green in the color as a value in the interval [0, 1].</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("green")]
        public virtual System.Nullable<float> Green { get; set; } 

        /// <summary>The amount of red in the color as a value in the interval [0, 1].</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("red")]
        public virtual System.Nullable<float> Red { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The field type of `value` and `field` do not need to match to be considered equal, but not all
    /// comparisons are possible.
    ///
    /// A `value` of type:
    ///
    /// - `string` can be compared against all other types - `boolean` can only be compared against other booleans -
    /// `integer` can be compared against doubles or a string if the string value can be parsed as an integer. -
    /// `double` can be compared against integers or a string if the string can be parsed as a double. - `Timestamp` can
    /// be compared against strings in RFC 3339 date string format. - `TimeOfDay` can be compared against timestamps and
    /// strings in the format of 'HH:mm:ss'.
    ///
    /// If we fail to compare do to type mismatch, a warning will be given and the condition will evaluate to
    /// false.</summary>
    public class GooglePrivacyDlpV2beta1Condition : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Field within the record this condition is evaluated against. [required]</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("field")]
        public virtual GooglePrivacyDlpV2beta1FieldId Field { get; set; } 

        /// <summary>Operator used to compare the field or info type to the value. [required]</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("operator")]
        public virtual string Operator__ { get; set; } 

        /// <summary>Value to compare against. [Required, except for `EXISTS` tests.]</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual GooglePrivacyDlpV2beta1Value Value { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class GooglePrivacyDlpV2beta1Conditions : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("conditions")]
        public virtual System.Collections.Generic.IList<GooglePrivacyDlpV2beta1Condition> Conditions { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Container structure for the content to inspect.</summary>
    public class GooglePrivacyDlpV2beta1ContentItem : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Content data to inspect or redact.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("data")]
        public virtual string Data { get; set; } 

        /// <summary>Structured content for inspection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("table")]
        public virtual GooglePrivacyDlpV2beta1Table Table { get; set; } 

        /// <summary>Type of the content, as defined in Content-Type HTTP header. Supported types are: all "text" types,
        /// octet streams, PNG images, JPEG images.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>String data to inspect or redact.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Request for scheduling a scan of a data subset from a Google Platform data repository.</summary>
    public class GooglePrivacyDlpV2beta1CreateInspectOperationRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Configuration for the inspector.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("inspectConfig")]
        public virtual GooglePrivacyDlpV2beta1InspectConfig InspectConfig { get; set; } 

        /// <summary>Additional configuration settings for long running operations.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("operationConfig")]
        public virtual GooglePrivacyDlpV2beta1OperationConfig OperationConfig { get; set; } 

        /// <summary>Optional location to store findings.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("outputConfig")]
        public virtual GooglePrivacyDlpV2beta1OutputStorageConfig OutputConfig { get; set; } 

        /// <summary>Specification of the data set to process.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("storageConfig")]
        public virtual GooglePrivacyDlpV2beta1StorageConfig StorageConfig { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Pseudonymization method that generates surrogates via cryptographic hashing. Uses SHA-256. Outputs a 32
    /// byte digest as an uppercase hex string (for example, 41D1567F7F99F1DC2A5FAB886DEE5BEE). Currently, only string
    /// and integer values can be hashed.</summary>
    public class GooglePrivacyDlpV2beta1CryptoHashConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The key used by the hash function.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cryptoKey")]
        public virtual GooglePrivacyDlpV2beta1CryptoKey CryptoKey { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>This is a data encryption key (DEK) (as opposed to a key encryption key (KEK) stored by KMS). When
    /// using KMS to wrap/unwrap DEKs, be sure to set an appropriate IAM policy on the KMS CryptoKey (KEK) to ensure an
    /// attacker cannot unwrap the data crypto key.</summary>
    public class GooglePrivacyDlpV2beta1CryptoKey : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("kmsWrapped")]
        public virtual GooglePrivacyDlpV2beta1KmsWrappedCryptoKey KmsWrapped { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("transient")]
        public virtual GooglePrivacyDlpV2beta1TransientCryptoKey Transient { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("unwrapped")]
        public virtual GooglePrivacyDlpV2beta1UnwrappedCryptoKey Unwrapped { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Replaces an identifier with an surrogate using FPE with the FFX mode of operation. The identifier must
    /// be representable by the US-ASCII character set. For a given crypto key and context, the same identifier will be
    /// replaced with the same surrogate. Note that a given identifier must be either the empty string or be at least
    /// two characters long.</summary>
    public class GooglePrivacyDlpV2beta1CryptoReplaceFfxFpeConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("commonAlphabet")]
        public virtual string CommonAlphabet { get; set; } 

        /// <summary>A context may be used for higher security since the same identifier in two different contexts
        /// likely will be given a distinct surrogate. The principle is that the likeliness is inversely related to the
        /// ratio of the number of distinct identifiers per context over the number of possible surrogates: As long as
        /// this ratio is small, the likehood is large.
        ///
        /// If the context is not set, a default tweak will be used. If the context is set but:
        ///
        /// 1. there is no record present when transforming a given value or 1. the field is not present when
        /// transforming a given value,
        ///
        /// a default tweak will be used.
        ///
        /// Note that case (1) is expected when an `InfoTypeTransformation` is applied to both structured and non-
        /// structured `ContentItem`s. Currently, the referenced field may be of value type integer or string.
        ///
        /// The tweak is constructed as a sequence of bytes in big endian byte order such that:
        ///
        /// - a 64 bit integer is encoded followed by a single byte of value 1 - a string is encoded in UTF-8 format
        /// followed by a single byte of value 2
        ///
        /// This is also known as the 'tweak', as in tweakable encryption.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("context")]
        public virtual GooglePrivacyDlpV2beta1FieldId Context { get; set; } 

        /// <summary>The key used by the encryption algorithm. [required]</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cryptoKey")]
        public virtual GooglePrivacyDlpV2beta1CryptoKey CryptoKey { get; set; } 

        /// <summary>This is supported by mapping these to the alphanumeric characters that the FFX mode natively
        /// supports. This happens before/after encryption/decryption. Each character listed must appear only once.
        /// Number of characters must be in the range [2, 62]. This must be encoded as ASCII. The order of characters
        /// does not matter.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("customAlphabet")]
        public virtual string CustomAlphabet { get; set; } 

        /// <summary>The native way to select the alphabet. Must be in the range [2, 62].</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("radix")]
        public virtual System.Nullable<int> Radix { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Record key for a finding in Cloud Datastore.</summary>
    public class GooglePrivacyDlpV2beta1DatastoreKey : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Datastore entity key.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityKey")]
        public virtual GooglePrivacyDlpV2beta1Key EntityKey { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Options defining a data set within Google Cloud Datastore.</summary>
    public class GooglePrivacyDlpV2beta1DatastoreOptions : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The kind to process.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual GooglePrivacyDlpV2beta1KindExpression Kind { get; set; } 

        /// <summary>A partition ID identifies a grouping of entities. The grouping is always by project and namespace,
        /// however the namespace ID may be empty.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("partitionId")]
        public virtual GooglePrivacyDlpV2beta1PartitionId PartitionId { get; set; } 

        /// <summary>Properties to scan. If none are specified, all properties will be scanned by default.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("projection")]
        public virtual System.Collections.Generic.IList<GooglePrivacyDlpV2beta1Projection> Projection { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>High level summary of deidentification.</summary>
    public class GooglePrivacyDlpV2beta1DeidentificationSummary : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Transformations applied to the dataset.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("transformationSummaries")]
        public virtual System.Collections.Generic.IList<GooglePrivacyDlpV2beta1TransformationSummary> TransformationSummaries { get; set; } 

        /// <summary>Total size in bytes that were transformed in some way.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("transformedBytes")]
        public virtual System.Nullable<long> TransformedBytes { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The configuration that controls how the data will change.</summary>
    public class GooglePrivacyDlpV2beta1DeidentifyConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Treat the dataset as free-form text and apply the same free text transformation
        /// everywhere.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("infoTypeTransformations")]
        public virtual GooglePrivacyDlpV2beta1InfoTypeTransformations InfoTypeTransformations { get; set; } 

        /// <summary>Treat the dataset as structured. Transformations can be applied to specific locations within
        /// structured datasets, such as transforming a column within a table.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("recordTransformations")]
        public virtual GooglePrivacyDlpV2beta1RecordTransformations RecordTransformations { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Request to de-identify a list of items.</summary>
    public class GooglePrivacyDlpV2beta1DeidentifyContentRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Configuration for the de-identification of the list of content items.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deidentifyConfig")]
        public virtual GooglePrivacyDlpV2beta1DeidentifyConfig DeidentifyConfig { get; set; } 

        /// <summary>Configuration for the inspector.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("inspectConfig")]
        public virtual GooglePrivacyDlpV2beta1InspectConfig InspectConfig { get; set; } 

        /// <summary>The list of items to inspect. Up to 100 are allowed per request. All items will be treated as
        /// text.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<GooglePrivacyDlpV2beta1ContentItem> Items { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Results of de-identifying a list of items.</summary>
    public class GooglePrivacyDlpV2beta1DeidentifyContentResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<GooglePrivacyDlpV2beta1ContentItem> Items { get; set; } 

        /// <summary>A review of the transformations that took place for each item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("summaries")]
        public virtual System.Collections.Generic.IList<GooglePrivacyDlpV2beta1DeidentificationSummary> Summaries { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>An entity in a dataset is a field or set of fields that correspond to a single person. For example, in
    /// medical records the `EntityId` might be a patient identifier, or for financial records it might be an account
    /// identifier. This message is used when generalizations or analysis must be consistent across multiple rows
    /// pertaining to the same entity.</summary>
    public class GooglePrivacyDlpV2beta1EntityId : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Composite key indicating which field contains the entity identifier.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("field")]
        public virtual GooglePrivacyDlpV2beta1FieldId Field { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A collection of expressions</summary>
    public class GooglePrivacyDlpV2beta1Expressions : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("conditions")]
        public virtual GooglePrivacyDlpV2beta1Conditions Conditions { get; set; } 

        /// <summary>The operator to apply to the result of conditions. Default and currently only supported value is
        /// `AND`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("logicalOperator")]
        public virtual string LogicalOperator { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>General identifier of a data field in a storage service.</summary>
    public class GooglePrivacyDlpV2beta1FieldId : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Name describing the field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("columnName")]
        public virtual string ColumnName { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The transformation to apply to the field.</summary>
    public class GooglePrivacyDlpV2beta1FieldTransformation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Only apply the transformation if the condition evaluates to true for the given `RecordCondition`.
        /// The conditions are allowed to reference fields that are not used in the actual transformation. [optional]
        ///
        /// Example Use Cases:
        ///
        /// - Apply a different bucket transformation to an age column if the zip code column for the same record is
        /// within a specific range. - Redact a field if the date of birth field is greater than 85.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("condition")]
        public virtual GooglePrivacyDlpV2beta1RecordCondition Condition { get; set; } 

        /// <summary>Input field(s) to apply the transformation to. [required]</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fields")]
        public virtual System.Collections.Generic.IList<GooglePrivacyDlpV2beta1FieldId> Fields { get; set; } 

        /// <summary>Treat the contents of the field as free text, and selectively transform content that matches an
        /// `InfoType`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("infoTypeTransformations")]
        public virtual GooglePrivacyDlpV2beta1InfoTypeTransformations InfoTypeTransformations { get; set; } 

        /// <summary>Apply the transformation to the entire field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("primitiveTransformation")]
        public virtual GooglePrivacyDlpV2beta1PrimitiveTransformation PrimitiveTransformation { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Set of files to scan.</summary>
    public class GooglePrivacyDlpV2beta1FileSet : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The url, in the format `gs:`. Trailing wildcard in the path is allowed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("url")]
        public virtual string Url { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Container structure describing a single finding within a string or image.</summary>
    public class GooglePrivacyDlpV2beta1Finding : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Timestamp when finding was detected.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual object CreateTime { get; set; } 

        /// <summary>The specific type of info the string might be.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("infoType")]
        public virtual GooglePrivacyDlpV2beta1InfoType InfoType { get; set; } 

        /// <summary>Estimate of how likely it is that the info_type is correct.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("likelihood")]
        public virtual string Likelihood { get; set; } 

        /// <summary>Location of the info found.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("location")]
        public virtual GooglePrivacyDlpV2beta1Location Location { get; set; } 

        /// <summary>The specific string that may be potentially sensitive info.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("quote")]
        public virtual string Quote { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Buckets values based on fixed size ranges. The Bucketing transformation can provide all of this
    /// functionality, but requires more configuration. This message is provided as a convenience to the user for simple
    /// bucketing strategies. The resulting value will be a hyphenated string of lower_bound-upper_bound. This can be
    /// used on data of type: double, long. If the bound Value type differs from the type of data being transformed, we
    /// will first attempt converting the type of the data to be transformed to match the type of the bound before
    /// comparing.</summary>
    public class GooglePrivacyDlpV2beta1FixedSizeBucketingConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Size of each bucket (except for minimum and maximum buckets). So if `lower_bound` = 10,
        /// `upper_bound` = 89, and `bucket_size` = 10, then the following buckets would be used: -10, 10-20, 20-30,
        /// 30-40, 40-50, 50-60, 60-70, 70-80, 80-89, 89+. Precision up to 2 decimals works. [Required].</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bucketSize")]
        public virtual System.Nullable<double> BucketSize { get; set; } 

        /// <summary>Lower bound value of buckets. All values less than `lower_bound` are grouped together into a single
        /// bucket; for example if `lower_bound` = 10, then all values less than 10 are replaced with the value “-10”.
        /// [Required].</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lowerBound")]
        public virtual GooglePrivacyDlpV2beta1Value LowerBound { get; set; } 

        /// <summary>Upper bound value of buckets. All values greater than upper_bound are grouped together into a
        /// single bucket; for example if `upper_bound` = 89, then all values greater than 89 are replaced with the
        /// value “89+”. [Required].</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("upperBound")]
        public virtual GooglePrivacyDlpV2beta1Value UpperBound { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Bounding box encompassing detected text within an image.</summary>
    public class GooglePrivacyDlpV2beta1ImageLocation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Height of the bounding box in pixels.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("height")]
        public virtual System.Nullable<int> Height { get; set; } 

        /// <summary>Left coordinate of the bounding box. (0,0) is upper left.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("left")]
        public virtual System.Nullable<int> Left { get; set; } 

        /// <summary>Top coordinate of the bounding box. (0,0) is upper left.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("top")]
        public virtual System.Nullable<int> Top { get; set; } 

        /// <summary>Width of the bounding box in pixels.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("width")]
        public virtual System.Nullable<int> Width { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Configuration for determing how redaction of images should occur.</summary>
    public class GooglePrivacyDlpV2beta1ImageRedactionConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Only one per info_type should be provided per request. If not specified, and redact_all_text is
        /// false, the DLP API will redact all text that it matches against all info_types that are found, but not
        /// specified in another ImageRedactionConfig.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("infoType")]
        public virtual GooglePrivacyDlpV2beta1InfoType InfoType { get; set; } 

        /// <summary>If true, all text found in the image, regardless whether it matches an info_type, is
        /// redacted.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("redactAllText")]
        public virtual System.Nullable<bool> RedactAllText { get; set; } 

        /// <summary>The color to use when redacting content from an image. If not specified, the default is
        /// black.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("redactionColor")]
        public virtual GooglePrivacyDlpV2beta1Color RedactionColor { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Type of information detected by the API.</summary>
    public class GooglePrivacyDlpV2beta1InfoType : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Name of the information type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Description of the information type (infoType).</summary>
    public class GooglePrivacyDlpV2beta1InfoTypeDescription : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>List of categories this infoType belongs to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("categories")]
        public virtual System.Collections.Generic.IList<GooglePrivacyDlpV2beta1CategoryDescription> Categories { get; set; } 

        /// <summary>Human readable form of the infoType name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; } 

        /// <summary>Internal name of the infoType.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Max findings configuration per info type, per content item or long running operation.</summary>
    public class GooglePrivacyDlpV2beta1InfoTypeLimit : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Type of information the findings limit applies to. Only one limit per info_type should be provided.
        /// If InfoTypeLimit does not have an info_type, the DLP API applies the limit against all info_types that are
        /// found but not specified in another InfoTypeLimit.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("infoType")]
        public virtual GooglePrivacyDlpV2beta1InfoType InfoType { get; set; } 

        /// <summary>Max findings limit for the given infoType.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maxFindings")]
        public virtual System.Nullable<int> MaxFindings { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Statistics regarding a specific InfoType.</summary>
    public class GooglePrivacyDlpV2beta1InfoTypeStatistics : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Number of findings for this info type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("count")]
        public virtual System.Nullable<long> Count { get; set; } 

        /// <summary>The type of finding this stat is for.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("infoType")]
        public virtual GooglePrivacyDlpV2beta1InfoType InfoType { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A transformation to apply to text that is identified as a specific info_type.</summary>
    public class GooglePrivacyDlpV2beta1InfoTypeTransformation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Info types to apply the transformation to. Empty list will match all available info types for this
        /// transformation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("infoTypes")]
        public virtual System.Collections.Generic.IList<GooglePrivacyDlpV2beta1InfoType> InfoTypes { get; set; } 

        /// <summary>Primitive transformation to apply to the info type. [required]</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("primitiveTransformation")]
        public virtual GooglePrivacyDlpV2beta1PrimitiveTransformation PrimitiveTransformation { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A type of transformation that will scan unstructured text and apply various `PrimitiveTransformation`s
    /// to each finding, where the transformation is applied to only values that were identified as a specific
    /// info_type.</summary>
    public class GooglePrivacyDlpV2beta1InfoTypeTransformations : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Transformation for each info type. Cannot specify more than one for a given info type.
        /// [required]</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("transformations")]
        public virtual System.Collections.Generic.IList<GooglePrivacyDlpV2beta1InfoTypeTransformation> Transformations { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Configuration description of the scanning process. When used with redactContent only info_types and
    /// min_likelihood are currently used.</summary>
    public class GooglePrivacyDlpV2beta1InspectConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>When true, excludes type information of the findings.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("excludeTypes")]
        public virtual System.Nullable<bool> ExcludeTypes { get; set; } 

        /// <summary>When true, a contextual quote from the data that triggered a finding is included in the response;
        /// see Finding.quote.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("includeQuote")]
        public virtual System.Nullable<bool> IncludeQuote { get; set; } 

        /// <summary>Configuration of findings limit given for specified info types.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("infoTypeLimits")]
        public virtual System.Collections.Generic.IList<GooglePrivacyDlpV2beta1InfoTypeLimit> InfoTypeLimits { get; set; } 

        /// <summary>Restricts what info_types to look for. The values must correspond to InfoType values returned by
        /// ListInfoTypes or found in documentation. Empty info_types runs all enabled detectors.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("infoTypes")]
        public virtual System.Collections.Generic.IList<GooglePrivacyDlpV2beta1InfoType> InfoTypes { get; set; } 

        /// <summary>Limits the number of findings per content item or long running operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maxFindings")]
        public virtual System.Nullable<int> MaxFindings { get; set; } 

        /// <summary>Only returns findings equal or above this threshold.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("minLikelihood")]
        public virtual string MinLikelihood { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Request to search for potentially sensitive info in a list of items.</summary>
    public class GooglePrivacyDlpV2beta1InspectContentRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Configuration for the inspector.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("inspectConfig")]
        public virtual GooglePrivacyDlpV2beta1InspectConfig InspectConfig { get; set; } 

        /// <summary>The list of items to inspect. Items in a single request are considered "related" unless
        /// inspect_config.independent_inputs is true. Up to 100 are allowed per request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<GooglePrivacyDlpV2beta1ContentItem> Items { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Results of inspecting a list of items.</summary>
    public class GooglePrivacyDlpV2beta1InspectContentResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Each content_item from the request has a result in this list, in the same order as the
        /// request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("results")]
        public virtual System.Collections.Generic.IList<GooglePrivacyDlpV2beta1InspectResult> Results { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Metadata returned within GetOperation for an inspect request.</summary>
    public class GooglePrivacyDlpV2beta1InspectOperationMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The time which this request was started.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual object CreateTime { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("infoTypeStats")]
        public virtual System.Collections.Generic.IList<GooglePrivacyDlpV2beta1InfoTypeStatistics> InfoTypeStats { get; set; } 

        /// <summary>Total size in bytes that were processed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("processedBytes")]
        public virtual System.Nullable<long> ProcessedBytes { get; set; } 

        /// <summary>The inspect config used to create the Operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("requestInspectConfig")]
        public virtual GooglePrivacyDlpV2beta1InspectConfig RequestInspectConfig { get; set; } 

        /// <summary>Optional location to store findings.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("requestOutputConfig")]
        public virtual GooglePrivacyDlpV2beta1OutputStorageConfig RequestOutputConfig { get; set; } 

        /// <summary>The storage config used to create the Operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("requestStorageConfig")]
        public virtual GooglePrivacyDlpV2beta1StorageConfig RequestStorageConfig { get; set; } 

        /// <summary>Estimate of the number of bytes to process.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalEstimatedBytes")]
        public virtual System.Nullable<long> TotalEstimatedBytes { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The operational data.</summary>
    public class GooglePrivacyDlpV2beta1InspectOperationResult : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The server-assigned name, which is only unique within the same service that originally returns it.
        /// If you use the default HTTP mapping, the `name` should have the format of `inspect/results/{id}`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>All the findings for a single scanned item.</summary>
    public class GooglePrivacyDlpV2beta1InspectResult : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>List of findings for an item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("findings")]
        public virtual System.Collections.Generic.IList<GooglePrivacyDlpV2beta1Finding> Findings { get; set; } 

        /// <summary>If true, then this item might have more findings than were returned, and the findings returned are
        /// an arbitrary subset of all findings. The findings list might be truncated because the input items were too
        /// large, or because the server reached the maximum amount of resources allowed for a single API call. For best
        /// results, divide the input into smaller batches.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("findingsTruncated")]
        public virtual System.Nullable<bool> FindingsTruncated { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>k-anonymity metric, used for analysis of reidentification risk.</summary>
    public class GooglePrivacyDlpV2beta1KAnonymityConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional message indicating that each distinct `EntityId` should not contribute to the k-anonymity
        /// count more than once per equivalence class.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityId")]
        public virtual GooglePrivacyDlpV2beta1EntityId EntityId { get; set; } 

        /// <summary>Set of fields to compute k-anonymity over. When multiple fields are specified, they are considered
        /// a single composite key. Structs and repeated data types are not supported; however, nested fields are
        /// supported so long as they are not structs themselves or nested within a repeated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("quasiIds")]
        public virtual System.Collections.Generic.IList<GooglePrivacyDlpV2beta1FieldId> QuasiIds { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The set of columns' values that share the same k-anonymity value.</summary>
    public class GooglePrivacyDlpV2beta1KAnonymityEquivalenceClass : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Size of the equivalence class, for example number of rows with the above set of values.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("equivalenceClassSize")]
        public virtual System.Nullable<long> EquivalenceClassSize { get; set; } 

        /// <summary>Set of values defining the equivalence class. One value per quasi-identifier column in the original
        /// KAnonymity metric message. The order is always the same as the original request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("quasiIdsValues")]
        public virtual System.Collections.Generic.IList<GooglePrivacyDlpV2beta1Value> QuasiIdsValues { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Histogram bucket of equivalence class sizes in the table.</summary>
    public class GooglePrivacyDlpV2beta1KAnonymityHistogramBucket : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Total number of records in this bucket.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bucketSize")]
        public virtual System.Nullable<long> BucketSize { get; set; } 

        /// <summary>Sample of equivalence classes in this bucket. The total number of classes returned per bucket is
        /// capped at 20.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bucketValues")]
        public virtual System.Collections.Generic.IList<GooglePrivacyDlpV2beta1KAnonymityEquivalenceClass> BucketValues { get; set; } 

        /// <summary>Lower bound on the size of the equivalence classes in this bucket.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("equivalenceClassSizeLowerBound")]
        public virtual System.Nullable<long> EquivalenceClassSizeLowerBound { get; set; } 

        /// <summary>Upper bound on the size of the equivalence classes in this bucket.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("equivalenceClassSizeUpperBound")]
        public virtual System.Nullable<long> EquivalenceClassSizeUpperBound { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Result of the k-anonymity computation.</summary>
    public class GooglePrivacyDlpV2beta1KAnonymityResult : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Histogram of k-anonymity equivalence classes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("equivalenceClassHistogramBuckets")]
        public virtual System.Collections.Generic.IList<GooglePrivacyDlpV2beta1KAnonymityHistogramBucket> EquivalenceClassHistogramBuckets { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A unique identifier for a Datastore entity. If a key's partition ID or any of its path kinds or names
    /// are reserved/read-only, the key is reserved/read-only. A reserved/read-only key is forbidden in certain
    /// documented contexts.</summary>
    public class GooglePrivacyDlpV2beta1Key : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Entities are partitioned into subsets, currently identified by a project ID and namespace ID.
        /// Queries are scoped to a single partition.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("partitionId")]
        public virtual GooglePrivacyDlpV2beta1PartitionId PartitionId { get; set; } 

        /// <summary>The entity path. An entity path consists of one or more elements composed of a kind and a string or
        /// numerical identifier, which identify entities. The first element identifies a _root entity_, the second
        /// element identifies a _child_ of the root entity, the third element identifies a child of the second entity,
        /// and so forth. The entities identified by all prefixes of the path are called the element's _ancestors_.
        ///
        /// A path can never be empty, and a path can have at most 100 elements.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("path")]
        public virtual System.Collections.Generic.IList<GooglePrivacyDlpV2beta1PathElement> Path { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A representation of a Datastore kind.</summary>
    public class GooglePrivacyDlpV2beta1KindExpression : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The name of the kind.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Include to use an existing data crypto key wrapped by KMS. Authorization requires the following IAM
    /// permissions when sending a request to perform a crypto transformation using a kms-wrapped crypto key:
    /// dlp.kms.encrypt</summary>
    public class GooglePrivacyDlpV2beta1KmsWrappedCryptoKey : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The resource name of the KMS CryptoKey to use for unwrapping. [required]</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cryptoKeyName")]
        public virtual string CryptoKeyName { get; set; } 

        /// <summary>The wrapped data crypto key. [required]</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("wrappedKey")]
        public virtual string WrappedKey { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>l-diversity metric, used for analysis of reidentification risk.</summary>
    public class GooglePrivacyDlpV2beta1LDiversityConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Set of quasi-identifiers indicating how equivalence classes are defined for the l-diversity
        /// computation. When multiple fields are specified, they are considered a single composite key.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("quasiIds")]
        public virtual System.Collections.Generic.IList<GooglePrivacyDlpV2beta1FieldId> QuasiIds { get; set; } 

        /// <summary>Sensitive field for computing the l-value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sensitiveAttribute")]
        public virtual GooglePrivacyDlpV2beta1FieldId SensitiveAttribute { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The set of columns' values that share the same l-diversity value.</summary>
    public class GooglePrivacyDlpV2beta1LDiversityEquivalenceClass : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Size of the k-anonymity equivalence class.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("equivalenceClassSize")]
        public virtual System.Nullable<long> EquivalenceClassSize { get; set; } 

        /// <summary>Number of distinct sensitive values in this equivalence class.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("numDistinctSensitiveValues")]
        public virtual System.Nullable<long> NumDistinctSensitiveValues { get; set; } 

        /// <summary>Quasi-identifier values defining the k-anonymity equivalence class. The order is always the same as
        /// the original request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("quasiIdsValues")]
        public virtual System.Collections.Generic.IList<GooglePrivacyDlpV2beta1Value> QuasiIdsValues { get; set; } 

        /// <summary>Estimated frequencies of top sensitive values.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("topSensitiveValues")]
        public virtual System.Collections.Generic.IList<GooglePrivacyDlpV2beta1ValueFrequency> TopSensitiveValues { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Histogram bucket of sensitive value frequencies in the table.</summary>
    public class GooglePrivacyDlpV2beta1LDiversityHistogramBucket : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Total number of records in this bucket.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bucketSize")]
        public virtual System.Nullable<long> BucketSize { get; set; } 

        /// <summary>Sample of equivalence classes in this bucket. The total number of classes returned per bucket is
        /// capped at 20.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bucketValues")]
        public virtual System.Collections.Generic.IList<GooglePrivacyDlpV2beta1LDiversityEquivalenceClass> BucketValues { get; set; } 

        /// <summary>Lower bound on the sensitive value frequencies of the equivalence classes in this bucket.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sensitiveValueFrequencyLowerBound")]
        public virtual System.Nullable<long> SensitiveValueFrequencyLowerBound { get; set; } 

        /// <summary>Upper bound on the sensitive value frequencies of the equivalence classes in this bucket.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sensitiveValueFrequencyUpperBound")]
        public virtual System.Nullable<long> SensitiveValueFrequencyUpperBound { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Result of the l-diversity computation.</summary>
    public class GooglePrivacyDlpV2beta1LDiversityResult : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Histogram of l-diversity equivalence class sensitive value frequencies.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sensitiveValueFrequencyHistogramBuckets")]
        public virtual System.Collections.Generic.IList<GooglePrivacyDlpV2beta1LDiversityHistogramBucket> SensitiveValueFrequencyHistogramBuckets { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Response to the ListInfoTypes request.</summary>
    public class GooglePrivacyDlpV2beta1ListInfoTypesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Set of sensitive info types belonging to a category.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("infoTypes")]
        public virtual System.Collections.Generic.IList<GooglePrivacyDlpV2beta1InfoTypeDescription> InfoTypes { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Response to the ListInspectFindings request.</summary>
    public class GooglePrivacyDlpV2beta1ListInspectFindingsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>If not empty, indicates that there may be more results that match the request; this value should be
        /// passed in a new `ListInspectFindingsRequest`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("result")]
        public virtual GooglePrivacyDlpV2beta1InspectResult Result { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Response for ListRootCategories request.</summary>
    public class GooglePrivacyDlpV2beta1ListRootCategoriesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>List of all into type categories supported by the API.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("categories")]
        public virtual System.Collections.Generic.IList<GooglePrivacyDlpV2beta1CategoryDescription> Categories { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Specifies the location of a finding within its source item.</summary>
    public class GooglePrivacyDlpV2beta1Location : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Zero-based byte offsets within a content item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("byteRange")]
        public virtual GooglePrivacyDlpV2beta1Range ByteRange { get; set; } 

        /// <summary>Character offsets within a content item, included when content type is a text. Default charset
        /// assumed to be UTF-8.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("codepointRange")]
        public virtual GooglePrivacyDlpV2beta1Range CodepointRange { get; set; } 

        /// <summary>Field id of the field containing the finding.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fieldId")]
        public virtual GooglePrivacyDlpV2beta1FieldId FieldId { get; set; } 

        /// <summary>Location within an image's pixels.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("imageBoxes")]
        public virtual System.Collections.Generic.IList<GooglePrivacyDlpV2beta1ImageLocation> ImageBoxes { get; set; } 

        /// <summary>Key of the finding.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("recordKey")]
        public virtual GooglePrivacyDlpV2beta1RecordKey RecordKey { get; set; } 

        /// <summary>Location within a `ContentItem.Table`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tableLocation")]
        public virtual GooglePrivacyDlpV2beta1TableLocation TableLocation { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Compute numerical stats over an individual column, including min, max, and quantiles.</summary>
    public class GooglePrivacyDlpV2beta1NumericalStatsConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Field to compute numerical stats on. Supported types are integer, float, date, datetime, timestamp,
        /// time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("field")]
        public virtual GooglePrivacyDlpV2beta1FieldId Field { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Result of the numerical stats computation.</summary>
    public class GooglePrivacyDlpV2beta1NumericalStatsResult : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Maximum value appearing in the column.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maxValue")]
        public virtual GooglePrivacyDlpV2beta1Value MaxValue { get; set; } 

        /// <summary>Minimum value appearing in the column.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("minValue")]
        public virtual GooglePrivacyDlpV2beta1Value MinValue { get; set; } 

        /// <summary>List of 99 values that partition the set of field values into 100 equal sized buckets.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("quantileValues")]
        public virtual System.Collections.Generic.IList<GooglePrivacyDlpV2beta1Value> QuantileValues { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Additional configuration for inspect long running operations.</summary>
    public class GooglePrivacyDlpV2beta1OperationConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Max number of findings per file, Datastore entity, or database row.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maxItemFindings")]
        public virtual System.Nullable<long> MaxItemFindings { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Cloud repository for storing output.</summary>
    public class GooglePrivacyDlpV2beta1OutputStorageConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The path to a Google Cloud Storage location to store output. The bucket must already exist and the
        /// Google APIs service account for DLP must have write permission to write to the given bucket. Results are
        /// split over multiple csv files with each file name matching the pattern "[operation_id]_[count].csv", for
        /// example `3094877188788974909_1.csv`. The `operation_id` matches the identifier for the Operation, and the
        /// `count` is a counter used for tracking the number of files written.
        ///
        /// The CSV file(s) contain the following columns regardless of storage type scanned: - id - info_type -
        /// likelihood - byte size of finding - quote - timestamp
        ///
        /// For Cloud Storage the next columns are:
        ///
        /// - file_path - start_offset
        ///
        /// For Cloud Datastore the next columns are:
        ///
        /// - project_id - namespace_id - path - column_name - offset
        ///
        /// For BigQuery the next columns are:
        ///
        /// - row_number - project_id - dataset_id - table_id</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("storagePath")]
        public virtual GooglePrivacyDlpV2beta1CloudStoragePath StoragePath { get; set; } 

        /// <summary>Store findings in a new table in the dataset.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("table")]
        public virtual GooglePrivacyDlpV2beta1BigQueryTable Table { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Datastore partition ID. A partition ID identifies a grouping of entities. The grouping is always by
    /// project and namespace, however the namespace ID may be empty.
    ///
    /// A partition ID contains several dimensions: project ID and namespace ID.</summary>
    public class GooglePrivacyDlpV2beta1PartitionId : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>If not empty, the ID of the namespace to which the entities belong.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("namespaceId")]
        public virtual string NamespaceId { get; set; } 

        /// <summary>The ID of the project to which the entities belong.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("projectId")]
        public virtual string ProjectId { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A (kind, ID/name) pair used to construct a key path.
    ///
    /// If either name or ID is set, the element is complete. If neither is set, the element is incomplete.</summary>
    public class GooglePrivacyDlpV2beta1PathElement : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The auto-allocated ID of the entity. Never equal to zero. Values less than zero are discouraged and
        /// may not be supported in the future.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>The kind of the entity. A kind matching regex `__.*__` is reserved/read-only. A kind must not
        /// contain more than 1500 bytes when UTF-8 encoded. Cannot be `""`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The name of the entity. A name matching regex `__.*__` is reserved/read-only. A name must not be
        /// more than 1500 bytes when UTF-8 encoded. Cannot be `""`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A rule for transforming a value.</summary>
    public class GooglePrivacyDlpV2beta1PrimitiveTransformation : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("bucketingConfig")]
        public virtual GooglePrivacyDlpV2beta1BucketingConfig BucketingConfig { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("characterMaskConfig")]
        public virtual GooglePrivacyDlpV2beta1CharacterMaskConfig CharacterMaskConfig { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("cryptoHashConfig")]
        public virtual GooglePrivacyDlpV2beta1CryptoHashConfig CryptoHashConfig { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("cryptoReplaceFfxFpeConfig")]
        public virtual GooglePrivacyDlpV2beta1CryptoReplaceFfxFpeConfig CryptoReplaceFfxFpeConfig { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("fixedSizeBucketingConfig")]
        public virtual GooglePrivacyDlpV2beta1FixedSizeBucketingConfig FixedSizeBucketingConfig { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("redactConfig")]
        public virtual GooglePrivacyDlpV2beta1RedactConfig RedactConfig { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("replaceConfig")]
        public virtual GooglePrivacyDlpV2beta1ReplaceValueConfig ReplaceConfig { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("replaceWithInfoTypeConfig")]
        public virtual GooglePrivacyDlpV2beta1ReplaceWithInfoTypeConfig ReplaceWithInfoTypeConfig { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("timePartConfig")]
        public virtual GooglePrivacyDlpV2beta1TimePartConfig TimePartConfig { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Privacy metric to compute for reidentification risk analysis.</summary>
    public class GooglePrivacyDlpV2beta1PrivacyMetric : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("categoricalStatsConfig")]
        public virtual GooglePrivacyDlpV2beta1CategoricalStatsConfig CategoricalStatsConfig { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("kAnonymityConfig")]
        public virtual GooglePrivacyDlpV2beta1KAnonymityConfig KAnonymityConfig { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("lDiversityConfig")]
        public virtual GooglePrivacyDlpV2beta1LDiversityConfig LDiversityConfig { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("numericalStatsConfig")]
        public virtual GooglePrivacyDlpV2beta1NumericalStatsConfig NumericalStatsConfig { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A representation of a Datastore property in a projection.</summary>
    public class GooglePrivacyDlpV2beta1Projection : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The property to project.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("property")]
        public virtual GooglePrivacyDlpV2beta1PropertyReference Property { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A reference to a property relative to the Datastore kind expressions.</summary>
    public class GooglePrivacyDlpV2beta1PropertyReference : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The name of the property. If name includes "."s, it may be interpreted as a property name
        /// path.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Generic half-open interval [start, end)</summary>
    public class GooglePrivacyDlpV2beta1Range : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Index of the last character of the range (exclusive).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("end")]
        public virtual System.Nullable<long> End { get; set; } 

        /// <summary>Index of the first character of the range (inclusive).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("start")]
        public virtual System.Nullable<long> Start { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A condition for determing whether a transformation should be applied to a field.</summary>
    public class GooglePrivacyDlpV2beta1RecordCondition : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("expressions")]
        public virtual GooglePrivacyDlpV2beta1Expressions Expressions { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Message for a unique key indicating a record that contains a finding.</summary>
    public class GooglePrivacyDlpV2beta1RecordKey : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("cloudStorageKey")]
        public virtual GooglePrivacyDlpV2beta1CloudStorageKey CloudStorageKey { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("datastoreKey")]
        public virtual GooglePrivacyDlpV2beta1DatastoreKey DatastoreKey { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Configuration to suppress records whose suppression conditions evaluate to true.</summary>
    public class GooglePrivacyDlpV2beta1RecordSuppression : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("condition")]
        public virtual GooglePrivacyDlpV2beta1RecordCondition Condition { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A type of transformation that is applied over structured data such as a table.</summary>
    public class GooglePrivacyDlpV2beta1RecordTransformations : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Transform the record by applying various field transformations.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fieldTransformations")]
        public virtual System.Collections.Generic.IList<GooglePrivacyDlpV2beta1FieldTransformation> FieldTransformations { get; set; } 

        /// <summary>Configuration defining which records get suppressed entirely. Records that match any suppression
        /// rule are omitted from the output [optional].</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("recordSuppressions")]
        public virtual System.Collections.Generic.IList<GooglePrivacyDlpV2beta1RecordSuppression> RecordSuppressions { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Redact a given value. For example, if used with an `InfoTypeTransformation` transforming PHONE_NUMBER,
    /// and input 'My phone number is 206-555-0123', the output would be 'My phone number is '.</summary>
    public class GooglePrivacyDlpV2beta1RedactConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Request to search for potentially sensitive info in a list of items and replace it with a default or
    /// provided content.</summary>
    public class GooglePrivacyDlpV2beta1RedactContentRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The configuration for specifying what content to redact from images.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("imageRedactionConfigs")]
        public virtual System.Collections.Generic.IList<GooglePrivacyDlpV2beta1ImageRedactionConfig> ImageRedactionConfigs { get; set; } 

        /// <summary>Configuration for the inspector.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("inspectConfig")]
        public virtual GooglePrivacyDlpV2beta1InspectConfig InspectConfig { get; set; } 

        /// <summary>The list of items to inspect. Up to 100 are allowed per request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<GooglePrivacyDlpV2beta1ContentItem> Items { get; set; } 

        /// <summary>The strings to replace findings text findings with. Must specify at least one of these or one
        /// ImageRedactionConfig if redacting images.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("replaceConfigs")]
        public virtual System.Collections.Generic.IList<GooglePrivacyDlpV2beta1ReplaceConfig> ReplaceConfigs { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Results of redacting a list of items.</summary>
    public class GooglePrivacyDlpV2beta1RedactContentResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The redacted content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<GooglePrivacyDlpV2beta1ContentItem> Items { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class GooglePrivacyDlpV2beta1ReplaceConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Type of information to replace. Only one ReplaceConfig per info_type should be provided. If
        /// ReplaceConfig does not have an info_type, the DLP API matches it against all info_types that are found but
        /// not specified in another ReplaceConfig.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("infoType")]
        public virtual GooglePrivacyDlpV2beta1InfoType InfoType { get; set; } 

        /// <summary>Content replacing sensitive information of given type. Max 256 chars.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("replaceWith")]
        public virtual string ReplaceWith { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Replace each input value with a given `Value`.</summary>
    public class GooglePrivacyDlpV2beta1ReplaceValueConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Value to replace it with.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("newValue")]
        public virtual GooglePrivacyDlpV2beta1Value NewValue { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Replace each matching finding with the name of the info_type.</summary>
    public class GooglePrivacyDlpV2beta1ReplaceWithInfoTypeConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Metadata returned within the
    /// [`riskAnalysis.operations.get`](/dlp/docs/reference/rest/v2beta1/riskAnalysis.operations/get) for risk
    /// analysis.</summary>
    public class GooglePrivacyDlpV2beta1RiskAnalysisOperationMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The time which this request was started.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual object CreateTime { get; set; } 

        /// <summary>Privacy metric to compute.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("requestedPrivacyMetric")]
        public virtual GooglePrivacyDlpV2beta1PrivacyMetric RequestedPrivacyMetric { get; set; } 

        /// <summary>Input dataset to compute metrics over.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("requestedSourceTable")]
        public virtual GooglePrivacyDlpV2beta1BigQueryTable RequestedSourceTable { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Result of a risk analysis [`Operation`](/dlp/docs/reference/rest/v2beta1/inspect.operations)
    /// request.</summary>
    public class GooglePrivacyDlpV2beta1RiskAnalysisOperationResult : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("categoricalStatsResult")]
        public virtual GooglePrivacyDlpV2beta1CategoricalStatsResult CategoricalStatsResult { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("kAnonymityResult")]
        public virtual GooglePrivacyDlpV2beta1KAnonymityResult KAnonymityResult { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("lDiversityResult")]
        public virtual GooglePrivacyDlpV2beta1LDiversityResult LDiversityResult { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("numericalStatsResult")]
        public virtual GooglePrivacyDlpV2beta1NumericalStatsResult NumericalStatsResult { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class GooglePrivacyDlpV2beta1Row : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("values")]
        public virtual System.Collections.Generic.IList<GooglePrivacyDlpV2beta1Value> Values { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Shared message indicating Cloud storage type.</summary>
    public class GooglePrivacyDlpV2beta1StorageConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>BigQuery options specification.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bigQueryOptions")]
        public virtual GooglePrivacyDlpV2beta1BigQueryOptions BigQueryOptions { get; set; } 

        /// <summary>Google Cloud Storage options specification.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cloudStorageOptions")]
        public virtual GooglePrivacyDlpV2beta1CloudStorageOptions CloudStorageOptions { get; set; } 

        /// <summary>Google Cloud Datastore options specification.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("datastoreOptions")]
        public virtual GooglePrivacyDlpV2beta1DatastoreOptions DatastoreOptions { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A collection that informs the user the number of times a particular `TransformationResultCode` and
    /// error details occurred.</summary>
    public class GooglePrivacyDlpV2beta1SummaryResult : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("code")]
        public virtual string Code { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("count")]
        public virtual System.Nullable<long> Count { get; set; } 

        /// <summary>A place for warnings or errors to show up if a transformation didn't work as expected.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("details")]
        public virtual string Details { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Structured content to inspect. Up to 50,000 `Value`s per request allowed.</summary>
    public class GooglePrivacyDlpV2beta1Table : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("headers")]
        public virtual System.Collections.Generic.IList<GooglePrivacyDlpV2beta1FieldId> Headers { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("rows")]
        public virtual System.Collections.Generic.IList<GooglePrivacyDlpV2beta1Row> Rows { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Location of a finding within a `ContentItem.Table`.</summary>
    public class GooglePrivacyDlpV2beta1TableLocation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The zero-based index of the row where the finding is located.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rowIndex")]
        public virtual System.Nullable<long> RowIndex { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>For use with `Date`, `Timestamp`, and `TimeOfDay`, extract or preserve a portion of the
    /// value.</summary>
    public class GooglePrivacyDlpV2beta1TimePartConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("partToExtract")]
        public virtual string PartToExtract { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Summary of a single tranformation.</summary>
    public class GooglePrivacyDlpV2beta1TransformationSummary : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Set if the transformation was limited to a specific FieldId.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("field")]
        public virtual GooglePrivacyDlpV2beta1FieldId Field { get; set; } 

        /// <summary>The field transformation that was applied. This list will contain multiple only in the case of
        /// errors.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fieldTransformations")]
        public virtual System.Collections.Generic.IList<GooglePrivacyDlpV2beta1FieldTransformation> FieldTransformations { get; set; } 

        /// <summary>Set if the transformation was limited to a specific info_type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("infoType")]
        public virtual GooglePrivacyDlpV2beta1InfoType InfoType { get; set; } 

        /// <summary>The specific suppression option these stats apply to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("recordSuppress")]
        public virtual GooglePrivacyDlpV2beta1RecordSuppression RecordSuppress { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("results")]
        public virtual System.Collections.Generic.IList<GooglePrivacyDlpV2beta1SummaryResult> Results { get; set; } 

        /// <summary>The specific transformation these stats apply to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("transformation")]
        public virtual GooglePrivacyDlpV2beta1PrimitiveTransformation Transformation { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Use this to have a random data crypto key generated. It will be discarded after the operation/request
    /// finishes.</summary>
    public class GooglePrivacyDlpV2beta1TransientCryptoKey : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Name of the key. [required] This is an arbitrary string used to differentiate different keys. A
        /// unique key is generated per name: two separate `TransientCryptoKey` protos share the same generated key if
        /// their names are the same. When the data crypto key is generated, this name is not used in any way (repeating
        /// the api call will result in a different key being generated).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Using raw keys is prone to security risks due to accidentally leaking the key. Choose another type of
    /// key if possible.</summary>
    public class GooglePrivacyDlpV2beta1UnwrappedCryptoKey : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The AES 128/192/256 bit key. [required]</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("key")]
        public virtual string Key { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Set of primitive values supported by the system.</summary>
    public class GooglePrivacyDlpV2beta1Value : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("booleanValue")]
        public virtual System.Nullable<bool> BooleanValue { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("dateValue")]
        public virtual GoogleTypeDate DateValue { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("floatValue")]
        public virtual System.Nullable<double> FloatValue { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("integerValue")]
        public virtual System.Nullable<long> IntegerValue { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("stringValue")]
        public virtual string StringValue { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("timeValue")]
        public virtual GoogleTypeTimeOfDay TimeValue { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("timestampValue")]
        public virtual object TimestampValue { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A value of a field, including its frequency.</summary>
    public class GooglePrivacyDlpV2beta1ValueFrequency : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>How many times the value is contained in the field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("count")]
        public virtual System.Nullable<long> Count { get; set; } 

        /// <summary>A value contained in the field in question.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual GooglePrivacyDlpV2beta1Value Value { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A
    /// typical example is to use it as the request or the response type of an API method. For instance:
    ///
    /// service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
    ///
    /// The JSON representation for `Empty` is empty JSON object `{}`.</summary>
    public class GoogleProtobufEmpty : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The `Status` type defines a logical error model that is suitable for different programming
    /// environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). The error model
    /// is designed to be:
    ///
    /// - Simple to use and understand for most users - Flexible enough to meet unexpected needs
    ///
    /// # Overview
    ///
    /// The `Status` message contains three pieces of data: error code, error message, and error details. The error code
    /// should be an enum value of google.rpc.Code, but it may accept additional error codes if needed.  The error
    /// message should be a developer-facing English message that helps developers *understand* and *resolve* the error.
    /// If a localized user-facing error message is needed, put the localized message in the error details or localize
    /// it in the client. The optional error details may contain arbitrary information about the error. There is a
    /// predefined set of error detail types in the package `google.rpc` that can be used for common error conditions.
    ///
    /// # Language mapping
    ///
    /// The `Status` message is the logical representation of the error model, but it is not necessarily the actual wire
    /// format. When the `Status` message is exposed in different client libraries and different wire protocols, it can
    /// be mapped differently. For example, it will likely be mapped to some exceptions in Java, but more likely mapped
    /// to some error codes in C.
    ///
    /// # Other uses
    ///
    /// The error model and the `Status` message can be used in a variety of environments, either with or without APIs,
    /// to provide a consistent developer experience across different environments.
    ///
    /// Example uses of this error model include:
    ///
    /// - Partial errors. If a service needs to return partial errors to the client, it may embed the `Status` in the
    /// normal response to indicate the partial errors.
    ///
    /// - Workflow errors. A typical workflow has multiple steps. Each step may have a `Status` message for error
    /// reporting.
    ///
    /// - Batch operations. If a client uses batch request and batch response, the `Status` message should be used
    /// directly inside batch response, one for each error sub-response.
    ///
    /// - Asynchronous operations. If an API call embeds asynchronous operation results in its response, the status of
    /// those operations should be represented directly using the `Status` message.
    ///
    /// - Logging. If some API errors are stored in logs, the message `Status` could be used directly after any
    /// stripping needed for security/privacy reasons.</summary>
    public class GoogleRpcStatus : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The status code, which should be an enum value of google.rpc.Code.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("code")]
        public virtual System.Nullable<int> Code { get; set; } 

        /// <summary>A list of messages that carry the error details.  There is a common set of message types for APIs
        /// to use.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("details")]
        public virtual System.Collections.Generic.IList<System.Collections.Generic.IDictionary<string,object>> Details { get; set; } 

        /// <summary>A developer-facing error message, which should be in English. Any user-facing error message should
        /// be localized and sent in the google.rpc.Status.details field, or localized by the client.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("message")]
        public virtual string Message { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents a whole calendar date, e.g. date of birth. The time of day and time zone are either
    /// specified elsewhere or are not significant. The date is relative to the Proleptic Gregorian Calendar. The day
    /// may be 0 to represent a year and month where the day is not significant, e.g. credit card expiration date. The
    /// year may be 0 to represent a month and day independent of year, e.g. anniversary date. Related types are
    /// google.type.TimeOfDay and `google.protobuf.Timestamp`.</summary>
    public class GoogleTypeDate : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a
        /// year/month where the day is not significant.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("day")]
        public virtual System.Nullable<int> Day { get; set; } 

        /// <summary>Month of year. Must be from 1 to 12.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("month")]
        public virtual System.Nullable<int> Month { get; set; } 

        /// <summary>Year of date. Must be from 1 to 9999, or 0 if specifying a date without a year.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("year")]
        public virtual System.Nullable<int> Year { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents a time of day. The date and time zone are either not significant or are specified elsewhere.
    /// An API may choose to allow leap seconds. Related types are google.type.Date and
    /// `google.protobuf.Timestamp`.</summary>
    public class GoogleTypeTimeOfDay : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value
        /// "24:00:00" for scenarios like business closing time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hours")]
        public virtual System.Nullable<int> Hours { get; set; } 

        /// <summary>Minutes of hour of day. Must be from 0 to 59.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("minutes")]
        public virtual System.Nullable<int> Minutes { get; set; } 

        /// <summary>Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nanos")]
        public virtual System.Nullable<int> Nanos { get; set; } 

        /// <summary>Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it
        /// allows leap-seconds.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("seconds")]
        public virtual System.Nullable<int> Seconds { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }
}
