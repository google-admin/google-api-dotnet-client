// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by google-apis-code-generator 1.5.1
//     C# generator version: 1.10.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

/**
 * \brief
 *   Google Affiliate Network API Version v1beta1
 *
 * \section ApiInfo API Version Information
 *    <table>
 *      <tr><th>API
 *          <td><a href='https://developers.google.com/affiliate-network/'>Google Affiliate Network API</a>
 *      <tr><th>API Version<td>v1beta1
 *      <tr><th>API Rev<td>20130205 (0)
 *      <tr><th>API Docs
 *          <td><a href='https://developers.google.com/affiliate-network/'>
 *              https://developers.google.com/affiliate-network/</a>
 *      <tr><th>Discovery Name<td>gan
 *    </table>
 *
 * \section ForMoreInfo For More Information
 *
 * The complete API documentation for using Google Affiliate Network API can be found at
 * <a href='https://developers.google.com/affiliate-network/'>https://developers.google.com/affiliate-network/</a>.
 *
 * For more information about the Google APIs Client Library for .NET, see
 * <a href='https://developers.google.com/api-client-library/dotnet/get_started'>
 * https://developers.google.com/api-client-library/dotnet/get_started</a>
 */

namespace Google.Apis.Gan.v1beta1
{
    /// <summary>The Gan Service.</summary>
    public class GanService : Google.Apis.Services.BaseClientService
    {
        /// <summary>The API version.</summary>
        public const string Version = "v1beta1";

        /// <summary>The discovery version used to generate this service.</summary>
        public static Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed =
            Google.Apis.Discovery.DiscoveryVersion.Version_1_0;

        /// <summary>Constructs a new service.</summary>
        public GanService() :
            this(new Google.Apis.Services.BaseClientService.Initializer()) {}

        /// <summary>Constructs a new service.</summary>
        /// <param name="initializer">The service initializer.</param>
        public GanService(Google.Apis.Services.BaseClientService.Initializer initializer)
            : base(initializer)
        {
            advertisers = new AdvertisersResource(this);
            ccOffers = new CcOffersResource(this);
            events = new EventsResource(this);
            links = new LinksResource(this);
            publishers = new PublishersResource(this);
            reports = new ReportsResource(this);
        }

        /// <summary>Gets the service supported features.</summary>
        public override System.Collections.Generic.IList<string> Features
        {
            get { return new string[0]; }
        }

        /// <summary>Gets the service name.</summary>
        public override string Name
        {
            get { return "gan"; }
        }

        /// <summary>Gets the service base URI.</summary>
        public override string BaseUri
        {
            get { return "https://www.googleapis.com/gan/v1beta1/"; }
        }

        /// <summary>Gets the service base path.</summary>
        public override string BasePath
        {
            get { return "gan/v1beta1/"; }
        }





        private readonly AdvertisersResource advertisers;

        /// <summary>Gets the Advertisers resource.</summary>
        public virtual AdvertisersResource Advertisers
        {
            get { return advertisers; }
        }

        private readonly CcOffersResource ccOffers;

        /// <summary>Gets the CcOffers resource.</summary>
        public virtual CcOffersResource CcOffers
        {
            get { return ccOffers; }
        }

        private readonly EventsResource events;

        /// <summary>Gets the Events resource.</summary>
        public virtual EventsResource Events
        {
            get { return events; }
        }

        private readonly LinksResource links;

        /// <summary>Gets the Links resource.</summary>
        public virtual LinksResource Links
        {
            get { return links; }
        }

        private readonly PublishersResource publishers;

        /// <summary>Gets the Publishers resource.</summary>
        public virtual PublishersResource Publishers
        {
            get { return publishers; }
        }

        private readonly ReportsResource reports;

        /// <summary>Gets the Reports resource.</summary>
        public virtual ReportsResource Reports
        {
            get { return reports; }
        }
    }

    ///<summary>A base abstract class for Gan requests.</summary>
    public abstract class GanBaseServiceRequest<TResponse> : Google.Apis.Requests.ClientServiceRequest<TResponse>
    {
        ///<summary>Constructs a new GanBaseServiceRequest instance.</summary>
        protected GanBaseServiceRequest(Google.Apis.Services.IClientService service)
            : base(service)
        {
        }

        /// <summary>Data format for the response.</summary>
        /// [default: json]
        [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<AltEnum> Alt { get; set; }

        /// <summary>Data format for the response.</summary>
        public enum AltEnum
        {
            /// <summary>Responses with Content-Type of application/json</summary>
            [Google.Apis.Util.StringValueAttribute("json")]
            Json,
        }

        /// <summary>Selector specifying which fields to include in a partial response.</summary>
        [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Fields { get; set; }

        /// <summary>API key. Your API key identifies your project and provides you with API access, quota, and reports.
        /// Required unless you provide an OAuth 2.0 token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("key", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Key { get; set; }

        /// <summary>OAuth 2.0 token for the current user.</summary>
        [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string OauthToken { get; set; }

        /// <summary>Returns response with indentations and line breaks.</summary>
        /// [default: true]
        [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<bool> PrettyPrint { get; set; }

        /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string
        /// assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.</summary>
        [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string QuotaUser { get; set; }

        /// <summary>IP address of the site where the request originates. Use this if you want to enforce per-user
        /// limits.</summary>
        [Google.Apis.Util.RequestParameterAttribute("userIp", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UserIp { get; set; }

        /// <summary>Initializes Gan parameter list.</summary>
        protected override void InitParameters()
        {
            base.InitParameters();

            RequestParameters.Add(
                "alt", new Google.Apis.Discovery.Parameter
                {
                    Name = "alt",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "json",
                    Pattern = null,
                });
            RequestParameters.Add(
                "fields", new Google.Apis.Discovery.Parameter
                {
                    Name = "fields",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "key", new Google.Apis.Discovery.Parameter
                {
                    Name = "key",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "oauth_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "oauth_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "prettyPrint", new Google.Apis.Discovery.Parameter
                {
                    Name = "prettyPrint",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "true",
                    Pattern = null,
                });
            RequestParameters.Add(
                "quotaUser", new Google.Apis.Discovery.Parameter
                {
                    Name = "quotaUser",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "userIp", new Google.Apis.Discovery.Parameter
                {
                    Name = "userIp",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
        }
    }

    /// <summary>The "advertisers" collection of methods.</summary>
    public class AdvertisersResource
    {
        private const string Resource = "advertisers";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public AdvertisersResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Retrieves data about a single advertiser if that the requesting advertiser/publisher has access to
        /// it. Only publishers can lookup advertisers. Advertisers can request information about themselves by omitting
        /// the advertiserId query parameter.</summary>
        /// <param name="role">The role of the requester. Valid values: 'advertisers' or 'publishers'.</param>
        /// <param
        /// name="roleId">The ID of the requesting advertiser or publisher.</param>
        public virtual GetRequest Get(GetRequest.RoleEnum role, string roleId)
        {
            return new GetRequest(service, role, roleId);
        }

        /// <summary>Retrieves data about a single advertiser if that the requesting advertiser/publisher has access to
        /// it. Only publishers can lookup advertisers. Advertisers can request information about themselves by omitting
        /// the advertiserId query parameter.</summary>
        public class GetRequest : GanBaseServiceRequest<Google.Apis.Gan.v1beta1.Data.Advertiser>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, GetRequest.RoleEnum role, string roleId)
                : base(service)
            {
                Role = role;
                RoleId = roleId;
                InitParameters();
            }


            /// <summary>The role of the requester. Valid values: 'advertisers' or 'publishers'.</summary>
            [Google.Apis.Util.RequestParameterAttribute("role", Google.Apis.Util.RequestParameterType.Path)]
            public virtual RoleEnum Role { get; private set; }

            /// <summary>The role of the requester. Valid values: 'advertisers' or 'publishers'.</summary>
            public enum RoleEnum
            {
                /// <summary>The requester is requesting as an advertiser.</summary>
                [Google.Apis.Util.StringValueAttribute("advertisers")]
                Advertisers,
                /// <summary>The requester is requesting as a publisher.</summary>
                [Google.Apis.Util.StringValueAttribute("publishers")]
                Publishers,
            }

            /// <summary>The ID of the requesting advertiser or publisher.</summary>
            [Google.Apis.Util.RequestParameterAttribute("roleId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string RoleId { get; private set; }

            /// <summary>The ID of the advertiser to look up. Optional.</summary>
            [Google.Apis.Util.RequestParameterAttribute("advertiserId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string AdvertiserId { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{role}/{roleId}/advertiser"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "role", new Google.Apis.Discovery.Parameter
                    {
                        Name = "role",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "roleId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "roleId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "advertiserId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "advertiserId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves data about all advertisers that the requesting advertiser/publisher has access
        /// to.</summary>
        /// <param name="role">The role of the requester. Valid values: 'advertisers' or 'publishers'.</param>
        /// <param
        /// name="roleId">The ID of the requesting advertiser or publisher.</param>
        public virtual ListRequest List(ListRequest.RoleEnum role, string roleId)
        {
            return new ListRequest(service, role, roleId);
        }

        /// <summary>Retrieves data about all advertisers that the requesting advertiser/publisher has access
        /// to.</summary>
        public class ListRequest : GanBaseServiceRequest<Google.Apis.Gan.v1beta1.Data.Advertisers>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, ListRequest.RoleEnum role, string roleId)
                : base(service)
            {
                Role = role;
                RoleId = roleId;
                InitParameters();
            }


            /// <summary>The role of the requester. Valid values: 'advertisers' or 'publishers'.</summary>
            [Google.Apis.Util.RequestParameterAttribute("role", Google.Apis.Util.RequestParameterType.Path)]
            public virtual RoleEnum Role { get; private set; }

            /// <summary>The role of the requester. Valid values: 'advertisers' or 'publishers'.</summary>
            public enum RoleEnum
            {
                /// <summary>The requester is requesting as an advertiser.</summary>
                [Google.Apis.Util.StringValueAttribute("advertisers")]
                Advertisers,
                /// <summary>The requester is requesting as a publisher.</summary>
                [Google.Apis.Util.StringValueAttribute("publishers")]
                Publishers,
            }

            /// <summary>The ID of the requesting advertiser or publisher.</summary>
            [Google.Apis.Util.RequestParameterAttribute("roleId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string RoleId { get; private set; }

            /// <summary>Caret(^) delimted list of advertiser categories. Valid categories are defined here:
            /// http://www.google.com/support/affiliatenetwork/advertiser/bin/answer.py?hl=en=107581. Filters out all
            /// advertisers not in one of the given advertiser categories. Optional.</summary>
            [Google.Apis.Util.RequestParameterAttribute("advertiserCategory", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string AdvertiserCategory { get; set; }

            /// <summary>Max number of items to return in this page. Optional. Defaults to 20.</summary>
            /// [minimum: 0]
            /// [maximum: 100]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Filters out all advertisers that have a ninety day EPC average lower than the given value
            /// (inclusive). Min value: 0.0. Optional.</summary>
            [Google.Apis.Util.RequestParameterAttribute("minNinetyDayEpc", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<double> MinNinetyDayEpc { get; set; }

            /// <summary>A value between 1 and 4, where 1 represents the quartile of advertisers with the lowest ranks
            /// and 4 represents the quartile of advertisers with the highest ranks. Filters out all advertisers with a
            /// lower rank than the given quartile. For example if a 2 was given only advertisers with a payout rank of
            /// 25 or higher would be included. Optional.</summary>
            /// [minimum: 1]
            /// [maximum: 4]
            [Google.Apis.Util.RequestParameterAttribute("minPayoutRank", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MinPayoutRank { get; set; }

            /// <summary>Filters out all advertisers that have a seven day EPC average lower than the given value
            /// (inclusive). Min value: 0.0. Optional.</summary>
            [Google.Apis.Util.RequestParameterAttribute("minSevenDayEpc", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<double> MinSevenDayEpc { get; set; }

            /// <summary>The value of 'nextPageToken' from the previous page. Optional.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>Filters out all advertisers for which do not have the given relationship status with the
            /// requesting publisher.</summary>
            [Google.Apis.Util.RequestParameterAttribute("relationshipStatus", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<RelationshipStatusEnum> RelationshipStatus { get; set; }

            /// <summary>Filters out all advertisers for which do not have the given relationship status with the
            /// requesting publisher.</summary>
            public enum RelationshipStatusEnum
            {
                /// <summary>An advertiser that has approved your application.</summary>
                [Google.Apis.Util.StringValueAttribute("approved")]
                Approved,
                /// <summary>An advertiser program that's accepting new publishers.</summary>
                [Google.Apis.Util.StringValueAttribute("available")]
                Available,
                /// <summary>Deactivated means either the advertiser has removed you from their program, or it could
                /// also mean that you chose to remove yourself from the advertiser's program.</summary>
                [Google.Apis.Util.StringValueAttribute("deactivated")]
                Deactivated,
                /// <summary>An advertiser that did not approve your application.</summary>
                [Google.Apis.Util.StringValueAttribute("declined")]
                Declined,
                /// <summary>An advertiser program that you've already applied to, but they haven't yet decided to
                /// approve or decline your application.</summary>
                [Google.Apis.Util.StringValueAttribute("pending")]
                Pending,
            }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{role}/{roleId}/advertisers"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "role", new Google.Apis.Discovery.Parameter
                    {
                        Name = "role",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "roleId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "roleId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "advertiserCategory", new Google.Apis.Discovery.Parameter
                    {
                        Name = "advertiserCategory",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "minNinetyDayEpc", new Google.Apis.Discovery.Parameter
                    {
                        Name = "minNinetyDayEpc",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "minPayoutRank", new Google.Apis.Discovery.Parameter
                    {
                        Name = "minPayoutRank",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "minSevenDayEpc", new Google.Apis.Discovery.Parameter
                    {
                        Name = "minSevenDayEpc",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "relationshipStatus", new Google.Apis.Discovery.Parameter
                    {
                        Name = "relationshipStatus",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "ccOffers" collection of methods.</summary>
    public class CcOffersResource
    {
        private const string Resource = "ccOffers";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public CcOffersResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Retrieves credit card offers for the given publisher.</summary>
        /// <param name="publisher">The ID of the publisher in question.</param>
        public virtual ListRequest List(string publisher)
        {
            return new ListRequest(service, publisher);
        }

        /// <summary>Retrieves credit card offers for the given publisher.</summary>
        public class ListRequest : GanBaseServiceRequest<Google.Apis.Gan.v1beta1.Data.CcOffers>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string publisher)
                : base(service)
            {
                Publisher = publisher;
                InitParameters();
            }


            /// <summary>The ID of the publisher in question.</summary>
            [Google.Apis.Util.RequestParameterAttribute("publisher", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Publisher { get; private set; }

            /// <summary>The advertiser ID of a card issuer whose offers to include. Optional, may be
            /// repeated.</summary>
            [Google.Apis.Util.RequestParameterAttribute("advertiser", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Advertiser { get; set; }

            /// <summary>The set of fields to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("projection", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<ProjectionEnum> Projection { get; set; }

            /// <summary>The set of fields to return.</summary>
            public enum ProjectionEnum
            {
                /// <summary>Include all offer fields. This is the default.</summary>
                [Google.Apis.Util.StringValueAttribute("full")]
                Full,
                /// <summary>Include only the basic fields needed to display an offer.</summary>
                [Google.Apis.Util.StringValueAttribute("summary")]
                Summary,
            }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "publishers/{publisher}/ccOffers"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "publisher", new Google.Apis.Discovery.Parameter
                    {
                        Name = "publisher",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "advertiser", new Google.Apis.Discovery.Parameter
                    {
                        Name = "advertiser",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "projection", new Google.Apis.Discovery.Parameter
                    {
                        Name = "projection",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "events" collection of methods.</summary>
    public class EventsResource
    {
        private const string Resource = "events";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public EventsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Retrieves event data for a given advertiser/publisher.</summary>
        /// <param name="role">The role of the requester. Valid values: 'advertisers' or 'publishers'.</param>
        /// <param
        /// name="roleId">The ID of the requesting advertiser or publisher.</param>
        public virtual ListRequest List(ListRequest.RoleEnum role, string roleId)
        {
            return new ListRequest(service, role, roleId);
        }

        /// <summary>Retrieves event data for a given advertiser/publisher.</summary>
        public class ListRequest : GanBaseServiceRequest<Google.Apis.Gan.v1beta1.Data.Events>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, ListRequest.RoleEnum role, string roleId)
                : base(service)
            {
                Role = role;
                RoleId = roleId;
                InitParameters();
            }


            /// <summary>The role of the requester. Valid values: 'advertisers' or 'publishers'.</summary>
            [Google.Apis.Util.RequestParameterAttribute("role", Google.Apis.Util.RequestParameterType.Path)]
            public virtual RoleEnum Role { get; private set; }

            /// <summary>The role of the requester. Valid values: 'advertisers' or 'publishers'.</summary>
            public enum RoleEnum
            {
                /// <summary>The requester is requesting as an advertiser.</summary>
                [Google.Apis.Util.StringValueAttribute("advertisers")]
                Advertisers,
                /// <summary>The requester is requesting as a publisher.</summary>
                [Google.Apis.Util.StringValueAttribute("publishers")]
                Publishers,
            }

            /// <summary>The ID of the requesting advertiser or publisher.</summary>
            [Google.Apis.Util.RequestParameterAttribute("roleId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string RoleId { get; private set; }

            /// <summary>Caret(^) delimited list of advertiser IDs. Filters out all events that do not reference one of
            /// the given advertiser IDs. Only used when under publishers role. Optional.</summary>
            [Google.Apis.Util.RequestParameterAttribute("advertiserId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string AdvertiserId { get; set; }

            /// <summary>Filters out all charge events that are not of the given charge type. Valid values: 'other',
            /// 'slotting_fee', 'monthly_minimum', 'tier_bonus', 'credit', 'debit'. Optional.</summary>
            [Google.Apis.Util.RequestParameterAttribute("chargeType", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<ChargeTypeEnum> ChargeType { get; set; }

            /// <summary>Filters out all charge events that are not of the given charge type. Valid values: 'other',
            /// 'slotting_fee', 'monthly_minimum', 'tier_bonus', 'credit', 'debit'. Optional.</summary>
            public enum ChargeTypeEnum
            {
                /// <summary>A credit increases the publisher's payout amount and decreases the advertiser's invoice
                /// amount.</summary>
                [Google.Apis.Util.StringValueAttribute("credit")]
                Credit,
                /// <summary>A debit reduces the publisher's payout and increases the advertiser's invoice
                /// amount.</summary>
                [Google.Apis.Util.StringValueAttribute("debit")]
                Debit,
                /// <summary>A payment made to Google by an advertiser as a minimum monthly network fee.</summary>
                [Google.Apis.Util.StringValueAttribute("monthly_minimum")]
                MonthlyMinimum,
                /// <summary>Catch all. Default if unset</summary>
                [Google.Apis.Util.StringValueAttribute("other")]
                Other,
                /// <summary>A one time payment made from an advertiser to a publisher.</summary>
                [Google.Apis.Util.StringValueAttribute("slotting_fee")]
                SlottingFee,
                /// <summary>A payment from an advertiser to a publisher for the publisher maintaining a high tier
                /// level</summary>
                [Google.Apis.Util.StringValueAttribute("tier_bonus")]
                TierBonus,
            }

            /// <summary>Filters out all events later than given date. Optional. Defaults to 24 hours after
            /// eventMin.</summary>
            [Google.Apis.Util.RequestParameterAttribute("eventDateMax", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string EventDateMax { get; set; }

            /// <summary>Filters out all events earlier than given date. Optional. Defaults to 24 hours from current
            /// date/time.</summary>
            [Google.Apis.Util.RequestParameterAttribute("eventDateMin", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string EventDateMin { get; set; }

            /// <summary>Caret(^) delimited list of link IDs. Filters out all events that do not reference one of the
            /// given link IDs. Optional.</summary>
            [Google.Apis.Util.RequestParameterAttribute("linkId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string LinkId { get; set; }

            /// <summary>Max number of offers to return in this page. Optional. Defaults to 20.</summary>
            /// [minimum: 0]
            /// [maximum: 100]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Caret(^) delimited list of member IDs. Filters out all events that do not reference one of the
            /// given member IDs. Optional.</summary>
            [Google.Apis.Util.RequestParameterAttribute("memberId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string MemberId { get; set; }

            /// <summary>Filters out all events modified later than given date. Optional. Defaults to 24 hours after
            /// modifyDateMin, if modifyDateMin is explicitly set.</summary>
            [Google.Apis.Util.RequestParameterAttribute("modifyDateMax", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ModifyDateMax { get; set; }

            /// <summary>Filters out all events modified earlier than given date. Optional. Defaults to 24 hours before
            /// the current modifyDateMax, if modifyDateMax is explicitly set.</summary>
            [Google.Apis.Util.RequestParameterAttribute("modifyDateMin", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ModifyDateMin { get; set; }

            /// <summary>Caret(^) delimited list of order IDs. Filters out all events that do not reference one of the
            /// given order IDs. Optional.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderId { get; set; }

            /// <summary>The value of 'nextPageToken' from the previous page. Optional.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>Caret(^) delimited list of product categories. Filters out all events that do not reference a
            /// product in one of the given product categories. Optional.</summary>
            [Google.Apis.Util.RequestParameterAttribute("productCategory", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ProductCategory { get; set; }

            /// <summary>Caret(^) delimited list of publisher IDs. Filters out all events that do not reference one of
            /// the given publishers IDs. Only used when under advertiser role. Optional.</summary>
            [Google.Apis.Util.RequestParameterAttribute("publisherId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PublisherId { get; set; }

            /// <summary>Caret(^) delimited list of SKUs. Filters out all events that do not reference one of the given
            /// SKU. Optional.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sku", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Sku { get; set; }

            /// <summary>Filters out all events that do not have the given status. Valid values: 'active', 'canceled'.
            /// Optional.</summary>
            [Google.Apis.Util.RequestParameterAttribute("status", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<StatusEnum> Status { get; set; }

            /// <summary>Filters out all events that do not have the given status. Valid values: 'active', 'canceled'.
            /// Optional.</summary>
            public enum StatusEnum
            {
                /// <summary>Event is currently active.</summary>
                [Google.Apis.Util.StringValueAttribute("active")]
                Active,
                /// <summary>Event is currently canceled.</summary>
                [Google.Apis.Util.StringValueAttribute("canceled")]
                Canceled,
            }

            /// <summary>Filters out all events that are not of the given type. Valid values: 'action', 'transaction',
            /// 'charge'. Optional.</summary>
            [Google.Apis.Util.RequestParameterAttribute("type", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<TypeEnum> Type { get; set; }

            /// <summary>Filters out all events that are not of the given type. Valid values: 'action', 'transaction',
            /// 'charge'. Optional.</summary>
            public enum TypeEnum
            {
                /// <summary>The completion of an application, sign-up, or other process. For example, an action occurs
                /// if a user clicks an ad for a credit card and completes an application for that card.</summary>
                [Google.Apis.Util.StringValueAttribute("action")]
                Action,
                /// <summary>A charge event is typically a payment between an advertiser, publisher or Google.</summary>
                [Google.Apis.Util.StringValueAttribute("charge")]
                Charge,
                /// <summary>A conversion event, typically an e-commerce transaction. Some advertisers use a transaction
                /// to record other types of events, such as magazine subscriptions.</summary>
                [Google.Apis.Util.StringValueAttribute("transaction")]
                Transaction,
            }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{role}/{roleId}/events"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "role", new Google.Apis.Discovery.Parameter
                    {
                        Name = "role",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "roleId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "roleId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "advertiserId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "advertiserId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "chargeType", new Google.Apis.Discovery.Parameter
                    {
                        Name = "chargeType",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "eventDateMax", new Google.Apis.Discovery.Parameter
                    {
                        Name = "eventDateMax",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "eventDateMin", new Google.Apis.Discovery.Parameter
                    {
                        Name = "eventDateMin",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "linkId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "linkId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "memberId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "memberId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "modifyDateMax", new Google.Apis.Discovery.Parameter
                    {
                        Name = "modifyDateMax",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "modifyDateMin", new Google.Apis.Discovery.Parameter
                    {
                        Name = "modifyDateMin",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "productCategory", new Google.Apis.Discovery.Parameter
                    {
                        Name = "productCategory",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "publisherId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "publisherId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sku", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sku",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "status", new Google.Apis.Discovery.Parameter
                    {
                        Name = "status",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "type", new Google.Apis.Discovery.Parameter
                    {
                        Name = "type",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "links" collection of methods.</summary>
    public class LinksResource
    {
        private const string Resource = "links";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public LinksResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Retrieves data about a single link if the requesting advertiser/publisher has access to it.
        /// Advertisers can look up their own links. Publishers can look up visible links or links belonging to
        /// advertisers they are in a relationship with.</summary>
        /// <param name="role">The role of the requester. Valid values: 'advertisers' or 'publishers'.</param>
        /// <param
        /// name="roleId">The ID of the requesting advertiser or publisher.</param>
        /// <param name="linkId">The ID of the
        /// link to look up.</param>
        public virtual GetRequest Get(GetRequest.RoleEnum role, string roleId, long linkId)
        {
            return new GetRequest(service, role, roleId, linkId);
        }

        /// <summary>Retrieves data about a single link if the requesting advertiser/publisher has access to it.
        /// Advertisers can look up their own links. Publishers can look up visible links or links belonging to
        /// advertisers they are in a relationship with.</summary>
        public class GetRequest : GanBaseServiceRequest<Google.Apis.Gan.v1beta1.Data.Link>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, GetRequest.RoleEnum role, string roleId, long linkId)
                : base(service)
            {
                Role = role;
                RoleId = roleId;
                LinkId = linkId;
                InitParameters();
            }


            /// <summary>The role of the requester. Valid values: 'advertisers' or 'publishers'.</summary>
            [Google.Apis.Util.RequestParameterAttribute("role", Google.Apis.Util.RequestParameterType.Path)]
            public virtual RoleEnum Role { get; private set; }

            /// <summary>The role of the requester. Valid values: 'advertisers' or 'publishers'.</summary>
            public enum RoleEnum
            {
                /// <summary>The requester is requesting as an advertiser.</summary>
                [Google.Apis.Util.StringValueAttribute("advertisers")]
                Advertisers,
                /// <summary>The requester is requesting as a publisher.</summary>
                [Google.Apis.Util.StringValueAttribute("publishers")]
                Publishers,
            }

            /// <summary>The ID of the requesting advertiser or publisher.</summary>
            [Google.Apis.Util.RequestParameterAttribute("roleId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string RoleId { get; private set; }

            /// <summary>The ID of the link to look up.</summary>
            [Google.Apis.Util.RequestParameterAttribute("linkId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long LinkId { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{role}/{roleId}/link/{linkId}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "role", new Google.Apis.Discovery.Parameter
                    {
                        Name = "role",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "roleId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "roleId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "linkId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "linkId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Inserts a new link.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="role">The role of the requester. Valid values: 'advertisers' or 'publishers'.</param>
        /// <param
        /// name="roleId">The ID of the requesting advertiser or publisher.</param>
        public virtual InsertRequest Insert(Google.Apis.Gan.v1beta1.Data.Link body, InsertRequest.RoleEnum role, string roleId)
        {
            return new InsertRequest(service, body, role, roleId);
        }

        /// <summary>Inserts a new link.</summary>
        public class InsertRequest : GanBaseServiceRequest<Google.Apis.Gan.v1beta1.Data.Link>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Gan.v1beta1.Data.Link body, InsertRequest.RoleEnum role, string roleId)
                : base(service)
            {
                Role = role;
                RoleId = roleId;
                Body = body;
                InitParameters();
            }


            /// <summary>The role of the requester. Valid values: 'advertisers' or 'publishers'.</summary>
            [Google.Apis.Util.RequestParameterAttribute("role", Google.Apis.Util.RequestParameterType.Path)]
            public virtual RoleEnum Role { get; private set; }

            /// <summary>The role of the requester. Valid values: 'advertisers' or 'publishers'.</summary>
            public enum RoleEnum
            {
                /// <summary>The requester is requesting as an advertiser.</summary>
                [Google.Apis.Util.StringValueAttribute("advertisers")]
                Advertisers,
                /// <summary>The requester is requesting as a publisher.</summary>
                [Google.Apis.Util.StringValueAttribute("publishers")]
                Publishers,
            }

            /// <summary>The ID of the requesting advertiser or publisher.</summary>
            [Google.Apis.Util.RequestParameterAttribute("roleId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string RoleId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Gan.v1beta1.Data.Link Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{role}/{roleId}/link"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "role", new Google.Apis.Discovery.Parameter
                    {
                        Name = "role",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "roleId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "roleId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves all links that match the query parameters.</summary>
        /// <param name="role">The role of the requester. Valid values: 'advertisers' or 'publishers'.</param>
        /// <param
        /// name="roleId">The ID of the requesting advertiser or publisher.</param>
        public virtual ListRequest List(ListRequest.RoleEnum role, string roleId)
        {
            return new ListRequest(service, role, roleId);
        }

        /// <summary>Retrieves all links that match the query parameters.</summary>
        public class ListRequest : GanBaseServiceRequest<Google.Apis.Gan.v1beta1.Data.Links>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, ListRequest.RoleEnum role, string roleId)
                : base(service)
            {
                Role = role;
                RoleId = roleId;
                InitParameters();
            }


            /// <summary>The role of the requester. Valid values: 'advertisers' or 'publishers'.</summary>
            [Google.Apis.Util.RequestParameterAttribute("role", Google.Apis.Util.RequestParameterType.Path)]
            public virtual RoleEnum Role { get; private set; }

            /// <summary>The role of the requester. Valid values: 'advertisers' or 'publishers'.</summary>
            public enum RoleEnum
            {
                /// <summary>The requester is requesting as an advertiser.</summary>
                [Google.Apis.Util.StringValueAttribute("advertisers")]
                Advertisers,
                /// <summary>The requester is requesting as a publisher.</summary>
                [Google.Apis.Util.StringValueAttribute("publishers")]
                Publishers,
            }

            /// <summary>The ID of the requesting advertiser or publisher.</summary>
            [Google.Apis.Util.RequestParameterAttribute("roleId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string RoleId { get; private set; }

            /// <summary>Limits the resulting links to the ones belonging to the listed advertisers.</summary>
            [Google.Apis.Util.RequestParameterAttribute("advertiserId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> AdvertiserId { get; set; }

            /// <summary>The size of the given asset.</summary>
            [Google.Apis.Util.RequestParameterAttribute("assetSize", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> AssetSize { get; set; }

            /// <summary>The role of the author of the link.</summary>
            [Google.Apis.Util.RequestParameterAttribute("authorship", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<AuthorshipEnum> Authorship { get; set; }

            /// <summary>The role of the author of the link.</summary>
            public enum AuthorshipEnum
            {
                [Google.Apis.Util.StringValueAttribute("advertiser")]
                Advertiser,
                [Google.Apis.Util.StringValueAttribute("publisher")]
                Publisher,
            }

            /// <summary>The end of the create date range.</summary>
            [Google.Apis.Util.RequestParameterAttribute("createDateMax", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string CreateDateMax { get; set; }

            /// <summary>The beginning of the create date range.</summary>
            [Google.Apis.Util.RequestParameterAttribute("createDateMin", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string CreateDateMin { get; set; }

            /// <summary>The type of the link.</summary>
            [Google.Apis.Util.RequestParameterAttribute("linkType", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<LinkTypeEnum> LinkType { get; set; }

            /// <summary>The type of the link.</summary>
            public enum LinkTypeEnum
            {
                [Google.Apis.Util.StringValueAttribute("banner")]
                Banner,
                [Google.Apis.Util.StringValueAttribute("text")]
                Text,
            }

            /// <summary>Max number of items to return in this page. Optional. Defaults to 20.</summary>
            /// [minimum: 0]
            /// [maximum: 100]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>The value of 'nextPageToken' from the previous page. Optional.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>The promotion type.</summary>
            [Google.Apis.Util.RequestParameterAttribute("promotionType", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<PromotionTypeEnum> PromotionType { get; set; }

            /// <summary>The promotion type.</summary>
            public enum PromotionTypeEnum
            {
                [Google.Apis.Util.StringValueAttribute("coupon")]
                Coupon,
                [Google.Apis.Util.StringValueAttribute("free_gift")]
                FreeGift,
                [Google.Apis.Util.StringValueAttribute("free_shipping")]
                FreeShipping,
                [Google.Apis.Util.StringValueAttribute("percent_off")]
                PercentOff,
                [Google.Apis.Util.StringValueAttribute("price_cut")]
                PriceCut,
            }

            /// <summary>The status of the relationship.</summary>
            [Google.Apis.Util.RequestParameterAttribute("relationshipStatus", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<RelationshipStatusEnum> RelationshipStatus { get; set; }

            /// <summary>The status of the relationship.</summary>
            public enum RelationshipStatusEnum
            {
                [Google.Apis.Util.StringValueAttribute("approved")]
                Approved,
                [Google.Apis.Util.StringValueAttribute("available")]
                Available,
            }

            /// <summary>Field for full text search across title and merchandising text, supports link id
            /// search.</summary>
            [Google.Apis.Util.RequestParameterAttribute("searchText", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchText { get; set; }

            /// <summary>The end of the start date range.</summary>
            [Google.Apis.Util.RequestParameterAttribute("startDateMax", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string StartDateMax { get; set; }

            /// <summary>The beginning of the start date range.</summary>
            [Google.Apis.Util.RequestParameterAttribute("startDateMin", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string StartDateMin { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{role}/{roleId}/links"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "role", new Google.Apis.Discovery.Parameter
                    {
                        Name = "role",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "roleId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "roleId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "advertiserId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "advertiserId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "assetSize", new Google.Apis.Discovery.Parameter
                    {
                        Name = "assetSize",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "authorship", new Google.Apis.Discovery.Parameter
                    {
                        Name = "authorship",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "createDateMax", new Google.Apis.Discovery.Parameter
                    {
                        Name = "createDateMax",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "createDateMin", new Google.Apis.Discovery.Parameter
                    {
                        Name = "createDateMin",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "linkType", new Google.Apis.Discovery.Parameter
                    {
                        Name = "linkType",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "promotionType", new Google.Apis.Discovery.Parameter
                    {
                        Name = "promotionType",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "relationshipStatus", new Google.Apis.Discovery.Parameter
                    {
                        Name = "relationshipStatus",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "searchText", new Google.Apis.Discovery.Parameter
                    {
                        Name = "searchText",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "startDateMax", new Google.Apis.Discovery.Parameter
                    {
                        Name = "startDateMax",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "startDateMin", new Google.Apis.Discovery.Parameter
                    {
                        Name = "startDateMin",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "publishers" collection of methods.</summary>
    public class PublishersResource
    {
        private const string Resource = "publishers";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public PublishersResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Retrieves data about a single advertiser if that the requesting advertiser/publisher has access to
        /// it. Only advertisers can look up publishers. Publishers can request information about themselves by omitting
        /// the publisherId query parameter.</summary>
        /// <param name="role">The role of the requester. Valid values: 'advertisers' or 'publishers'.</param>
        /// <param
        /// name="roleId">The ID of the requesting advertiser or publisher.</param>
        public virtual GetRequest Get(GetRequest.RoleEnum role, string roleId)
        {
            return new GetRequest(service, role, roleId);
        }

        /// <summary>Retrieves data about a single advertiser if that the requesting advertiser/publisher has access to
        /// it. Only advertisers can look up publishers. Publishers can request information about themselves by omitting
        /// the publisherId query parameter.</summary>
        public class GetRequest : GanBaseServiceRequest<Google.Apis.Gan.v1beta1.Data.Publisher>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, GetRequest.RoleEnum role, string roleId)
                : base(service)
            {
                Role = role;
                RoleId = roleId;
                InitParameters();
            }


            /// <summary>The role of the requester. Valid values: 'advertisers' or 'publishers'.</summary>
            [Google.Apis.Util.RequestParameterAttribute("role", Google.Apis.Util.RequestParameterType.Path)]
            public virtual RoleEnum Role { get; private set; }

            /// <summary>The role of the requester. Valid values: 'advertisers' or 'publishers'.</summary>
            public enum RoleEnum
            {
                /// <summary>The requester is requesting as an advertiser.</summary>
                [Google.Apis.Util.StringValueAttribute("advertisers")]
                Advertisers,
                /// <summary>The requester is requesting as a publisher.</summary>
                [Google.Apis.Util.StringValueAttribute("publishers")]
                Publishers,
            }

            /// <summary>The ID of the requesting advertiser or publisher.</summary>
            [Google.Apis.Util.RequestParameterAttribute("roleId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string RoleId { get; private set; }

            /// <summary>The ID of the publisher to look up. Optional.</summary>
            [Google.Apis.Util.RequestParameterAttribute("publisherId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PublisherId { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{role}/{roleId}/publisher"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "role", new Google.Apis.Discovery.Parameter
                    {
                        Name = "role",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "roleId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "roleId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "publisherId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "publisherId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves data about all publishers that the requesting advertiser/publisher has access
        /// to.</summary>
        /// <param name="role">The role of the requester. Valid values: 'advertisers' or 'publishers'.</param>
        /// <param
        /// name="roleId">The ID of the requesting advertiser or publisher.</param>
        public virtual ListRequest List(ListRequest.RoleEnum role, string roleId)
        {
            return new ListRequest(service, role, roleId);
        }

        /// <summary>Retrieves data about all publishers that the requesting advertiser/publisher has access
        /// to.</summary>
        public class ListRequest : GanBaseServiceRequest<Google.Apis.Gan.v1beta1.Data.Publishers>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, ListRequest.RoleEnum role, string roleId)
                : base(service)
            {
                Role = role;
                RoleId = roleId;
                InitParameters();
            }


            /// <summary>The role of the requester. Valid values: 'advertisers' or 'publishers'.</summary>
            [Google.Apis.Util.RequestParameterAttribute("role", Google.Apis.Util.RequestParameterType.Path)]
            public virtual RoleEnum Role { get; private set; }

            /// <summary>The role of the requester. Valid values: 'advertisers' or 'publishers'.</summary>
            public enum RoleEnum
            {
                /// <summary>The requester is requesting as an advertiser.</summary>
                [Google.Apis.Util.StringValueAttribute("advertisers")]
                Advertisers,
                /// <summary>The requester is requesting as a publisher.</summary>
                [Google.Apis.Util.StringValueAttribute("publishers")]
                Publishers,
            }

            /// <summary>The ID of the requesting advertiser or publisher.</summary>
            [Google.Apis.Util.RequestParameterAttribute("roleId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string RoleId { get; private set; }

            /// <summary>Max number of items to return in this page. Optional. Defaults to 20.</summary>
            /// [minimum: 0]
            /// [maximum: 100]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Filters out all publishers that have a ninety day EPC average lower than the given value
            /// (inclusive). Min value: 0.0. Optional.</summary>
            [Google.Apis.Util.RequestParameterAttribute("minNinetyDayEpc", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<double> MinNinetyDayEpc { get; set; }

            /// <summary>A value between 1 and 4, where 1 represents the quartile of publishers with the lowest ranks
            /// and 4 represents the quartile of publishers with the highest ranks. Filters out all publishers with a
            /// lower rank than the given quartile. For example if a 2 was given only publishers with a payout rank of
            /// 25 or higher would be included. Optional.</summary>
            /// [minimum: 1]
            /// [maximum: 4]
            [Google.Apis.Util.RequestParameterAttribute("minPayoutRank", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MinPayoutRank { get; set; }

            /// <summary>Filters out all publishers that have a seven day EPC average lower than the given value
            /// (inclusive). Min value 0.0. Optional.</summary>
            [Google.Apis.Util.RequestParameterAttribute("minSevenDayEpc", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<double> MinSevenDayEpc { get; set; }

            /// <summary>The value of 'nextPageToken' from the previous page. Optional.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>Caret(^) delimted list of publisher categories. Valid categories: (unclassified|community_and_c
            /// ontent|shopping_and_promotion|loyalty_and_rewards|network|search_specialist|comparison_shopping|email).
            /// Filters out all publishers not in one of the given advertiser categories. Optional.</summary>
            [Google.Apis.Util.RequestParameterAttribute("publisherCategory", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PublisherCategory { get; set; }

            /// <summary>Filters out all publishers for which do not have the given relationship status with the
            /// requesting publisher.</summary>
            [Google.Apis.Util.RequestParameterAttribute("relationshipStatus", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<RelationshipStatusEnum> RelationshipStatus { get; set; }

            /// <summary>Filters out all publishers for which do not have the given relationship status with the
            /// requesting publisher.</summary>
            public enum RelationshipStatusEnum
            {
                /// <summary>Publishers you've approved to your program.</summary>
                [Google.Apis.Util.StringValueAttribute("approved")]
                Approved,
                /// <summary>Publishers available for you to recruit.</summary>
                [Google.Apis.Util.StringValueAttribute("available")]
                Available,
                /// <summary>A publisher that you terminated from your program. Publishers also have the ability to
                /// remove themselves from your program.</summary>
                [Google.Apis.Util.StringValueAttribute("deactivated")]
                Deactivated,
                /// <summary>A publisher that you did not approve to your program.</summary>
                [Google.Apis.Util.StringValueAttribute("declined")]
                Declined,
                /// <summary>Publishers that have applied to your program. We recommend reviewing and deciding on
                /// pending publishers on a weekly basis.</summary>
                [Google.Apis.Util.StringValueAttribute("pending")]
                Pending,
            }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{role}/{roleId}/publishers"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "role", new Google.Apis.Discovery.Parameter
                    {
                        Name = "role",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "roleId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "roleId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "minNinetyDayEpc", new Google.Apis.Discovery.Parameter
                    {
                        Name = "minNinetyDayEpc",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "minPayoutRank", new Google.Apis.Discovery.Parameter
                    {
                        Name = "minPayoutRank",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "minSevenDayEpc", new Google.Apis.Discovery.Parameter
                    {
                        Name = "minSevenDayEpc",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "publisherCategory", new Google.Apis.Discovery.Parameter
                    {
                        Name = "publisherCategory",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "relationshipStatus", new Google.Apis.Discovery.Parameter
                    {
                        Name = "relationshipStatus",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "reports" collection of methods.</summary>
    public class ReportsResource
    {
        private const string Resource = "reports";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public ReportsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Retrieves a report of the specified type.</summary>
        /// <param name="role">The role of the requester. Valid values: 'advertisers' or 'publishers'.</param>
        /// <param
        /// name="roleId">The ID of the requesting advertiser or publisher.</param>
        /// <param name="reportType">The type of
        /// report being requested. Valid values: 'order_delta'. Required.</param>
        public virtual GetRequest Get(GetRequest.RoleEnum role, string roleId, GetRequest.ReportTypeEnum reportType)
        {
            return new GetRequest(service, role, roleId, reportType);
        }

        /// <summary>Retrieves a report of the specified type.</summary>
        public class GetRequest : GanBaseServiceRequest<Google.Apis.Gan.v1beta1.Data.Report>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, GetRequest.RoleEnum role, string roleId, GetRequest.ReportTypeEnum reportType)
                : base(service)
            {
                Role = role;
                RoleId = roleId;
                ReportType = reportType;
                InitParameters();
            }


            /// <summary>The role of the requester. Valid values: 'advertisers' or 'publishers'.</summary>
            [Google.Apis.Util.RequestParameterAttribute("role", Google.Apis.Util.RequestParameterType.Path)]
            public virtual RoleEnum Role { get; private set; }

            /// <summary>The role of the requester. Valid values: 'advertisers' or 'publishers'.</summary>
            public enum RoleEnum
            {
                /// <summary>The requester is requesting as an advertiser.</summary>
                [Google.Apis.Util.StringValueAttribute("advertisers")]
                Advertisers,
                /// <summary>The requester is requesting as a publisher.</summary>
                [Google.Apis.Util.StringValueAttribute("publishers")]
                Publishers,
            }

            /// <summary>The ID of the requesting advertiser or publisher.</summary>
            [Google.Apis.Util.RequestParameterAttribute("roleId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string RoleId { get; private set; }

            /// <summary>The type of report being requested. Valid values: 'order_delta'. Required.</summary>
            [Google.Apis.Util.RequestParameterAttribute("reportType", Google.Apis.Util.RequestParameterType.Path)]
            public virtual ReportTypeEnum ReportType { get; private set; }

            /// <summary>The type of report being requested. Valid values: 'order_delta'. Required.</summary>
            public enum ReportTypeEnum
            {
                /// <summary>The order delta report type.</summary>
                [Google.Apis.Util.StringValueAttribute("order_delta")]
                OrderDelta,
            }

            /// <summary>The IDs of the advertisers to look up, if applicable.</summary>
            [Google.Apis.Util.RequestParameterAttribute("advertiserId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> AdvertiserId { get; set; }

            /// <summary>Whether or not to calculate totals rows. Optional.</summary>
            [Google.Apis.Util.RequestParameterAttribute("calculateTotals", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> CalculateTotals { get; set; }

            /// <summary>The end date (exclusive), in RFC 3339 format, for the report data to be returned. Defaults to
            /// one day after startDate, if that is given, or today. Optional.</summary>
            [Google.Apis.Util.RequestParameterAttribute("endDate", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string EndDate { get; set; }

            /// <summary>Filters out all events that are not of the given type. Valid values: 'action', 'transaction',
            /// or 'charge'. Optional.</summary>
            [Google.Apis.Util.RequestParameterAttribute("eventType", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<EventTypeEnum> EventType { get; set; }

            /// <summary>Filters out all events that are not of the given type. Valid values: 'action', 'transaction',
            /// or 'charge'. Optional.</summary>
            public enum EventTypeEnum
            {
                /// <summary>Event type is action.</summary>
                [Google.Apis.Util.StringValueAttribute("action")]
                Action,
                /// <summary>Event type is charge.</summary>
                [Google.Apis.Util.StringValueAttribute("charge")]
                Charge,
                /// <summary>Event type is transaction.</summary>
                [Google.Apis.Util.StringValueAttribute("transaction")]
                Transaction,
            }

            /// <summary>Filters to capture one of given link IDs. Optional.</summary>
            [Google.Apis.Util.RequestParameterAttribute("linkId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> LinkId { get; set; }

            /// <summary>Max number of items to return in this page. Optional. Defaults to return all results.</summary>
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Filters to capture one of the given order IDs. Optional.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> OrderId { get; set; }

            /// <summary>The IDs of the publishers to look up, if applicable.</summary>
            [Google.Apis.Util.RequestParameterAttribute("publisherId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> PublisherId { get; set; }

            /// <summary>The start date (inclusive), in RFC 3339 format, for the report data to be returned. Defaults to
            /// one day before endDate, if that is given, or yesterday. Optional.</summary>
            [Google.Apis.Util.RequestParameterAttribute("startDate", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string StartDate { get; set; }

            /// <summary>Offset on which to return results when paging. Optional.</summary>
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("startIndex", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> StartIndex { get; set; }

            /// <summary>Filters out all events that do not have the given status. Valid values: 'active', 'canceled',
            /// or 'invalid'. Optional.</summary>
            [Google.Apis.Util.RequestParameterAttribute("status", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<StatusEnum> Status { get; set; }

            /// <summary>Filters out all events that do not have the given status. Valid values: 'active', 'canceled',
            /// or 'invalid'. Optional.</summary>
            public enum StatusEnum
            {
                /// <summary>Event is currently active.</summary>
                [Google.Apis.Util.StringValueAttribute("active")]
                Active,
                /// <summary>Event is currently canceled.</summary>
                [Google.Apis.Util.StringValueAttribute("canceled")]
                Canceled,
                /// <summary>Event is currently invalid.</summary>
                [Google.Apis.Util.StringValueAttribute("invalid")]
                Invalid,
            }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{role}/{roleId}/report/{reportType}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "role", new Google.Apis.Discovery.Parameter
                    {
                        Name = "role",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "roleId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "roleId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "reportType", new Google.Apis.Discovery.Parameter
                    {
                        Name = "reportType",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "advertiserId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "advertiserId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "calculateTotals", new Google.Apis.Discovery.Parameter
                    {
                        Name = "calculateTotals",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "endDate", new Google.Apis.Discovery.Parameter
                    {
                        Name = "endDate",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "eventType", new Google.Apis.Discovery.Parameter
                    {
                        Name = "eventType",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "linkId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "linkId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "publisherId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "publisherId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "startDate", new Google.Apis.Discovery.Parameter
                    {
                        Name = "startDate",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "startIndex", new Google.Apis.Discovery.Parameter
                    {
                        Name = "startIndex",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "status", new Google.Apis.Discovery.Parameter
                    {
                        Name = "status",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }
}

namespace Google.Apis.Gan.v1beta1.Data
{    

    /// <summary>An AdvertiserResource.</summary>
    public class Advertiser : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>True if the advertiser allows publisher created links, otherwise false.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("allowPublisherCreatedLinks")]
        public virtual System.Nullable<bool> AllowPublisherCreatedLinks { get; set; } 

        /// <summary>Category that this advertiser belongs to. A valid list of categories can be found here:
        /// http://www.google.com/support/affiliatenetwork/advertiser/bin/answer.py?hl=en=107581</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("category")]
        public virtual string Category { get; set; } 

        /// <summary>The longest possible length of a commission (how long the cookies on the customer's browser last
        /// before they expire).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("commissionDuration")]
        public virtual System.Nullable<int> CommissionDuration { get; set; } 

        /// <summary>Email that this advertiser would like publishers to contact them with.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contactEmail")]
        public virtual string ContactEmail { get; set; } 

        /// <summary>Phone that this advertiser would like publishers to contact them with.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contactPhone")]
        public virtual string ContactPhone { get; set; } 

        /// <summary>The default link id for this advertiser.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultLinkId")]
        public virtual System.Nullable<long> DefaultLinkId { get; set; } 

        /// <summary>Description of the website the advertiser advertises from.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>The sum of fees paid to publishers divided by the total number of clicks over the past three
        /// months. This value should be multiplied by 100 at the time of display.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("epcNinetyDayAverage")]
        public virtual Money EpcNinetyDayAverage { get; set; } 

        /// <summary>The sum of fees paid to publishers divided by the total number of clicks over the past seven days.
        /// This value should be multiplied by 100 at the time of display.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("epcSevenDayAverage")]
        public virtual Money EpcSevenDayAverage { get; set; } 

        /// <summary>The ID of this advertiser.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>The requested advertiser.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("item")]
        public virtual Advertiser Item { get; set; } 

        /// <summary>Date that this advertiser was approved as a Google Affiliate Network advertiser.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("joinDate")]
        public virtual string JoinDateRaw { get; set; }

        /// <summary><seealso cref="System.DateTime"/> representation of <see cref="JoinDateRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnore]
        public virtual System.Nullable<System.DateTime> JoinDate
        {
            get
            {
                return Google.Apis.Util.Utilities.GetDateTimeFromString(JoinDateRaw);
            }
            set
            {
                JoinDateRaw = Google.Apis.Util.Utilities.GetStringFromDateTime(value);
            }
        }

        /// <summary>The kind for an advertiser.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>URL to the logo this advertiser uses on the Google Affiliate Network.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("logoUrl")]
        public virtual string LogoUrl { get; set; } 

        /// <summary>List of merchant center ids for this advertiser</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("merchantCenterIds")]
        public virtual System.Collections.Generic.IList<System.Nullable<long>> MerchantCenterIds { get; set; } 

        /// <summary>The name of this advertiser.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>A rank based on commissions paid to publishers over the past 90 days. A number between 1 and 4
        /// where 4 means the top quartile (most money paid) and 1 means the bottom quartile (least money
        /// paid).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("payoutRank")]
        public virtual string PayoutRank { get; set; } 

        /// <summary>Allows advertisers to submit product listings to Google Product Search.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("productFeedsEnabled")]
        public virtual System.Nullable<bool> ProductFeedsEnabled { get; set; } 

        /// <summary>List of redirect URLs for this advertiser</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("redirectDomains")]
        public virtual System.Collections.Generic.IList<string> RedirectDomains { get; set; } 

        /// <summary>URL of the website this advertiser advertises from.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("siteUrl")]
        public virtual string SiteUrl { get; set; } 

        /// <summary>The status of the requesting publisher's relationship this advertiser.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual string Status { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class Advertisers : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The advertiser list.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Advertiser> Items { get; set; } 

        /// <summary>The kind for a page of advertisers.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The 'pageToken' to pass to the next request to get the next page, if there are more to
        /// retrieve.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A credit card offer. There are many possible result fields. We provide two different views of the data,
    /// or "projections." The "full" projection includes every result field. And the "summary" projection, which is the
    /// default, includes a smaller subset of the fields. The fields included in the summary projection are marked as
    /// such in their descriptions.</summary>
    public class CcOffer : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>More marketing copy about the card's benefits. A summary field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("additionalCardBenefits")]
        public virtual System.Collections.Generic.IList<string> AdditionalCardBenefits { get; set; } 

        /// <summary>Any extra fees levied on card holders.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("additionalCardHolderFee")]
        public virtual string AdditionalCardHolderFee { get; set; } 

        /// <summary>The youngest a recipient of this card may be.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ageMinimum")]
        public virtual System.Nullable<double> AgeMinimum { get; set; } 

        /// <summary>Text describing the details of the age minimum restriction.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ageMinimumDetails")]
        public virtual string AgeMinimumDetails { get; set; } 

        /// <summary>The ongoing annual fee, in dollars.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("annualFee")]
        public virtual System.Nullable<double> AnnualFee { get; set; } 

        /// <summary>Text describing the annual fee, including any difference for the first year. A summary
        /// field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("annualFeeDisplay")]
        public virtual string AnnualFeeDisplay { get; set; } 

        /// <summary>The largest number of units you may accumulate in a year.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("annualRewardMaximum")]
        public virtual System.Nullable<double> AnnualRewardMaximum { get; set; } 

        /// <summary>Possible categories for this card, eg "Low Interest" or "Good." A summary field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("approvedCategories")]
        public virtual System.Collections.Generic.IList<string> ApprovedCategories { get; set; } 

        /// <summary>Text describing the purchase APR. A summary field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("aprDisplay")]
        public virtual string AprDisplay { get; set; } 

        /// <summary>Text describing how the balance is computed. A summary field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("balanceComputationMethod")]
        public virtual string BalanceComputationMethod { get; set; } 

        /// <summary>Text describing the terms for balance transfers. A summary field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("balanceTransferTerms")]
        public virtual string BalanceTransferTerms { get; set; } 

        /// <summary>For cards with rewards programs, extra circumstances whereby additional rewards may be
        /// granted.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bonusRewards")]
        public virtual System.Collections.Generic.IList<CcOffer.BonusRewardsData> BonusRewards { get; set; } 

        /// <summary>If you get coverage when you use the card for the given activity, this field describes
        /// it.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("carRentalInsurance")]
        public virtual string CarRentalInsurance { get; set; } 

        /// <summary>A list of what the issuer thinks are the most important benefits of the card. Usually summarizes
        /// the rewards program, if there is one. A summary field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cardBenefits")]
        public virtual System.Collections.Generic.IList<string> CardBenefits { get; set; } 

        /// <summary>The issuer's name for the card, including any trademark or service mark designators. A summary
        /// field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cardName")]
        public virtual string CardName { get; set; } 

        /// <summary>What kind of credit card this is, for example secured or unsecured.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cardType")]
        public virtual string CardType { get; set; } 

        /// <summary>Text describing the terms for cash advances. A summary field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cashAdvanceTerms")]
        public virtual string CashAdvanceTerms { get; set; } 

        /// <summary>The high end for credit limits the issuer imposes on recipients of this card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creditLimitMax")]
        public virtual System.Nullable<double> CreditLimitMax { get; set; } 

        /// <summary>The low end for credit limits the issuer imposes on recipients of this card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creditLimitMin")]
        public virtual System.Nullable<double> CreditLimitMin { get; set; } 

        /// <summary>Text describing the credit ratings required for recipients of this card, for example
        /// "Excellent/Good." A summary field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creditRatingDisplay")]
        public virtual string CreditRatingDisplay { get; set; } 

        /// <summary>Fees for defaulting on your payments.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultFees")]
        public virtual System.Collections.Generic.IList<CcOffer.DefaultFeesData> DefaultFees { get; set; } 

        /// <summary>A notice that, if present, is referenced via an asterisk by many of the other summary fields. If
        /// this field is present, it will always start with an asterisk ("*"), and must be prominently displayed with
        /// the offer. A summary field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("disclaimer")]
        public virtual string Disclaimer { get; set; } 

        /// <summary>If you get coverage when you use the card for the given activity, this field describes
        /// it.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("emergencyInsurance")]
        public virtual string EmergencyInsurance { get; set; } 

        /// <summary>Whether this card is only available to existing customers of the issuer.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("existingCustomerOnly")]
        public virtual System.Nullable<bool> ExistingCustomerOnly { get; set; } 

        /// <summary>If you get coverage when you use the card for the given activity, this field describes
        /// it.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("extendedWarranty")]
        public virtual string ExtendedWarranty { get; set; } 

        /// <summary>The annual fee for the first year, if different from the ongoing fee. Optional.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("firstYearAnnualFee")]
        public virtual System.Nullable<double> FirstYearAnnualFee { get; set; } 

        /// <summary>If you get coverage when you use the card for the given activity, this field describes
        /// it.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("flightAccidentInsurance")]
        public virtual string FlightAccidentInsurance { get; set; } 

        /// <summary>Fee for each transaction involving a foreign currency.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("foreignCurrencyTransactionFee")]
        public virtual string ForeignCurrencyTransactionFee { get; set; } 

        /// <summary>If you get coverage when you use the card for the given activity, this field describes
        /// it.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fraudLiability")]
        public virtual string FraudLiability { get; set; } 

        /// <summary>Text describing the grace period before finance charges apply. A summary field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("gracePeriodDisplay")]
        public virtual string GracePeriodDisplay { get; set; } 

        /// <summary>The link to the image of the card that is shown on Connect Commerce. A summary field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("imageUrl")]
        public virtual string ImageUrl { get; set; } 

        /// <summary>Fee for setting up the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("initialSetupAndProcessingFee")]
        public virtual string InitialSetupAndProcessingFee { get; set; } 

        /// <summary>Text describing the terms for introductory period balance transfers. A summary field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("introBalanceTransferTerms")]
        public virtual string IntroBalanceTransferTerms { get; set; } 

        /// <summary>Text describing the terms for introductory period cash advances. A summary field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("introCashAdvanceTerms")]
        public virtual string IntroCashAdvanceTerms { get; set; } 

        /// <summary>Text describing the terms for introductory period purchases. A summary field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("introPurchaseTerms")]
        public virtual string IntroPurchaseTerms { get; set; } 

        /// <summary>Name of card issuer. A summary field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("issuer")]
        public virtual string Issuer { get; set; } 

        /// <summary>The Google Affiliate Network ID of the advertiser making this offer.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("issuerId")]
        public virtual string IssuerId { get; set; } 

        /// <summary>The generic link to the issuer's site.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("issuerWebsite")]
        public virtual string IssuerWebsite { get; set; } 

        /// <summary>The kind for one credit card offer. A summary field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The link to the issuer's page for this card. A summary field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("landingPageUrl")]
        public virtual string LandingPageUrl { get; set; } 

        /// <summary>Text describing how much a late payment will cost, eg "up to $35." A summary field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("latePaymentFee")]
        public virtual string LatePaymentFee { get; set; } 

        /// <summary>If you get coverage when you use the card for the given activity, this field describes
        /// it.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("luggageInsurance")]
        public virtual string LuggageInsurance { get; set; } 

        /// <summary>The highest interest rate the issuer charges on this card. Expressed as an absolute number, not as
        /// a percentage.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maxPurchaseRate")]
        public virtual System.Nullable<double> MaxPurchaseRate { get; set; } 

        /// <summary>The lowest interest rate the issuer charges on this card. Expressed as an absolute number, not as a
        /// percentage.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("minPurchaseRate")]
        public virtual System.Nullable<double> MinPurchaseRate { get; set; } 

        /// <summary>Text describing how much missing the grace period will cost.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("minimumFinanceCharge")]
        public virtual string MinimumFinanceCharge { get; set; } 

        /// <summary>Which network (eg Visa) the card belongs to. A summary field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("network")]
        public virtual string Network { get; set; } 

        /// <summary>This offer's ID. A summary field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("offerId")]
        public virtual string OfferId { get; set; } 

        /// <summary>Whether a cash reward program lets you get cash back sooner than end of year or other longish
        /// period.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("offersImmediateCashReward")]
        public virtual System.Nullable<bool> OffersImmediateCashReward { get; set; } 

        /// <summary>Fee for exceeding the card's charge limit.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("overLimitFee")]
        public virtual string OverLimitFee { get; set; } 

        /// <summary>Categories in which the issuer does not wish the card to be displayed. A summary field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("prohibitedCategories")]
        public virtual System.Collections.Generic.IList<string> ProhibitedCategories { get; set; } 

        /// <summary>Text describing any additional details for the purchase rate. A summary field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("purchaseRateAdditionalDetails")]
        public virtual string PurchaseRateAdditionalDetails { get; set; } 

        /// <summary>Fixed or variable.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("purchaseRateType")]
        public virtual string PurchaseRateType { get; set; } 

        /// <summary>Text describing the fee for a payment that doesn't clear. A summary field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("returnedPaymentFee")]
        public virtual string ReturnedPaymentFee { get; set; } 

        /// <summary>The company that redeems the rewards, if different from the issuer.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rewardPartner")]
        public virtual string RewardPartner { get; set; } 

        /// <summary>For cards with rewards programs, the unit of reward. For example, miles, cash back,
        /// points.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rewardUnit")]
        public virtual string RewardUnit { get; set; } 

        /// <summary>For cards with rewards programs, detailed rules about how the program works.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rewards")]
        public virtual System.Collections.Generic.IList<CcOffer.RewardsData> Rewards { get; set; } 

        /// <summary>Whether accumulated rewards ever expire.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rewardsExpire")]
        public virtual System.Nullable<bool> RewardsExpire { get; set; } 

        /// <summary>For airline miles rewards, tells whether blackout dates apply to the miles.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rewardsHaveBlackoutDates")]
        public virtual System.Nullable<bool> RewardsHaveBlackoutDates { get; set; } 

        /// <summary>Fee for requesting a copy of your statement.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("statementCopyFee")]
        public virtual string StatementCopyFee { get; set; } 

        /// <summary>The link to ping to register a click on this offer. A summary field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("trackingUrl")]
        public virtual string TrackingUrl { get; set; } 

        /// <summary>If you get coverage when you use the card for the given activity, this field describes
        /// it.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("travelInsurance")]
        public virtual string TravelInsurance { get; set; } 

        /// <summary>When variable rates were last updated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("variableRatesLastUpdated")]
        public virtual string VariableRatesLastUpdated { get; set; } 

        /// <summary>How often variable rates are updated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("variableRatesUpdateFrequency")]
        public virtual string VariableRatesUpdateFrequency { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
        

        public class BonusRewardsData
        {
            /// <summary>How many units of reward will be granted.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("amount")]
            public virtual System.Nullable<double> Amount { get; set; } 

            /// <summary>The circumstances under which this rule applies, for example, booking a flight via
            /// Orbitz.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("details")]
            public virtual string Details { get; set; } 

        }    

        public class DefaultFeesData
        {
            /// <summary>The type of charge, for example Purchases.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("category")]
            public virtual string Category { get; set; } 

            /// <summary>The highest rate the issuer may charge for defaulting on debt in this category. Expressed as an
            /// absolute number, not as a percentage.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("maxRate")]
            public virtual System.Nullable<double> MaxRate { get; set; } 

            /// <summary>The lowest rate the issuer may charge for defaulting on debt in this category. Expressed as an
            /// absolute number, not as a percentage.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("minRate")]
            public virtual System.Nullable<double> MinRate { get; set; } 

            /// <summary>Fixed or variable.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("rateType")]
            public virtual string RateType { get; set; } 

        }    

        public class RewardsData
        {
            /// <summary>Other limits, for example, if this rule only applies during an introductory period.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("additionalDetails")]
            public virtual string AdditionalDetails { get; set; } 

            /// <summary>The number of units rewarded per purchase dollar.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("amount")]
            public virtual System.Nullable<double> Amount { get; set; } 

            /// <summary>The kind of purchases covered by this rule.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("category")]
            public virtual string Category { get; set; } 

            /// <summary>How long rewards granted by this rule last.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("expirationMonths")]
            public virtual System.Nullable<double> ExpirationMonths { get; set; } 

            /// <summary>The maximum purchase amount in the given category for this rule to apply.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("maxRewardTier")]
            public virtual System.Nullable<double> MaxRewardTier { get; set; } 

            /// <summary>The minimum purchase amount in the given category before this rule applies.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("minRewardTier")]
            public virtual System.Nullable<double> MinRewardTier { get; set; } 

        }
    }    

    public class CcOffers : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The credit card offers.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<CcOffer> Items { get; set; } 

        /// <summary>The kind for a page of credit card offers.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>An EventResource.</summary>
    public class Event : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ID of advertiser for this event.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserId")]
        public virtual System.Nullable<long> AdvertiserId { get; set; } 

        /// <summary>The name of the advertiser for this event.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserName")]
        public virtual string AdvertiserName { get; set; } 

        /// <summary>The charge ID for this event. Only returned for charge events.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("chargeId")]
        public virtual string ChargeId { get; set; } 

        /// <summary>Charge type of the event (other|slotting_fee|monthly_minimum|tier_bonus|debit|credit). Only
        /// returned for charge events.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("chargeType")]
        public virtual string ChargeType { get; set; } 

        /// <summary>Amount of money exchanged during the transaction. Only returned for charge and conversion
        /// events.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("commissionableSales")]
        public virtual Money CommissionableSales { get; set; } 

        /// <summary>Earnings by the publisher.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("earnings")]
        public virtual Money Earnings { get; set; } 

        /// <summary>The date-time this event was initiated as a RFC 3339 date-time value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("eventDate")]
        public virtual string EventDateRaw { get; set; }

        /// <summary><seealso cref="System.DateTime"/> representation of <see cref="EventDateRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnore]
        public virtual System.Nullable<System.DateTime> EventDate
        {
            get
            {
                return Google.Apis.Util.Utilities.GetDateTimeFromString(EventDateRaw);
            }
            set
            {
                EventDateRaw = Google.Apis.Util.Utilities.GetStringFromDateTime(value);
            }
        }

        /// <summary>The kind for one event.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The ID of the member attached to this event. Only returned for conversion events.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("memberId")]
        public virtual string MemberId { get; set; } 

        /// <summary>The date-time this event was last modified as a RFC 3339 date-time value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("modifyDate")]
        public virtual string ModifyDateRaw { get; set; }

        /// <summary><seealso cref="System.DateTime"/> representation of <see cref="ModifyDateRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnore]
        public virtual System.Nullable<System.DateTime> ModifyDate
        {
            get
            {
                return Google.Apis.Util.Utilities.GetDateTimeFromString(ModifyDateRaw);
            }
            set
            {
                ModifyDateRaw = Google.Apis.Util.Utilities.GetStringFromDateTime(value);
            }
        }

        /// <summary>Fee that the advertiser paid to the Google Affiliate Network.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("networkFee")]
        public virtual Money NetworkFee { get; set; } 

        /// <summary>The order ID for this event. Only returned for conversion events.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("orderId")]
        public virtual string OrderId { get; set; } 

        /// <summary>Products associated with the event.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("products")]
        public virtual System.Collections.Generic.IList<Event.ProductsData> Products { get; set; } 

        /// <summary>Fee that the advertiser paid to the publisher.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("publisherFee")]
        public virtual Money PublisherFee { get; set; } 

        /// <summary>The ID of the publisher for this event.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("publisherId")]
        public virtual System.Nullable<long> PublisherId { get; set; } 

        /// <summary>The name of the publisher for this event.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("publisherName")]
        public virtual string PublisherName { get; set; } 

        /// <summary>Status of the event (active|canceled). Only returned for charge and conversion events.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual string Status { get; set; } 

        /// <summary>Type of the event (action|transaction|charge).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
        

        public class ProductsData
        {
            /// <summary>Id of the category this product belongs to.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("categoryId")]
            public virtual string CategoryId { get; set; } 

            /// <summary>Name of the category this product belongs to.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("categoryName")]
            public virtual string CategoryName { get; set; } 

            /// <summary>Amount earned by the publisher on this product.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("earnings")]
            public virtual Money Earnings { get; set; } 

            /// <summary>Fee that the advertiser paid to the Google Affiliate Network for this product.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("networkFee")]
            public virtual Money NetworkFee { get; set; } 

            /// <summary>Fee that the advertiser paid to the publisehr for this product.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("publisherFee")]
            public virtual Money PublisherFee { get; set; } 

            /// <summary>Quantity of this product bought/exchanged.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("quantity")]
            public virtual System.Nullable<long> Quantity { get; set; } 

            /// <summary>Sku of this product.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("sku")]
            public virtual string Sku { get; set; } 

            /// <summary>Sku name of this product.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("skuName")]
            public virtual string SkuName { get; set; } 

            /// <summary>Price per unit of this product.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("unitPrice")]
            public virtual Money UnitPrice { get; set; } 

        }
    }    

    public class Events : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The event list.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Event> Items { get; set; } 

        /// <summary>The kind for a page of events.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The 'pageToken' to pass to the next request to get the next page, if there are more to
        /// retrieve.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A LinkResource.</summary>
    public class Link : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The advertiser id for the advertiser who owns this link.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserId")]
        public virtual System.Nullable<long> AdvertiserId { get; set; } 

        /// <summary>Authorship</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("authorship")]
        public virtual string Authorship { get; set; } 

        /// <summary>Availability.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("availability")]
        public virtual string Availability { get; set; } 

        /// <summary>Tracking url for clicks.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("clickTrackingUrl")]
        public virtual string ClickTrackingUrl { get; set; } 

        /// <summary>Date that this link was created.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createDate")]
        public virtual string CreateDateRaw { get; set; }

        /// <summary><seealso cref="System.DateTime"/> representation of <see cref="CreateDateRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnore]
        public virtual System.Nullable<System.DateTime> CreateDate
        {
            get
            {
                return Google.Apis.Util.Utilities.GetDateTimeFromString(CreateDateRaw);
            }
            set
            {
                CreateDateRaw = Google.Apis.Util.Utilities.GetStringFromDateTime(value);
            }
        }

        /// <summary>Description.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>The destination URL for the link.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("destinationUrl")]
        public virtual string DestinationUrl { get; set; } 

        /// <summary>Duration</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("duration")]
        public virtual string Duration { get; set; } 

        /// <summary>Date that this link becomes inactive.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endDate")]
        public virtual string EndDateRaw { get; set; }

        /// <summary><seealso cref="System.DateTime"/> representation of <see cref="EndDateRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnore]
        public virtual System.Nullable<System.DateTime> EndDate
        {
            get
            {
                return Google.Apis.Util.Utilities.GetDateTimeFromString(EndDateRaw);
            }
            set
            {
                EndDateRaw = Google.Apis.Util.Utilities.GetStringFromDateTime(value);
            }
        }

        /// <summary>The sum of fees paid to publishers divided by the total number of clicks over the past three months
        /// on this link. This value should be multiplied by 100 at the time of display.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("epcNinetyDayAverage")]
        public virtual Money EpcNinetyDayAverage { get; set; } 

        /// <summary>The sum of fees paid to publishers divided by the total number of clicks over the past seven days
        /// on this link. This value should be multiplied by 100 at the time of display.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("epcSevenDayAverage")]
        public virtual Money EpcSevenDayAverage { get; set; } 

        /// <summary>The ID of this link.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>image alt text.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("imageAltText")]
        public virtual string ImageAltText { get; set; } 

        /// <summary>Tracking url for impressions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("impressionTrackingUrl")]
        public virtual string ImpressionTrackingUrl { get; set; } 

        /// <summary>Flag for if this link is active.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isActive")]
        public virtual System.Nullable<bool> IsActive { get; set; } 

        /// <summary>The kind for one entity.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The link type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("linkType")]
        public virtual string LinkType { get; set; } 

        /// <summary>The logical name for this link.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Promotion Type</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("promotionType")]
        public virtual string PromotionType { get; set; } 

        /// <summary>Special offers on the link.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("specialOffers")]
        public virtual Link.SpecialOffersData SpecialOffers { get; set; } 

        /// <summary>Date that this link becomes active.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startDate")]
        public virtual string StartDateRaw { get; set; }

        /// <summary><seealso cref="System.DateTime"/> representation of <see cref="StartDateRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnore]
        public virtual System.Nullable<System.DateTime> StartDate
        {
            get
            {
                return Google.Apis.Util.Utilities.GetDateTimeFromString(StartDateRaw);
            }
            set
            {
                StartDateRaw = Google.Apis.Util.Utilities.GetStringFromDateTime(value);
            }
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
        

        /// <summary>Special offers on the link.</summary>
        public class SpecialOffersData
        {
            /// <summary>Whether there is a free gift</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("freeGift")]
            public virtual System.Nullable<bool> FreeGift { get; set; } 

            /// <summary>Whether there is free shipping</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("freeShipping")]
            public virtual System.Nullable<bool> FreeShipping { get; set; } 

            /// <summary>Minimum purchase amount for free shipping promotion</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("freeShippingMin")]
            public virtual Money FreeShippingMin { get; set; } 

            /// <summary>Percent off on the purchase</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("percentOff")]
            public virtual System.Nullable<double> PercentOff { get; set; } 

            /// <summary>Minimum purchase amount for percent off promotion</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("percentOffMin")]
            public virtual Money PercentOffMin { get; set; } 

            /// <summary>Price cut on the purchase</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("priceCut")]
            public virtual Money PriceCut { get; set; } 

            /// <summary>Minimum purchase amount for price cut promotion</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("priceCutMin")]
            public virtual Money PriceCutMin { get; set; } 

            /// <summary>List of promotion code associated with the link</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("promotionCodes")]
            public virtual System.Collections.Generic.IList<string> PromotionCodes { get; set; } 

        }
    }    

    public class Links : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The links.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Link> Items { get; set; } 

        /// <summary>The kind for a page of links.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The next page token.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>An ApiMoneyProto.</summary>
    public class Money : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The amount of money.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("amount")]
        public virtual System.Nullable<double> Amount { get; set; } 

        /// <summary>The 3-letter code of the currency in question.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("currencyCode")]
        public virtual string CurrencyCode { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A PublisherResource.</summary>
    public class Publisher : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Classification that this publisher belongs to. See this link for all publisher classifications: htt
        /// p://www.google.com/support/affiliatenetwork/advertiser/bin/answer.py?hl=en=107625=cb=cb=-k5fihzthfaik=4</sum
        /// mary>
        [Newtonsoft.Json.JsonPropertyAttribute("classification")]
        public virtual string Classification { get; set; } 

        /// <summary>The sum of fees paid to this publisher divided by the total number of clicks over the past three
        /// months. Values are multiplied by 100 for display purposes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("epcNinetyDayAverage")]
        public virtual Money EpcNinetyDayAverage { get; set; } 

        /// <summary>The sum of fees paid to this publisher divided by the total number of clicks over the past seven
        /// days. Values are multiplied by 100 for display purposes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("epcSevenDayAverage")]
        public virtual Money EpcSevenDayAverage { get; set; } 

        /// <summary>The ID of this publisher.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; } 

        /// <summary>The requested publisher.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("item")]
        public virtual Publisher Item { get; set; } 

        /// <summary>Date that this publisher was approved as a Google Affiliate Network publisher.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("joinDate")]
        public virtual string JoinDateRaw { get; set; }

        /// <summary><seealso cref="System.DateTime"/> representation of <see cref="JoinDateRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnore]
        public virtual System.Nullable<System.DateTime> JoinDate
        {
            get
            {
                return Google.Apis.Util.Utilities.GetDateTimeFromString(JoinDateRaw);
            }
            set
            {
                JoinDateRaw = Google.Apis.Util.Utilities.GetStringFromDateTime(value);
            }
        }

        /// <summary>The kind for a publisher.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The name of this publisher.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>A rank based on commissions paid to this publisher over the past 90 days. A number between 1 and 4
        /// where 4 means the top quartile (most money paid) and 1 means the bottom quartile (least money
        /// paid).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("payoutRank")]
        public virtual string PayoutRank { get; set; } 

        /// <summary>Websites that this publisher uses to advertise.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sites")]
        public virtual System.Collections.Generic.IList<string> Sites { get; set; } 

        /// <summary>The status of the requesting advertiser's relationship with this publisher.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual string Status { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class Publishers : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The entity list.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Publisher> Items { get; set; } 

        /// <summary>The kind for a page of entities.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The 'pageToken' to pass to the next request to get the next page, if there are more to
        /// retrieve.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A ReportResource representing a report of a certain type either for an advertiser or
    /// publisher.</summary>
    public class Report : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The column names for the report</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("column_names")]
        public virtual System.Collections.Generic.IList<string> ColumnNames { get; set; } 

        /// <summary>The end of the date range for this report, exclusive.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("end_date")]
        public virtual string EndDate { get; set; } 

        /// <summary>The kind for a report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The number of matching rows before paging is applied.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("matching_row_count")]
        public virtual System.Nullable<long> MatchingRowCount { get; set; } 

        /// <summary>The rows of data for the report</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rows")]
        public virtual System.Collections.Generic.IList<System.Collections.Generic.IList<object>> Rows { get; set; } 

        /// <summary>The start of the date range for this report, inclusive.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("start_date")]
        public virtual string StartDate { get; set; } 

        /// <summary>The totals rows for the report</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totals_rows")]
        public virtual System.Collections.Generic.IList<System.Collections.Generic.IList<object>> TotalsRows { get; set; } 

        /// <summary>The report type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }
}
