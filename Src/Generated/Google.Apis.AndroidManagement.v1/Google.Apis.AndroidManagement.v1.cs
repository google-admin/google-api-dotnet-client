// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by google-apis-code-generator 1.5.1
//     C# generator version: 1.29.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

/**
 * \brief
 *   Android Management API Version v1
 *
 * \section ApiInfo API Version Information
 *    <table>
 *      <tr><th>API
 *          <td><a href='https://developers.google.com/android/management'>Android Management API</a>
 *      <tr><th>API Version<td>v1
 *      <tr><th>API Rev<td>20170918 (991)
 *      <tr><th>API Docs
 *          <td><a href='https://developers.google.com/android/management'>
 *              https://developers.google.com/android/management</a>
 *      <tr><th>Discovery Name<td>androidmanagement
 *    </table>
 *
 * \section ForMoreInfo For More Information
 *
 * The complete API documentation for using Android Management API can be found at
 * <a href='https://developers.google.com/android/management'>https://developers.google.com/android/management</a>.
 *
 * For more information about the Google APIs Client Library for .NET, see
 * <a href='https://developers.google.com/api-client-library/dotnet/get_started'>
 * https://developers.google.com/api-client-library/dotnet/get_started</a>
 */

namespace Google.Apis.AndroidManagement.v1
{
    /// <summary>The AndroidManagement Service.</summary>
    public class AndroidManagementService : Google.Apis.Services.BaseClientService
    {
        /// <summary>The API version.</summary>
        public const string Version = "v1";

        /// <summary>The discovery version used to generate this service.</summary>
        public static Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed =
            Google.Apis.Discovery.DiscoveryVersion.Version_1_0;

        /// <summary>Constructs a new service.</summary>
        public AndroidManagementService() :
            this(new Google.Apis.Services.BaseClientService.Initializer()) {}

        /// <summary>Constructs a new service.</summary>
        /// <param name="initializer">The service initializer.</param>
        public AndroidManagementService(Google.Apis.Services.BaseClientService.Initializer initializer)
            : base(initializer)
        {
            enterprises = new EnterprisesResource(this);
            signupUrls = new SignupUrlsResource(this);
        }

        /// <summary>Gets the service supported features.</summary>
        public override System.Collections.Generic.IList<string> Features
        {
            get { return new string[0]; }
        }

        /// <summary>Gets the service name.</summary>
        public override string Name
        {
            get { return "androidmanagement"; }
        }

        /// <summary>Gets the service base URI.</summary>
        public override string BaseUri
        {
            get { return "https://androidmanagement.googleapis.com/"; }
        }

        /// <summary>Gets the service base path.</summary>
        public override string BasePath
        {
            get { return ""; }
        }

        #if !NET40
        /// <summary>Gets the batch base URI; <c>null</c> if unspecified.</summary>
        public override string BatchUri
        {
            get { return "https://androidmanagement.googleapis.com/batch"; }
        }

        /// <summary>Gets the batch base path; <c>null</c> if unspecified.</summary>
        public override string BatchPath
        {
            get { return "batch"; }
        }
        #endif

        /// <summary>Available OAuth 2.0 scopes for use with the Android Management API.</summary>
        public class Scope
        {
            /// <summary>Manage Android devices and apps for your customers</summary>
            public static string Androidmanagement = "https://www.googleapis.com/auth/androidmanagement";

        }



        private readonly EnterprisesResource enterprises;

        /// <summary>Gets the Enterprises resource.</summary>
        public virtual EnterprisesResource Enterprises
        {
            get { return enterprises; }
        }

        private readonly SignupUrlsResource signupUrls;

        /// <summary>Gets the SignupUrls resource.</summary>
        public virtual SignupUrlsResource SignupUrls
        {
            get { return signupUrls; }
        }
    }

    ///<summary>A base abstract class for AndroidManagement requests.</summary>
    public abstract class AndroidManagementBaseServiceRequest<TResponse> : Google.Apis.Requests.ClientServiceRequest<TResponse>
    {
        ///<summary>Constructs a new AndroidManagementBaseServiceRequest instance.</summary>
        protected AndroidManagementBaseServiceRequest(Google.Apis.Services.IClientService service)
            : base(service)
        {
        }

        /// <summary>V1 error format.</summary>
        [Google.Apis.Util.RequestParameterAttribute("$.xgafv", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<XgafvEnum> Xgafv { get; set; }

        /// <summary>V1 error format.</summary>
        public enum XgafvEnum
        {
            /// <summary>v1 error format</summary>
            [Google.Apis.Util.StringValueAttribute("1")]
            Value1,
            /// <summary>v2 error format</summary>
            [Google.Apis.Util.StringValueAttribute("2")]
            Value2,
        }

        /// <summary>OAuth access token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("access_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string AccessToken { get; set; }

        /// <summary>Data format for response.</summary>
        /// [default: json]
        [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<AltEnum> Alt { get; set; }

        /// <summary>Data format for response.</summary>
        public enum AltEnum
        {
            /// <summary>Responses with Content-Type of application/json</summary>
            [Google.Apis.Util.StringValueAttribute("json")]
            Json,
            /// <summary>Media download with context-dependent Content-Type</summary>
            [Google.Apis.Util.StringValueAttribute("media")]
            Media,
            /// <summary>Responses with Content-Type of application/x-protobuf</summary>
            [Google.Apis.Util.StringValueAttribute("proto")]
            Proto,
        }

        /// <summary>OAuth bearer token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("bearer_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string BearerToken { get; set; }

        /// <summary>JSONP</summary>
        [Google.Apis.Util.RequestParameterAttribute("callback", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Callback { get; set; }

        /// <summary>Selector specifying which fields to include in a partial response.</summary>
        [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Fields { get; set; }

        /// <summary>API key. Your API key identifies your project and provides you with API access, quota, and reports.
        /// Required unless you provide an OAuth 2.0 token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("key", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Key { get; set; }

        /// <summary>OAuth 2.0 token for the current user.</summary>
        [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string OauthToken { get; set; }

        /// <summary>Pretty-print response.</summary>
        /// [default: true]
        [Google.Apis.Util.RequestParameterAttribute("pp", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<bool> Pp { get; set; }

        /// <summary>Returns response with indentations and line breaks.</summary>
        /// [default: true]
        [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<bool> PrettyPrint { get; set; }

        /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string
        /// assigned to a user, but should not exceed 40 characters.</summary>
        [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string QuotaUser { get; set; }

        /// <summary>Legacy upload protocol for media (e.g. "media", "multipart").</summary>
        [Google.Apis.Util.RequestParameterAttribute("uploadType", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UploadType { get; set; }

        /// <summary>Upload protocol for media (e.g. "raw", "multipart").</summary>
        [Google.Apis.Util.RequestParameterAttribute("upload_protocol", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UploadProtocol { get; set; }

        /// <summary>Initializes AndroidManagement parameter list.</summary>
        protected override void InitParameters()
        {
            base.InitParameters();

            RequestParameters.Add(
                "$.xgafv", new Google.Apis.Discovery.Parameter
                {
                    Name = "$.xgafv",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "access_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "access_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "alt", new Google.Apis.Discovery.Parameter
                {
                    Name = "alt",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "json",
                    Pattern = null,
                });
            RequestParameters.Add(
                "bearer_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "bearer_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "callback", new Google.Apis.Discovery.Parameter
                {
                    Name = "callback",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "fields", new Google.Apis.Discovery.Parameter
                {
                    Name = "fields",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "key", new Google.Apis.Discovery.Parameter
                {
                    Name = "key",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "oauth_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "oauth_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "pp", new Google.Apis.Discovery.Parameter
                {
                    Name = "pp",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "true",
                    Pattern = null,
                });
            RequestParameters.Add(
                "prettyPrint", new Google.Apis.Discovery.Parameter
                {
                    Name = "prettyPrint",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "true",
                    Pattern = null,
                });
            RequestParameters.Add(
                "quotaUser", new Google.Apis.Discovery.Parameter
                {
                    Name = "quotaUser",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "uploadType", new Google.Apis.Discovery.Parameter
                {
                    Name = "uploadType",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "upload_protocol", new Google.Apis.Discovery.Parameter
                {
                    Name = "upload_protocol",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
        }
    }

    /// <summary>The "enterprises" collection of methods.</summary>
    public class EnterprisesResource
    {
        private const string Resource = "enterprises";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public EnterprisesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
            applications = new ApplicationsResource(service);
            devices = new DevicesResource(service);
            enrollmentTokens = new EnrollmentTokensResource(service);
            policies = new PoliciesResource(service);
            webTokens = new WebTokensResource(service);

        }

        private readonly ApplicationsResource applications;

        /// <summary>Gets the Applications resource.</summary>
        public virtual ApplicationsResource Applications
        {
            get { return applications; }
        }

        /// <summary>The "applications" collection of methods.</summary>
        public class ApplicationsResource
        {
            private const string Resource = "applications";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public ApplicationsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Gets info about an application.</summary>
            /// <param name="name">The name of the application in the form
            /// enterprises/{enterpriseId}/applications/{package_name}</param>
            public virtual GetRequest Get(string name)
            {
                return new GetRequest(service, name);
            }

            /// <summary>Gets info about an application.</summary>
            public class GetRequest : AndroidManagementBaseServiceRequest<Google.Apis.AndroidManagement.v1.Data.Application>
            {
                /// <summary>Constructs a new Get request.</summary>
                public GetRequest(Google.Apis.Services.IClientService service, string name)
                    : base(service)
                {
                    Name = name;
                    InitParameters();
                }


                /// <summary>The name of the application in the form
                /// enterprises/{enterpriseId}/applications/{package_name}</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }

                /// <summary>The preferred language for localized application info, as a BCP47 tag (e.g. "en-US", "de").
                /// If not specified the default language of the application will be used.</summary>
                [Google.Apis.Util.RequestParameterAttribute("languageCode", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string LanguageCode { get; set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "get"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/{+name}"; }
                }

                /// <summary>Initializes Get parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^enterprises/[^/]+/applications/[^/]+$",
                        });
                    RequestParameters.Add(
                        "languageCode", new Google.Apis.Discovery.Parameter
                        {
                            Name = "languageCode",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }
        }
        private readonly DevicesResource devices;

        /// <summary>Gets the Devices resource.</summary>
        public virtual DevicesResource Devices
        {
            get { return devices; }
        }

        /// <summary>The "devices" collection of methods.</summary>
        public class DevicesResource
        {
            private const string Resource = "devices";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public DevicesResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;
                operations = new OperationsResource(service);

            }

            private readonly OperationsResource operations;

            /// <summary>Gets the Operations resource.</summary>
            public virtual OperationsResource Operations
            {
                get { return operations; }
            }

            /// <summary>The "operations" collection of methods.</summary>
            public class OperationsResource
            {
                private const string Resource = "operations";

                /// <summary>The service which this resource belongs to.</summary>
                private readonly Google.Apis.Services.IClientService service;

                /// <summary>Constructs a new resource.</summary>
                public OperationsResource(Google.Apis.Services.IClientService service)
                {
                    this.service = service;

                }


                /// <summary>Starts asynchronous cancellation on a long-running operation. The server makes a best
                /// effort to cancel the operation, but success is not guaranteed. If the server doesn't support this
                /// method, it returns google.rpc.Code.UNIMPLEMENTED. Clients can use Operations.GetOperation or other
                /// methods to check whether the cancellation succeeded or whether the operation completed despite
                /// cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
                /// operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
                /// Code.CANCELLED.</summary>
                /// <param name="name">The name of the operation resource to be cancelled.</param>
                public virtual CancelRequest Cancel(string name)
                {
                    return new CancelRequest(service, name);
                }

                /// <summary>Starts asynchronous cancellation on a long-running operation. The server makes a best
                /// effort to cancel the operation, but success is not guaranteed. If the server doesn't support this
                /// method, it returns google.rpc.Code.UNIMPLEMENTED. Clients can use Operations.GetOperation or other
                /// methods to check whether the cancellation succeeded or whether the operation completed despite
                /// cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
                /// operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
                /// Code.CANCELLED.</summary>
                public class CancelRequest : AndroidManagementBaseServiceRequest<Google.Apis.AndroidManagement.v1.Data.Empty>
                {
                    /// <summary>Constructs a new Cancel request.</summary>
                    public CancelRequest(Google.Apis.Services.IClientService service, string name)
                        : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }


                    /// <summary>The name of the operation resource to be cancelled.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }


                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "cancel"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "POST"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v1/{+name}:cancel"; }
                    }

                    /// <summary>Initializes Cancel parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^enterprises/[^/]+/devices/[^/]+/operations/[^/]+$",
                            });
                    }

                }

                /// <summary>Deletes a long-running operation. This method indicates that the client is no longer
                /// interested in the operation result. It does not cancel the operation. If the server doesn't support
                /// this method, it returns google.rpc.Code.UNIMPLEMENTED.</summary>
                /// <param name="name">The name of the operation resource to be deleted.</param>
                public virtual DeleteRequest Delete(string name)
                {
                    return new DeleteRequest(service, name);
                }

                /// <summary>Deletes a long-running operation. This method indicates that the client is no longer
                /// interested in the operation result. It does not cancel the operation. If the server doesn't support
                /// this method, it returns google.rpc.Code.UNIMPLEMENTED.</summary>
                public class DeleteRequest : AndroidManagementBaseServiceRequest<Google.Apis.AndroidManagement.v1.Data.Empty>
                {
                    /// <summary>Constructs a new Delete request.</summary>
                    public DeleteRequest(Google.Apis.Services.IClientService service, string name)
                        : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }


                    /// <summary>The name of the operation resource to be deleted.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }


                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "delete"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "DELETE"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v1/{+name}"; }
                    }

                    /// <summary>Initializes Delete parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^enterprises/[^/]+/devices/[^/]+/operations/[^/]+$",
                            });
                    }

                }

                /// <summary>Gets the latest state of a long-running operation. Clients can use this method to poll the
                /// operation result at intervals as recommended by the API service.</summary>
                /// <param name="name">The name of the operation resource.</param>
                public virtual GetRequest Get(string name)
                {
                    return new GetRequest(service, name);
                }

                /// <summary>Gets the latest state of a long-running operation. Clients can use this method to poll the
                /// operation result at intervals as recommended by the API service.</summary>
                public class GetRequest : AndroidManagementBaseServiceRequest<Google.Apis.AndroidManagement.v1.Data.Operation>
                {
                    /// <summary>Constructs a new Get request.</summary>
                    public GetRequest(Google.Apis.Services.IClientService service, string name)
                        : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }


                    /// <summary>The name of the operation resource.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }


                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "get"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "GET"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v1/{+name}"; }
                    }

                    /// <summary>Initializes Get parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^enterprises/[^/]+/devices/[^/]+/operations/[^/]+$",
                            });
                    }

                }

                /// <summary>Lists operations that match the specified filter in the request. If the server doesn't
                /// support this method, it returns UNIMPLEMENTED.NOTE: the name binding allows API services to override
                /// the binding to use different resource name schemes, such as users/operations. To override the
                /// binding, API services can add a binding such as "/v1/{name=users}/operations" to their service
                /// configuration. For backwards compatibility, the default name includes the operations collection id,
                /// however overriding users must ensure the name binding is the parent resource, without the operations
                /// collection id.</summary>
                /// <param name="name">The name of the operation's parent resource.</param>
                public virtual ListRequest List(string name)
                {
                    return new ListRequest(service, name);
                }

                /// <summary>Lists operations that match the specified filter in the request. If the server doesn't
                /// support this method, it returns UNIMPLEMENTED.NOTE: the name binding allows API services to override
                /// the binding to use different resource name schemes, such as users/operations. To override the
                /// binding, API services can add a binding such as "/v1/{name=users}/operations" to their service
                /// configuration. For backwards compatibility, the default name includes the operations collection id,
                /// however overriding users must ensure the name binding is the parent resource, without the operations
                /// collection id.</summary>
                public class ListRequest : AndroidManagementBaseServiceRequest<Google.Apis.AndroidManagement.v1.Data.ListOperationsResponse>
                {
                    /// <summary>Constructs a new List request.</summary>
                    public ListRequest(Google.Apis.Services.IClientService service, string name)
                        : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }


                    /// <summary>The name of the operation's parent resource.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>The standard list page size.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<int> PageSize { get; set; }

                    /// <summary>The standard list filter.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string Filter { get; set; }

                    /// <summary>The standard list page token.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string PageToken { get; set; }


                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "list"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "GET"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v1/{+name}"; }
                    }

                    /// <summary>Initializes List parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^enterprises/[^/]+/devices/[^/]+/operations$",
                            });
                        RequestParameters.Add(
                            "pageSize", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageSize",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        RequestParameters.Add(
                            "filter", new Google.Apis.Discovery.Parameter
                            {
                                Name = "filter",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        RequestParameters.Add(
                            "pageToken", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageToken",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                    }

                }
            }

            /// <summary>Deletes a device, which causes the device to be wiped.</summary>
            /// <param name="name">The name of the device in the form enterprises/{enterpriseId}/devices/{deviceId}</param>
            public virtual DeleteRequest Delete(string name)
            {
                return new DeleteRequest(service, name);
            }

            /// <summary>Deletes a device, which causes the device to be wiped.</summary>
            public class DeleteRequest : AndroidManagementBaseServiceRequest<Google.Apis.AndroidManagement.v1.Data.Empty>
            {
                /// <summary>Constructs a new Delete request.</summary>
                public DeleteRequest(Google.Apis.Services.IClientService service, string name)
                    : base(service)
                {
                    Name = name;
                    InitParameters();
                }


                /// <summary>The name of the device in the form enterprises/{enterpriseId}/devices/{deviceId}</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "delete"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "DELETE"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/{+name}"; }
                }

                /// <summary>Initializes Delete parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^enterprises/[^/]+/devices/[^/]+$",
                        });
                }

            }

            /// <summary>Gets a device.</summary>
            /// <param name="name">The name of the device in the form enterprises/{enterpriseId}/devices/{deviceId}</param>
            public virtual GetRequest Get(string name)
            {
                return new GetRequest(service, name);
            }

            /// <summary>Gets a device.</summary>
            public class GetRequest : AndroidManagementBaseServiceRequest<Google.Apis.AndroidManagement.v1.Data.Device>
            {
                /// <summary>Constructs a new Get request.</summary>
                public GetRequest(Google.Apis.Services.IClientService service, string name)
                    : base(service)
                {
                    Name = name;
                    InitParameters();
                }


                /// <summary>The name of the device in the form enterprises/{enterpriseId}/devices/{deviceId}</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "get"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/{+name}"; }
                }

                /// <summary>Initializes Get parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^enterprises/[^/]+/devices/[^/]+$",
                        });
                }

            }

            /// <summary>Issues a command to a device. The Operation resource returned contains a Command in its
            /// metadata field. Use the get operation method to get the status of the command.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="name">The name of the device in the form enterprises/{enterpriseId}/devices/{deviceId}</param>
            public virtual IssueCommandRequest IssueCommand(Google.Apis.AndroidManagement.v1.Data.Command body, string name)
            {
                return new IssueCommandRequest(service, body, name);
            }

            /// <summary>Issues a command to a device. The Operation resource returned contains a Command in its
            /// metadata field. Use the get operation method to get the status of the command.</summary>
            public class IssueCommandRequest : AndroidManagementBaseServiceRequest<Google.Apis.AndroidManagement.v1.Data.Operation>
            {
                /// <summary>Constructs a new IssueCommand request.</summary>
                public IssueCommandRequest(Google.Apis.Services.IClientService service, Google.Apis.AndroidManagement.v1.Data.Command body, string name)
                    : base(service)
                {
                    Name = name;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The name of the device in the form enterprises/{enterpriseId}/devices/{deviceId}</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.AndroidManagement.v1.Data.Command Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "issueCommand"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/{+name}:issueCommand"; }
                }

                /// <summary>Initializes IssueCommand parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^enterprises/[^/]+/devices/[^/]+$",
                        });
                }

            }

            /// <summary>Lists devices for a given enterprise.</summary>
            /// <param name="parent">The name of the enterprise in the form enterprises/{enterpriseId}</param>
            public virtual ListRequest List(string parent)
            {
                return new ListRequest(service, parent);
            }

            /// <summary>Lists devices for a given enterprise.</summary>
            public class ListRequest : AndroidManagementBaseServiceRequest<Google.Apis.AndroidManagement.v1.Data.ListDevicesResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, string parent)
                    : base(service)
                {
                    Parent = parent;
                    InitParameters();
                }


                /// <summary>The name of the enterprise in the form enterprises/{enterpriseId}</summary>
                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Parent { get; private set; }

                /// <summary>The requested page size. The actual page size may be fixed to a min or max value.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<int> PageSize { get; set; }

                /// <summary>A token identifying a page of results the server should return.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string PageToken { get; set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/{+parent}/devices"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^enterprises/[^/]+$",
                        });
                    RequestParameters.Add(
                        "pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>Updates a device.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="name">The name of the device in the form enterprises/{enterpriseId}/devices/{deviceId}</param>
            public virtual PatchRequest Patch(Google.Apis.AndroidManagement.v1.Data.Device body, string name)
            {
                return new PatchRequest(service, body, name);
            }

            /// <summary>Updates a device.</summary>
            public class PatchRequest : AndroidManagementBaseServiceRequest<Google.Apis.AndroidManagement.v1.Data.Device>
            {
                /// <summary>Constructs a new Patch request.</summary>
                public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.AndroidManagement.v1.Data.Device body, string name)
                    : base(service)
                {
                    Name = name;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The name of the device in the form enterprises/{enterpriseId}/devices/{deviceId}</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }

                /// <summary>The field mask indicating the fields to update. If not set, all modifiable fields will be
                /// modified.</summary>
                [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                public virtual object UpdateMask { get; set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.AndroidManagement.v1.Data.Device Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "patch"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "PATCH"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/{+name}"; }
                }

                /// <summary>Initializes Patch parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^enterprises/[^/]+/devices/[^/]+$",
                        });
                    RequestParameters.Add(
                        "updateMask", new Google.Apis.Discovery.Parameter
                        {
                            Name = "updateMask",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }
        }
        private readonly EnrollmentTokensResource enrollmentTokens;

        /// <summary>Gets the EnrollmentTokens resource.</summary>
        public virtual EnrollmentTokensResource EnrollmentTokens
        {
            get { return enrollmentTokens; }
        }

        /// <summary>The "enrollmentTokens" collection of methods.</summary>
        public class EnrollmentTokensResource
        {
            private const string Resource = "enrollmentTokens";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public EnrollmentTokensResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Creates an enrollment token for a given enterprise.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="parent">The name of the enterprise in the form enterprises/{enterpriseId}</param>
            public virtual CreateRequest Create(Google.Apis.AndroidManagement.v1.Data.EnrollmentToken body, string parent)
            {
                return new CreateRequest(service, body, parent);
            }

            /// <summary>Creates an enrollment token for a given enterprise.</summary>
            public class CreateRequest : AndroidManagementBaseServiceRequest<Google.Apis.AndroidManagement.v1.Data.EnrollmentToken>
            {
                /// <summary>Constructs a new Create request.</summary>
                public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.AndroidManagement.v1.Data.EnrollmentToken body, string parent)
                    : base(service)
                {
                    Parent = parent;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The name of the enterprise in the form enterprises/{enterpriseId}</summary>
                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Parent { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.AndroidManagement.v1.Data.EnrollmentToken Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "create"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/{+parent}/enrollmentTokens"; }
                }

                /// <summary>Initializes Create parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^enterprises/[^/]+$",
                        });
                }

            }

            /// <summary>Deletes an enrollment token, which prevents future use of the token.</summary>
            /// <param name="name">The name of the enrollment token in the form
            /// enterprises/{enterpriseId}/enrollmentTokens/{enrollmentTokenId}</param>
            public virtual DeleteRequest Delete(string name)
            {
                return new DeleteRequest(service, name);
            }

            /// <summary>Deletes an enrollment token, which prevents future use of the token.</summary>
            public class DeleteRequest : AndroidManagementBaseServiceRequest<Google.Apis.AndroidManagement.v1.Data.Empty>
            {
                /// <summary>Constructs a new Delete request.</summary>
                public DeleteRequest(Google.Apis.Services.IClientService service, string name)
                    : base(service)
                {
                    Name = name;
                    InitParameters();
                }


                /// <summary>The name of the enrollment token in the form
                /// enterprises/{enterpriseId}/enrollmentTokens/{enrollmentTokenId}</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "delete"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "DELETE"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/{+name}"; }
                }

                /// <summary>Initializes Delete parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^enterprises/[^/]+/enrollmentTokens/[^/]+$",
                        });
                }

            }
        }
        private readonly PoliciesResource policies;

        /// <summary>Gets the Policies resource.</summary>
        public virtual PoliciesResource Policies
        {
            get { return policies; }
        }

        /// <summary>The "policies" collection of methods.</summary>
        public class PoliciesResource
        {
            private const string Resource = "policies";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public PoliciesResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Deletes a policy. This operation is only permitted if no devices are currently referencing the
            /// policy.</summary>
            /// <param name="name">The name of the policy in the form enterprises/{enterpriseId}/policies/{policyId}</param>
            public virtual DeleteRequest Delete(string name)
            {
                return new DeleteRequest(service, name);
            }

            /// <summary>Deletes a policy. This operation is only permitted if no devices are currently referencing the
            /// policy.</summary>
            public class DeleteRequest : AndroidManagementBaseServiceRequest<Google.Apis.AndroidManagement.v1.Data.Empty>
            {
                /// <summary>Constructs a new Delete request.</summary>
                public DeleteRequest(Google.Apis.Services.IClientService service, string name)
                    : base(service)
                {
                    Name = name;
                    InitParameters();
                }


                /// <summary>The name of the policy in the form enterprises/{enterpriseId}/policies/{policyId}</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "delete"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "DELETE"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/{+name}"; }
                }

                /// <summary>Initializes Delete parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^enterprises/[^/]+/policies/[^/]+$",
                        });
                }

            }

            /// <summary>Gets a policy.</summary>
            /// <param name="name">The name of the policy in the form enterprises/{enterpriseId}/policies/{policyId}</param>
            public virtual GetRequest Get(string name)
            {
                return new GetRequest(service, name);
            }

            /// <summary>Gets a policy.</summary>
            public class GetRequest : AndroidManagementBaseServiceRequest<Google.Apis.AndroidManagement.v1.Data.Policy>
            {
                /// <summary>Constructs a new Get request.</summary>
                public GetRequest(Google.Apis.Services.IClientService service, string name)
                    : base(service)
                {
                    Name = name;
                    InitParameters();
                }


                /// <summary>The name of the policy in the form enterprises/{enterpriseId}/policies/{policyId}</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "get"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/{+name}"; }
                }

                /// <summary>Initializes Get parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^enterprises/[^/]+/policies/[^/]+$",
                        });
                }

            }

            /// <summary>Lists policies for a given enterprise.</summary>
            /// <param name="parent">The name of the enterprise in the form enterprises/{enterpriseId}</param>
            public virtual ListRequest List(string parent)
            {
                return new ListRequest(service, parent);
            }

            /// <summary>Lists policies for a given enterprise.</summary>
            public class ListRequest : AndroidManagementBaseServiceRequest<Google.Apis.AndroidManagement.v1.Data.ListPoliciesResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, string parent)
                    : base(service)
                {
                    Parent = parent;
                    InitParameters();
                }


                /// <summary>The name of the enterprise in the form enterprises/{enterpriseId}</summary>
                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Parent { get; private set; }

                /// <summary>The requested page size. The actual page size may be fixed to a min or max value.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<int> PageSize { get; set; }

                /// <summary>A token identifying a page of results the server should return.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string PageToken { get; set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/{+parent}/policies"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^enterprises/[^/]+$",
                        });
                    RequestParameters.Add(
                        "pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>Updates or creates a policy.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="name">The name of the policy in the form enterprises/{enterpriseId}/policies/{policyId}</param>
            public virtual PatchRequest Patch(Google.Apis.AndroidManagement.v1.Data.Policy body, string name)
            {
                return new PatchRequest(service, body, name);
            }

            /// <summary>Updates or creates a policy.</summary>
            public class PatchRequest : AndroidManagementBaseServiceRequest<Google.Apis.AndroidManagement.v1.Data.Policy>
            {
                /// <summary>Constructs a new Patch request.</summary>
                public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.AndroidManagement.v1.Data.Policy body, string name)
                    : base(service)
                {
                    Name = name;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The name of the policy in the form enterprises/{enterpriseId}/policies/{policyId}</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }

                /// <summary>The field mask indicating the fields to update. If not set, all modifiable fields will be
                /// modified.</summary>
                [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                public virtual object UpdateMask { get; set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.AndroidManagement.v1.Data.Policy Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "patch"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "PATCH"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/{+name}"; }
                }

                /// <summary>Initializes Patch parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^enterprises/[^/]+/policies/[^/]+$",
                        });
                    RequestParameters.Add(
                        "updateMask", new Google.Apis.Discovery.Parameter
                        {
                            Name = "updateMask",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }
        }
        private readonly WebTokensResource webTokens;

        /// <summary>Gets the WebTokens resource.</summary>
        public virtual WebTokensResource WebTokens
        {
            get { return webTokens; }
        }

        /// <summary>The "webTokens" collection of methods.</summary>
        public class WebTokensResource
        {
            private const string Resource = "webTokens";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public WebTokensResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Creates a web token to access an embeddable managed Google Play web UI for a given
            /// enterprise.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="parent">The name of the enterprise in the form enterprises/{enterpriseId}</param>
            public virtual CreateRequest Create(Google.Apis.AndroidManagement.v1.Data.WebToken body, string parent)
            {
                return new CreateRequest(service, body, parent);
            }

            /// <summary>Creates a web token to access an embeddable managed Google Play web UI for a given
            /// enterprise.</summary>
            public class CreateRequest : AndroidManagementBaseServiceRequest<Google.Apis.AndroidManagement.v1.Data.WebToken>
            {
                /// <summary>Constructs a new Create request.</summary>
                public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.AndroidManagement.v1.Data.WebToken body, string parent)
                    : base(service)
                {
                    Parent = parent;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The name of the enterprise in the form enterprises/{enterpriseId}</summary>
                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Parent { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.AndroidManagement.v1.Data.WebToken Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "create"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/{+parent}/webTokens"; }
                }

                /// <summary>Initializes Create parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^enterprises/[^/]+$",
                        });
                }

            }
        }

        /// <summary>Creates an enterprise by completing the enterprise signup flow.</summary>
        /// <param name="body">The body of the request.</param>
        public virtual CreateRequest Create(Google.Apis.AndroidManagement.v1.Data.Enterprise body)
        {
            return new CreateRequest(service, body);
        }

        /// <summary>Creates an enterprise by completing the enterprise signup flow.</summary>
        public class CreateRequest : AndroidManagementBaseServiceRequest<Google.Apis.AndroidManagement.v1.Data.Enterprise>
        {
            /// <summary>Constructs a new Create request.</summary>
            public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.AndroidManagement.v1.Data.Enterprise body)
                : base(service)
            {
                Body = body;
                InitParameters();
            }


            /// <summary>The name of the SignupUrl used to sign up for the enterprise.</summary>
            [Google.Apis.Util.RequestParameterAttribute("signupUrlName", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SignupUrlName { get; set; }

            /// <summary>The enterprise token appended to the callback URL.</summary>
            [Google.Apis.Util.RequestParameterAttribute("enterpriseToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string EnterpriseToken { get; set; }

            /// <summary>The id of the Google Cloud Platform project which will own the enterprise.</summary>
            [Google.Apis.Util.RequestParameterAttribute("projectId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ProjectId { get; set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.AndroidManagement.v1.Data.Enterprise Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "create"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1/enterprises"; }
            }

            /// <summary>Initializes Create parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "signupUrlName", new Google.Apis.Discovery.Parameter
                    {
                        Name = "signupUrlName",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "enterpriseToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "enterpriseToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "projectId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "projectId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Gets an enterprise.</summary>
        /// <param name="name">The name of the enterprise in the form enterprises/{enterpriseId}</param>
        public virtual GetRequest Get(string name)
        {
            return new GetRequest(service, name);
        }

        /// <summary>Gets an enterprise.</summary>
        public class GetRequest : AndroidManagementBaseServiceRequest<Google.Apis.AndroidManagement.v1.Data.Enterprise>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string name)
                : base(service)
            {
                Name = name;
                InitParameters();
            }


            /// <summary>The name of the enterprise in the form enterprises/{enterpriseId}</summary>
            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Name { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1/{+name}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^enterprises/[^/]+$",
                    });
            }

        }

        /// <summary>Updates an enterprise.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="name">The name of the enterprise in the form enterprises/{enterpriseId}</param>
        public virtual PatchRequest Patch(Google.Apis.AndroidManagement.v1.Data.Enterprise body, string name)
        {
            return new PatchRequest(service, body, name);
        }

        /// <summary>Updates an enterprise.</summary>
        public class PatchRequest : AndroidManagementBaseServiceRequest<Google.Apis.AndroidManagement.v1.Data.Enterprise>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.AndroidManagement.v1.Data.Enterprise body, string name)
                : base(service)
            {
                Name = name;
                Body = body;
                InitParameters();
            }


            /// <summary>The name of the enterprise in the form enterprises/{enterpriseId}</summary>
            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Name { get; private set; }

            /// <summary>The field mask indicating the fields to update. If not set, all modifiable fields will be
            /// modified.</summary>
            [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
            public virtual object UpdateMask { get; set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.AndroidManagement.v1.Data.Enterprise Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1/{+name}"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^enterprises/[^/]+$",
                    });
                RequestParameters.Add(
                    "updateMask", new Google.Apis.Discovery.Parameter
                    {
                        Name = "updateMask",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "signupUrls" collection of methods.</summary>
    public class SignupUrlsResource
    {
        private const string Resource = "signupUrls";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public SignupUrlsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Creates an enterprise signup URL.</summary>
        public virtual CreateRequest Create()
        {
            return new CreateRequest(service);
        }

        /// <summary>Creates an enterprise signup URL.</summary>
        public class CreateRequest : AndroidManagementBaseServiceRequest<Google.Apis.AndroidManagement.v1.Data.SignupUrl>
        {
            /// <summary>Constructs a new Create request.</summary>
            public CreateRequest(Google.Apis.Services.IClientService service)
                : base(service)
            {
                InitParameters();
            }


            /// <summary>The callback URL to which the admin will be redirected after successfully creating an
            /// enterprise. Before redirecting there the system will add a query parameter to this URL named
            /// enterpriseToken which will contain an opaque token to be used for the create enterprise request. The URL
            /// will be parsed then reformatted in order to add the enterpriseToken parameter, so there may be some
            /// minor formatting changes.</summary>
            [Google.Apis.Util.RequestParameterAttribute("callbackUrl", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string CallbackUrl { get; set; }

            /// <summary>The id of the Google Cloud Platform project which will own the enterprise.</summary>
            [Google.Apis.Util.RequestParameterAttribute("projectId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ProjectId { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "create"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1/signupUrls"; }
            }

            /// <summary>Initializes Create parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "callbackUrl", new Google.Apis.Discovery.Parameter
                    {
                        Name = "callbackUrl",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "projectId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "projectId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }
}

namespace Google.Apis.AndroidManagement.v1.Data
{    

    /// <summary>A compliance rule condition which is satisfied if the Android Framework API level on the device does
    /// not meet a minimum requirement. There can only be one rule with this type of condition per policy.</summary>
    public class ApiLevelCondition : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The minimum desired Android Framework API level. If the device does not meet the minimum
        /// requirement, this condition is satisfied. Must be greater than zero.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("minApiLevel")]
        public virtual System.Nullable<int> MinApiLevel { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Application information.</summary>
    public class Application : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The set of managed properties available to be pre-configured for the application.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("managedProperties")]
        public virtual System.Collections.Generic.IList<ManagedProperty> ManagedProperties { get; set; } 

        /// <summary>The name of the application in the form
        /// enterprises/{enterpriseId}/applications/{package_name}</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The permissions required by the app.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("permissions")]
        public virtual System.Collections.Generic.IList<ApplicationPermission> Permissions { get; set; } 

        /// <summary>The title of the application. Localized.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Application permission.</summary>
    public class ApplicationPermission : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A longer description of the permission, giving more details of what it affects.
        /// Localized.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>The name of the permission. Localized.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>An opaque string uniquely identifying the permission. Not localized.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("permissionId")]
        public virtual string PermissionId { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Policy for an individual app.</summary>
    public class ApplicationPolicy : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The default policy for all permissions requested by the app. If specified, this overrides the
        /// policy-level default_permission_policy which applies to all apps.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultPermissionPolicy")]
        public virtual string DefaultPermissionPolicy { get; set; } 

        /// <summary>The type of installation to perform.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("installType")]
        public virtual string InstallType { get; set; } 

        /// <summary>Whether the application is allowed to lock itself in full-screen mode.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lockTaskAllowed")]
        public virtual System.Nullable<bool> LockTaskAllowed { get; set; } 

        /// <summary>Managed configuration applied to the app. The format for the configuration is dictated by the
        /// ManagedProperty values supported by the app. Each field name in the managed configuration must match the key
        /// field of the ManagedProperty. The field value must be compatible with the type of the ManagedProperty:
        /// typeJSON value BOOLtrue or false STRINGstring INTEGERnumber CHOICEstring MULTISELECTarray of strings
        /// HIDDENstring BUNDLE_ARRAYarray of objects </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("managedConfiguration")]
        public virtual System.Collections.Generic.IDictionary<string,object> ManagedConfiguration { get; set; } 

        /// <summary>The package name of the app, e.g. com.google.android.youtube for the YouTube app.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("packageName")]
        public virtual string PackageName { get; set; } 

        /// <summary>Explicit permission grants or denials for the app. These values override the
        /// default_permission_policy.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("permissionGrants")]
        public virtual System.Collections.Generic.IList<PermissionGrant> PermissionGrants { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A command.</summary>
    public class Command : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The timestamp at which the command was created. The timestamp is automatically generated by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual object CreateTime { get; set; } 

        /// <summary>The duration for which the command is valid. The command will expire if not executed by the device
        /// during this time. The default duration if unspecified is ten minutes. There is no maximum
        /// duration.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("duration")]
        public virtual object Duration { get; set; } 

        /// <summary>For commands of type RESET_PASSWORD, optionally specifies the new password.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("newPassword")]
        public virtual string NewPassword { get; set; } 

        /// <summary>For commands of type RESET_PASSWORD, optionally specifies flags.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resetPasswordFlags")]
        public virtual System.Collections.Generic.IList<string> ResetPasswordFlags { get; set; } 

        /// <summary>The type of the command.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A rule declaring which mitigating actions to take when a device is not compliant with its policy. For
    /// every rule, there is always an implicit mitigating action to set policy_compliant to false for the Device
    /// resource, and display a message on the device indicating that the device is not compliant with its policy. Other
    /// mitigating actions may optionally be taken as well, depending on the field values in the rule.</summary>
    public class ComplianceRule : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A condition which is satisfied if the Android Framework API level on the device does not meet a
        /// minimum requirement.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("apiLevelCondition")]
        public virtual ApiLevelCondition ApiLevelCondition { get; set; } 

        /// <summary>If set to true, the rule includes a mitigating action to disable applications so that the device is
        /// effectively disabled, but application data is preserved. If the device is running an app in locked task
        /// mode, the app will be closed and a UI showing the reason for non-compliance will be displayed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("disableApps")]
        public virtual System.Nullable<bool> DisableApps { get; set; } 

        /// <summary>A condition which is satisfied if there exists any matching NonComplianceDetail for the
        /// device.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nonComplianceDetailCondition")]
        public virtual NonComplianceDetailCondition NonComplianceDetailCondition { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A device owned by an enterprise. Unless otherwise noted, all fields are read-only and cannot be
    /// modified by an update device request.</summary>
    public class Device : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The API level of the Android platform version running on the device.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("apiLevel")]
        public virtual System.Nullable<int> ApiLevel { get; set; } 

        /// <summary>The name of the policy that is currently applied by the device.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("appliedPolicyName")]
        public virtual string AppliedPolicyName { get; set; } 

        /// <summary>The version of the policy that is currently applied by the device.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("appliedPolicyVersion")]
        public virtual System.Nullable<long> AppliedPolicyVersion { get; set; } 

        /// <summary>The state that is currently applied by the device.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("appliedState")]
        public virtual string AppliedState { get; set; } 

        /// <summary>If the device state is DISABLED, an optional message that is displayed on the device indicating the
        /// reason the device is disabled. This field may be modified by an update request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("disabledReason")]
        public virtual UserFacingMessage DisabledReason { get; set; } 

        /// <summary>Displays on the device. This information is only available when displayInfoEnabled is true in the
        /// device's policy.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displays")]
        public virtual System.Collections.Generic.IList<Display> Displays { get; set; } 

        /// <summary>The time of device enrollment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enrollmentTime")]
        public virtual object EnrollmentTime { get; set; } 

        /// <summary>If this device was enrolled with an enrollment token with additional data provided, this field
        /// contains that data.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enrollmentTokenData")]
        public virtual string EnrollmentTokenData { get; set; } 

        /// <summary>If this device was enrolled with an enrollment token, this field contains the name of the
        /// token.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enrollmentTokenName")]
        public virtual string EnrollmentTokenName { get; set; } 

        /// <summary>Detailed information about the device hardware.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hardwareInfo")]
        public virtual HardwareInfo HardwareInfo { get; set; } 

        /// <summary>Hardware status samples in chronological order. This information is only available when
        /// hardwareStatusEnabled is true in the device's policy.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hardwareStatusSamples")]
        public virtual System.Collections.Generic.IList<HardwareStatus> HardwareStatusSamples { get; set; } 

        /// <summary>The last time the device sent a policy compliance report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastPolicyComplianceReportTime")]
        public virtual object LastPolicyComplianceReportTime { get; set; } 

        /// <summary>The last time the device fetched its policy.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastPolicySyncTime")]
        public virtual object LastPolicySyncTime { get; set; } 

        /// <summary>The last time the device sent a status report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastStatusReportTime")]
        public virtual object LastStatusReportTime { get; set; } 

        /// <summary>Events related to memory and storage measurements in chronological order. This information is only
        /// available when memoryInfoEnabled is true in the device's policy.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("memoryEvents")]
        public virtual System.Collections.Generic.IList<MemoryEvent> MemoryEvents { get; set; } 

        /// <summary>Memory information. This information is only available when memoryInfoEnabled is true in the
        /// device's policy.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("memoryInfo")]
        public virtual MemoryInfo MemoryInfo { get; set; } 

        /// <summary>The name of the device in the form enterprises/{enterpriseId}/devices/{deviceId}</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Device network information. This information is only available when networkInfoEnabled is true in
        /// the device's policy.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("networkInfo")]
        public virtual NetworkInfo NetworkInfo { get; set; } 

        /// <summary>Details about policy settings for which the device is not in compliance.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nonComplianceDetails")]
        public virtual System.Collections.Generic.IList<NonComplianceDetail> NonComplianceDetails { get; set; } 

        /// <summary>Whether the device is compliant with its policy.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("policyCompliant")]
        public virtual System.Nullable<bool> PolicyCompliant { get; set; } 

        /// <summary>The name of the policy that is intended to be applied to the device. If empty, the policy with id
        /// default is applied. This field may be modified by an update request. The name of the policy is in the form
        /// enterprises/{enterpriseId}/policies/{policyId}. It is also permissible to only specify the policyId when
        /// updating this field as long as the policyId contains no slashes since the rest of the policy name can be
        /// inferred from context.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("policyName")]
        public virtual string PolicyName { get; set; } 

        /// <summary>Power management events on the device in chronological order. This information is only available
        /// when powerManagementEventsEnabled is true in the device's policy.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("powerManagementEvents")]
        public virtual System.Collections.Generic.IList<PowerManagementEvent> PowerManagementEvents { get; set; } 

        /// <summary>The previous device names used for the same physical device when it has been enrolled multiple
        /// times. The serial number is used as the unique identifier to determine if the same physical device has
        /// enrolled previously. The names are in chronological order.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("previousDeviceNames")]
        public virtual System.Collections.Generic.IList<string> PreviousDeviceNames { get; set; } 

        /// <summary>Detailed information about the device software. This information is only available when
        /// softwareInfoEnabled is true in the device's policy.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("softwareInfo")]
        public virtual SoftwareInfo SoftwareInfo { get; set; } 

        /// <summary>The state that is intended to be applied to the device. This field may be modified by an update
        /// request. Note that UpdateDevice only handles toggling between ACTIVE and DISABLED states. Use the delete
        /// device method to cause the device to enter the DELETED state.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; } 

        /// <summary>The resource name of the user of the device in the form enterprises/{enterpriseId}/users/{userId}.
        /// This is the name of the device account automatically created for this device.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userName")]
        public virtual string UserName { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Device display information.</summary>
    public class Display : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Display density expressed as dots-per-inch.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("density")]
        public virtual System.Nullable<int> Density { get; set; } 

        /// <summary>Unique display id.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayId")]
        public virtual System.Nullable<int> DisplayId { get; set; } 

        /// <summary>Display height in pixels.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("height")]
        public virtual System.Nullable<int> Height { get; set; } 

        /// <summary>Name of the display.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Refresh rate of the display in frames per second.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("refreshRate")]
        public virtual System.Nullable<int> RefreshRate { get; set; } 

        /// <summary>State of the display.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; } 

        /// <summary>Display width in pixels.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("width")]
        public virtual System.Nullable<int> Width { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A
    /// typical example is to use it as the request or the response type of an API method. For instance: service Foo {
    /// rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for Empty is empty
    /// JSON object {}.</summary>
    public class Empty : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>An enrollment token.</summary>
    public class EnrollmentToken : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional, arbitrary data associated with the enrollment token. This could contain, for example, the
        /// id of an org unit to which the device is assigned after enrollment. After a device enrolls with the token,
        /// this data will be exposed in the enrollment_token_data field of the Device resource. The data must be 1024
        /// characters or less; otherwise, the creation request will fail.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("additionalData")]
        public virtual string AdditionalData { get; set; } 

        /// <summary>The duration of the token. If not specified, the duration will be 1 hour. The allowed range is 1
        /// minute to 30 days.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("duration")]
        public virtual object Duration { get; set; } 

        /// <summary>The expiration time of the token. This is a read-only field generated by the server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("expirationTimestamp")]
        public virtual object ExpirationTimestamp { get; set; } 

        /// <summary>The name of the enrollment token, which is generated by the server during creation, in the form
        /// enterprises/{enterpriseId}/enrollmentTokens/{enrollmentTokenId}</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The name of the policy that will be initially applied to the enrolled device in the form
        /// enterprises/{enterpriseId}/policies/{policyId}. If not specified, the policy with id default is applied. It
        /// is permissible to only specify the policyId when updating this field as long as the policyId contains no
        /// slashes since the rest of the policy name can be inferred from context.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("policyName")]
        public virtual string PolicyName { get; set; } 

        /// <summary>A JSON string whose UTF-8 representation can be used to generate a QR code to enroll a device with
        /// this enrollment token. To enroll a device using NFC, the NFC record must contain a serialized
        /// java.util.Properties representation of the properties in the JSON.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("qrCode")]
        public virtual string QrCode { get; set; } 

        /// <summary>The token value which is passed to the device and authorizes the device to enroll. This is a read-
        /// only field generated by the server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The configuration applied to an enterprise.</summary>
    public class Enterprise : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Whether app auto-approval is enabled. When enabled, apps installed via policy for this enterprise
        /// have all permissions automatically approved. When enabled, it is the caller's responsibility to display the
        /// permissions required by an app to the enterprise admin before setting the app to be installed in a
        /// policy.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("appAutoApprovalEnabled")]
        public virtual System.Nullable<bool> AppAutoApprovalEnabled { get; set; } 

        /// <summary>The notification types to enable via Google Cloud Pub/Sub.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enabledNotificationTypes")]
        public virtual System.Collections.Generic.IList<string> EnabledNotificationTypes { get; set; } 

        /// <summary>The name of the enterprise as it will appear to users.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enterpriseDisplayName")]
        public virtual string EnterpriseDisplayName { get; set; } 

        /// <summary>An image displayed as a logo during device provisioning. Supported types are: image/bmp, image/gif,
        /// image/x-ico, image/jpeg, image/png, image/webp, image/vnd.wap.wbmp, image/x-adobe-dng.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("logo")]
        public virtual ExternalData Logo { get; set; } 

        /// <summary>The name of the enterprise which is generated by the server during creation, in the form
        /// enterprises/{enterpriseId}</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>A color in RGB format indicating the predominant color to display in the device management app UI.
        /// The color components are stored as follows: (red << 16) | (green << 8) | blue, where each component may take
        /// a value between 0 and 255 inclusive.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("primaryColor")]
        public virtual System.Nullable<int> PrimaryColor { get; set; } 

        /// <summary>When Cloud Pub/Sub notifications are enabled, this field is required to indicate the topic to which
        /// the notifications will be published. The format of this field is projects/{project}/topics/{topic}. You must
        /// have granted the publish permission on this topic to android-cloud-
        /// policy@system.gserviceaccount.com</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pubsubTopic")]
        public virtual string PubsubTopic { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Data hosted at an external location. The data is to be downloaded by Android Device Policy and verified
    /// against the hash.</summary>
    public class ExternalData : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The base-64 encoded SHA-256 hash of the content hosted at url. If the content does not match this
        /// hash, Android Device Policy will not use the data.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sha256Hash")]
        public virtual string Sha256Hash { get; set; } 

        /// <summary>The absolute URL to the data, which must use either the http or https scheme. Android Device Policy
        /// does not provide any credentials in the GET request, so the URL must be publicly accessible. Including a
        /// long, random component in the URL may be used to prevent attackers from discovering the URL.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("url")]
        public virtual string Url { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Information about device hardware. The fields related to temperature thresholds are only available when
    /// hardwareStatusEnabled is true in the device's policy.</summary>
    public class HardwareInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Battery shutdown temperature thresholds in Celsius for each battery on the device.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("batteryShutdownTemperatures")]
        public virtual System.Collections.Generic.IList<System.Nullable<float>> BatteryShutdownTemperatures { get; set; } 

        /// <summary>Battery throttling temperature thresholds in Celsius for each battery on the device.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("batteryThrottlingTemperatures")]
        public virtual System.Collections.Generic.IList<System.Nullable<float>> BatteryThrottlingTemperatures { get; set; } 

        /// <summary>Brand of the device, e.g. Google.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("brand")]
        public virtual string Brand { get; set; } 

        /// <summary>CPU shutdown temperature thresholds in Celsius for each CPU on the device.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cpuShutdownTemperatures")]
        public virtual System.Collections.Generic.IList<System.Nullable<float>> CpuShutdownTemperatures { get; set; } 

        /// <summary>CPU throttling temperature thresholds in Celsius for each CPU on the device.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cpuThrottlingTemperatures")]
        public virtual System.Collections.Generic.IList<System.Nullable<float>> CpuThrottlingTemperatures { get; set; } 

        /// <summary>Baseband version, e.g. MDM9625_104662.22.05.34p.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deviceBasebandVersion")]
        public virtual string DeviceBasebandVersion { get; set; } 

        /// <summary>GPU shutdown temperature thresholds in Celsius for each GPU on the device.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("gpuShutdownTemperatures")]
        public virtual System.Collections.Generic.IList<System.Nullable<float>> GpuShutdownTemperatures { get; set; } 

        /// <summary>GPU throttling temperature thresholds in Celsius for each GPU on the device.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("gpuThrottlingTemperatures")]
        public virtual System.Collections.Generic.IList<System.Nullable<float>> GpuThrottlingTemperatures { get; set; } 

        /// <summary>Name of the hardware, e.g. Angler.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hardware")]
        public virtual string Hardware { get; set; } 

        /// <summary>Manufacturer, e.g. Motorola.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("manufacturer")]
        public virtual string Manufacturer { get; set; } 

        /// <summary>The model of the device, e.g. Asus Nexus 7.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("model")]
        public virtual string Model { get; set; } 

        /// <summary>The device serial number.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("serialNumber")]
        public virtual string SerialNumber { get; set; } 

        /// <summary>Device skin shutdown temperature thresholds in Celsius.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("skinShutdownTemperatures")]
        public virtual System.Collections.Generic.IList<System.Nullable<float>> SkinShutdownTemperatures { get; set; } 

        /// <summary>Device skin throttling temperature thresholds in Celsius.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("skinThrottlingTemperatures")]
        public virtual System.Collections.Generic.IList<System.Nullable<float>> SkinThrottlingTemperatures { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Hardware status. Temperatures may be compared to the temperature thresholds available in hardwareInfo
    /// to determine hardware health.</summary>
    public class HardwareStatus : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Current battery temperatures in Celsius for each battery on the device.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("batteryTemperatures")]
        public virtual System.Collections.Generic.IList<System.Nullable<float>> BatteryTemperatures { get; set; } 

        /// <summary>Current CPU temperatures in Celsius for each CPU on the device.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cpuTemperatures")]
        public virtual System.Collections.Generic.IList<System.Nullable<float>> CpuTemperatures { get; set; } 

        /// <summary>CPU usages in percentage for each core available on the device. Usage is 0 for each unplugged core.
        /// Empty array implies that CPU usage is not supported in the system.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cpuUsages")]
        public virtual System.Collections.Generic.IList<System.Nullable<float>> CpuUsages { get; set; } 

        /// <summary>The time the measurements were taken.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual object CreateTime { get; set; } 

        /// <summary>Fan speeds in RPM for each fan on the device. Empty array means that there are no fans or fan speed
        /// is not supported on the system.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fanSpeeds")]
        public virtual System.Collections.Generic.IList<System.Nullable<float>> FanSpeeds { get; set; } 

        /// <summary>Current GPU temperatures in Celsius for each GPU on the device.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("gpuTemperatures")]
        public virtual System.Collections.Generic.IList<System.Nullable<float>> GpuTemperatures { get; set; } 

        /// <summary>Current device skin temperatures in Celsius.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("skinTemperatures")]
        public virtual System.Collections.Generic.IList<System.Nullable<float>> SkinTemperatures { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Response to a request to list devices for a given enterprise.</summary>
    public class ListDevicesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The list of devices.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("devices")]
        public virtual System.Collections.Generic.IList<Device> Devices { get; set; } 

        /// <summary>If there are more results, a token to retrieve next page of results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The response message for Operations.ListOperations.</summary>
    public class ListOperationsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The standard List next-page token.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>A list of operations that matches the specified filter in the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("operations")]
        public virtual System.Collections.Generic.IList<Operation> Operations { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Response to a request to list policies for a given enterprise.</summary>
    public class ListPoliciesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>If there are more results, a token to retrieve next page of results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The list of policies.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("policies")]
        public virtual System.Collections.Generic.IList<Policy> Policies { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Managed property.</summary>
    public class ManagedProperty : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The default value of the properties. BUNDLE_ARRAY properties never have a default value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultValue")]
        public virtual object DefaultValue { get; set; } 

        /// <summary>A longer description of the property, giving more detail of what it affects. Localized.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>For CHOICE or MULTISELECT properties, the list of possible entries.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entries")]
        public virtual System.Collections.Generic.IList<ManagedPropertyEntry> Entries { get; set; } 

        /// <summary>The unique key that the application uses to identify the property, e.g.
        /// "com.google.android.gm.fieldname".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("key")]
        public virtual string Key { get; set; } 

        /// <summary>For BUNDLE_ARRAY properties, the list of nested properties. A BUNDLE_ARRAY property is at most two
        /// levels deep.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nestedProperties")]
        public virtual System.Collections.Generic.IList<ManagedProperty> NestedProperties { get; set; } 

        /// <summary>The name of the property. Localized.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; } 

        /// <summary>The type of the property.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>An entry of a managed property.</summary>
    public class ManagedPropertyEntry : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The human-readable name of the value. Localized.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The machine-readable value of the entry, which should be used in the configuration. Not
        /// localized.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>An event related to memory and storage measurements.</summary>
    public class MemoryEvent : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The number of free bytes in the medium, or for EXTERNAL_STORAGE_DETECTED, the total capacity in
        /// bytes of the storage medium.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("byteCount")]
        public virtual System.Nullable<long> ByteCount { get; set; } 

        /// <summary>The creation time of the event.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual object CreateTime { get; set; } 

        /// <summary>Event type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("eventType")]
        public virtual string EventType { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Information about device memory and storage.</summary>
    public class MemoryInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Total internal storage on device in bytes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalInternalStorage")]
        public virtual System.Nullable<long> TotalInternalStorage { get; set; } 

        /// <summary>Total RAM on device in bytes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalRam")]
        public virtual System.Nullable<long> TotalRam { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Device network info.</summary>
    public class NetworkInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>IMEI number of the GSM device, e.g. A1000031212.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("imei")]
        public virtual string Imei { get; set; } 

        /// <summary>MEID number of the CDMA device, e.g. A00000292788E1.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("meid")]
        public virtual string Meid { get; set; } 

        /// <summary>WiFi MAC address of the device, e.g. 7c:11:11:11:11:11.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("wifiMacAddress")]
        public virtual string WifiMacAddress { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Provides detail about non-compliance with a policy setting.</summary>
    public class NonComplianceDetail : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>If the policy setting could not be applied, the current value of the setting on the
        /// device.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("currentValue")]
        public virtual object CurrentValue { get; set; } 

        /// <summary>For settings with nested fields, if a particular nested field is out of compliance, this specifies
        /// the full path to the offending field. The path is formatted in the same way the policy JSON field would be
        /// referenced in JavaScript, that is: 1) For object-typed fields, the field name is followed by a dot then by a
        /// subfield name. 2) For array-typed fields, the field name is followed by the array index  enclosed in
        /// brackets. For example, to indicate a problem with the url field in the externalData field in the 3rd
        /// application, the path would be applications[2].externalData.url</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fieldPath")]
        public virtual string FieldPath { get; set; } 

        /// <summary>If package_name is set and the non-compliance reason is APP_NOT_INSTALLED or APP_NOT_UPDATED, the
        /// detailed reason the app cannot be installed or updated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("installationFailureReason")]
        public virtual string InstallationFailureReason { get; set; } 

        /// <summary>The reason the device is not in compliance with the setting.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nonComplianceReason")]
        public virtual string NonComplianceReason { get; set; } 

        /// <summary>The package name indicating which application is out of compliance, if applicable.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("packageName")]
        public virtual string PackageName { get; set; } 

        /// <summary>The name of the policy setting. This is the JSON field name of a top-level Policy  field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("settingName")]
        public virtual string SettingName { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A compliance rule condition which is satisfied if there exists any matching NonComplianceDetail for the
    /// device. A NonComplianceDetail matches a NonComplianceDetailCondition if all the fields which are set within the
    /// NonComplianceDetailCondition match the corresponding NonComplianceDetail fields.</summary>
    public class NonComplianceDetailCondition : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The reason the device is not in compliance with the setting. If not set, then this condition
        /// matches any reason.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nonComplianceReason")]
        public virtual string NonComplianceReason { get; set; } 

        /// <summary>The package name indicating which application is out of compliance. If not set, then this condition
        /// matches any package name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("packageName")]
        public virtual string PackageName { get; set; } 

        /// <summary>The name of the policy setting. This is the JSON field name of a top-level Policy field. If not
        /// set, then this condition matches any setting name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("settingName")]
        public virtual string SettingName { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>This resource represents a long-running operation that is the result of a network API call.</summary>
    public class Operation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>If the value is false, it means the operation is still in progress. If true, the operation is
        /// completed, and either error or response is available.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("done")]
        public virtual System.Nullable<bool> Done { get; set; } 

        /// <summary>The error result of the operation in case of failure or cancellation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Status Error { get; set; } 

        /// <summary>Service-specific metadata associated with the operation. It typically contains progress information
        /// and common metadata such as create time. Some services might not provide such metadata. Any method that
        /// returns a long-running operation should document the metadata type, if any.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual System.Collections.Generic.IDictionary<string,object> Metadata { get; set; } 

        /// <summary>The server-assigned name, which is only unique within the same service that originally returns it.
        /// If you use the default HTTP mapping, the name should have the format of
        /// operations/some/unique/name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The normal response of the operation in case of success. If the original method returns no data on
        /// success, such as Delete, the response is google.protobuf.Empty. If the original method is standard
        /// Get/Create/Update, the response should be the resource. For other methods, the response should have the type
        /// XxxResponse, where Xxx is the original method name. For example, if the original method name is
        /// TakeSnapshot(), the inferred response type is TakeSnapshotResponse.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("response")]
        public virtual System.Collections.Generic.IDictionary<string,object> Response { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Requirements for the password used to unlock a device.</summary>
    public class PasswordRequirements : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A device will be wiped after too many incorrect device-unlock passwords have been entered. A value
        /// of 0 means there is no restriction.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maximumFailedPasswordsForWipe")]
        public virtual System.Nullable<int> MaximumFailedPasswordsForWipe { get; set; } 

        /// <summary>Password expiration timeout.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("passwordExpirationTimeout")]
        public virtual object PasswordExpirationTimeout { get; set; } 

        /// <summary>The length of the password history. After setting this, the user will not be able to enter a new
        /// password that is the same as any password in the history. A value of 0 means there is no
        /// restriction.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("passwordHistoryLength")]
        public virtual System.Nullable<int> PasswordHistoryLength { get; set; } 

        /// <summary>The minimum allowed password length. A value of 0 means there is no restriction. Only enforced when
        /// password_quality is NUMERIC, NUMERIC_COMPLEX, ALPHABETIC, ALPHANUMERIC, or COMPLEX.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("passwordMinimumLength")]
        public virtual System.Nullable<int> PasswordMinimumLength { get; set; } 

        /// <summary>Minimum number of letters required in the password. Only enforced when password_quality is
        /// COMPLEX.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("passwordMinimumLetters")]
        public virtual System.Nullable<int> PasswordMinimumLetters { get; set; } 

        /// <summary>Minimum number of lower case letters required in the password. Only enforced when password_quality
        /// is COMPLEX.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("passwordMinimumLowerCase")]
        public virtual System.Nullable<int> PasswordMinimumLowerCase { get; set; } 

        /// <summary>Minimum number of non-letter characters (numerical digits or symbols) required in the password.
        /// Only enforced when password_quality is COMPLEX.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("passwordMinimumNonLetter")]
        public virtual System.Nullable<int> PasswordMinimumNonLetter { get; set; } 

        /// <summary>Minimum number of numerical digits required in the password. Only enforced when password_quality is
        /// COMPLEX.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("passwordMinimumNumeric")]
        public virtual System.Nullable<int> PasswordMinimumNumeric { get; set; } 

        /// <summary>Minimum number of symbols required in the password. Only enforced when password_quality is
        /// COMPLEX.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("passwordMinimumSymbols")]
        public virtual System.Nullable<int> PasswordMinimumSymbols { get; set; } 

        /// <summary>Minimum number of upper case letters required in the password. Only enforced when password_quality
        /// is COMPLEX.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("passwordMinimumUpperCase")]
        public virtual System.Nullable<int> PasswordMinimumUpperCase { get; set; } 

        /// <summary>The required password quality.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("passwordQuality")]
        public virtual string PasswordQuality { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Configuration for an Android permission and its grant state.</summary>
    public class PermissionGrant : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The android permission, e.g. android.permission.READ_CALENDAR.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("permission")]
        public virtual string Permission { get; set; } 

        /// <summary>The policy for granting the permission.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("policy")]
        public virtual string Policy { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A default activity for handling intents that match a particular intent filter.</summary>
    public class PersistentPreferredActivity : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The intent actions to match in the filter. If any actions are included in the filter, then an
        /// intent's action must be one of those values for it to match. If no actions are included, the intent action
        /// is ignored.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("actions")]
        public virtual System.Collections.Generic.IList<string> Actions { get; set; } 

        /// <summary>The intent categories to match in the filter. An intent includes the categories that it requires,
        /// all of which must be included in the filter in order to match. In other words, adding a category to the
        /// filter has no impact on matching unless that category is specified in the intent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("categories")]
        public virtual System.Collections.Generic.IList<string> Categories { get; set; } 

        /// <summary>The activity that should be the default intent handler. This should be an Android component name,
        /// e.g. com.android.enterprise.app/.MainActivity. Alternatively, the value may be the package name of an app,
        /// which causes Android Device Policy to choose an appropriate activity from the app to handle the
        /// intent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("receiverActivity")]
        public virtual string ReceiverActivity { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A policy, which governs behavior for a device.</summary>
    public class Policy : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Whether adding new users and profiles is disabled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("addUserDisabled")]
        public virtual System.Nullable<bool> AddUserDisabled { get; set; } 

        /// <summary>Whether adjusting the master volume is disabled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("adjustVolumeDisabled")]
        public virtual System.Nullable<bool> AdjustVolumeDisabled { get; set; } 

        /// <summary>Policy applied to apps.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("applications")]
        public virtual System.Collections.Generic.IList<ApplicationPolicy> Applications { get; set; } 

        /// <summary>Whether auto time is required, which prevents the user from manually setting the date and
        /// time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("autoTimeRequired")]
        public virtual System.Nullable<bool> AutoTimeRequired { get; set; } 

        /// <summary>Whether applications other than the ones configured in applications are blocked from being
        /// installed. When set, applications that were installed under a previous policy but no longer appear in the
        /// policy are automatically uninstalled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("blockApplicationsEnabled")]
        public virtual System.Nullable<bool> BlockApplicationsEnabled { get; set; } 

        /// <summary>Whether all cameras on the device are disabled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cameraDisabled")]
        public virtual System.Nullable<bool> CameraDisabled { get; set; } 

        /// <summary>Rules declaring which mitigating actions to take when a device is not compliant with its policy.
        /// When the conditions for multiple rules are satisfied, all of the mitigating actions for the rules are taken.
        /// There is a maximum limit of 100 rules.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("complianceRules")]
        public virtual System.Collections.Generic.IList<ComplianceRule> ComplianceRules { get; set; } 

        /// <summary>Whether the user is allowed to enable debugging features.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("debuggingFeaturesAllowed")]
        public virtual System.Nullable<bool> DebuggingFeaturesAllowed { get; set; } 

        /// <summary>The default permission policy for requests for runtime permissions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultPermissionPolicy")]
        public virtual string DefaultPermissionPolicy { get; set; } 

        /// <summary>Whether factory resetting from settings is disabled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("factoryResetDisabled")]
        public virtual System.Nullable<bool> FactoryResetDisabled { get; set; } 

        /// <summary>Email addresses of device administrators for factory reset protection. When the device is factory
        /// reset, it will require one of these admins to log in with the Google account email and password to unlock
        /// the device. If no admins are specified, the device will not provide factory reset protection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("frpAdminEmails")]
        public virtual System.Collections.Generic.IList<string> FrpAdminEmails { get; set; } 

        /// <summary>Whether the user is allowed to have fun. Controls whether the Easter egg game in Settings is
        /// disabled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("funDisabled")]
        public virtual System.Nullable<bool> FunDisabled { get; set; } 

        /// <summary>Whether the user is allowed to enable the "Unknown Sources" setting, which allows installation of
        /// apps from unknown sources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("installUnknownSourcesAllowed")]
        public virtual System.Nullable<bool> InstallUnknownSourcesAllowed { get; set; } 

        /// <summary>Whether the keyguard is disabled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("keyguardDisabled")]
        public virtual System.Nullable<bool> KeyguardDisabled { get; set; } 

        /// <summary>Maximum time in milliseconds for user activity until the device will lock. A value of 0 means there
        /// is no restriction.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maximumTimeToLock")]
        public virtual System.Nullable<long> MaximumTimeToLock { get; set; } 

        /// <summary>Whether adding or removing accounts is disabled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("modifyAccountsDisabled")]
        public virtual System.Nullable<bool> ModifyAccountsDisabled { get; set; } 

        /// <summary>The name of the policy in the form enterprises/{enterpriseId}/policies/{policyId}</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Whether the network escape hatch is enabled. If a network connection can't be made at boot time,
        /// the escape hatch prompts the user to temporarily connect to a network in order to refresh the device policy.
        /// After applying policy, the temporary network will be forgotten and the device will continue booting. This
        /// prevents being unable to connect to a network if there is no suitable network in the last policy and the
        /// device boots into an app in lock task mode, or the user is otherwise unable to reach device
        /// settings.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("networkEscapeHatchEnabled")]
        public virtual System.Nullable<bool> NetworkEscapeHatchEnabled { get; set; } 

        /// <summary>Network configuration for the device. See configure networks for more information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("openNetworkConfiguration")]
        public virtual System.Collections.Generic.IDictionary<string,object> OpenNetworkConfiguration { get; set; } 

        /// <summary>Password requirements.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("passwordRequirements")]
        public virtual PasswordRequirements PasswordRequirements { get; set; } 

        /// <summary>Default intent handler activities.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("persistentPreferredActivities")]
        public virtual System.Collections.Generic.IList<PersistentPreferredActivity> PersistentPreferredActivities { get; set; } 

        /// <summary>Whether removing other users is disabled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("removeUserDisabled")]
        public virtual System.Nullable<bool> RemoveUserDisabled { get; set; } 

        /// <summary>Whether rebooting the device into safe boot is disabled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("safeBootDisabled")]
        public virtual System.Nullable<bool> SafeBootDisabled { get; set; } 

        /// <summary>Whether screen capture is disabled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("screenCaptureDisabled")]
        public virtual System.Nullable<bool> ScreenCaptureDisabled { get; set; } 

        /// <summary>Whether the status bar is disabled. This disables notifications, quick settings and other screen
        /// overlays that allow escape from full-screen mode.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("statusBarDisabled")]
        public virtual System.Nullable<bool> StatusBarDisabled { get; set; } 

        /// <summary>Status reporting settings</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("statusReportingSettings")]
        public virtual StatusReportingSettings StatusReportingSettings { get; set; } 

        /// <summary>The battery plugged in modes for which the device stays on. When using this setting, it is
        /// recommended to clear maximum_time_to_lock so that the device doesn't lock itself while it stays
        /// on.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("stayOnPluggedModes")]
        public virtual System.Collections.Generic.IList<string> StayOnPluggedModes { get; set; } 

        /// <summary>The system update policy, which controls how OS updates are applied. If the update type is WINDOWED
        /// and the device has a device account, the update window will automatically apply to Play app updates as
        /// well.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("systemUpdate")]
        public virtual SystemUpdate SystemUpdate { get; set; } 

        /// <summary>Whether the microphone is muted and adjusting microphone volume is disabled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("unmuteMicrophoneDisabled")]
        public virtual System.Nullable<bool> UnmuteMicrophoneDisabled { get; set; } 

        /// <summary>The version of the policy. This is a read-only field. The version is incremented each time the
        /// policy is updated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("version")]
        public virtual System.Nullable<long> Version { get; set; } 

        /// <summary>Whether configuring WiFi access points is disabled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("wifiConfigDisabled")]
        public virtual System.Nullable<bool> WifiConfigDisabled { get; set; } 

        /// <summary>Whether WiFi networks defined in Open Network Configuration are locked so they cannot be edited by
        /// the user.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("wifiConfigsLockdownEnabled")]
        public virtual System.Nullable<bool> WifiConfigsLockdownEnabled { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A power management event.</summary>
    public class PowerManagementEvent : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>For BATTERY_LEVEL_COLLECTED events, the battery level as a percentage.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("batteryLevel")]
        public virtual System.Nullable<float> BatteryLevel { get; set; } 

        /// <summary>The creation time of the event.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual object CreateTime { get; set; } 

        /// <summary>Event type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("eventType")]
        public virtual string EventType { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>An enterprise signup URL.</summary>
    public class SignupUrl : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The name of the resource. This must be included in the create enterprise request at the end of the
        /// signup flow.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>A URL under which the Admin can sign up for an enterprise. The page pointed to cannot be rendered
        /// in an iframe.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("url")]
        public virtual string Url { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Information about device software.</summary>
    public class SoftwareInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Android build Id string meant for displaying to the user, e.g. shamu-userdebug 6.0.1 MOB30I 2756745
        /// dev-keys.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("androidBuildNumber")]
        public virtual string AndroidBuildNumber { get; set; } 

        /// <summary>Build time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("androidBuildTime")]
        public virtual object AndroidBuildTime { get; set; } 

        /// <summary>The user visible Android version string, e.g. 6.0.1.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("androidVersion")]
        public virtual string AndroidVersion { get; set; } 

        /// <summary>The system bootloader version number, e.g. 0.6.7.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bootloaderVersion")]
        public virtual string BootloaderVersion { get; set; } 

        /// <summary>Kernel version, e.g. 2.6.32.9-g103d848.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deviceKernelVersion")]
        public virtual string DeviceKernelVersion { get; set; } 

        /// <summary>Security patch level, e.g. 2016-05-01.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("securityPatchLevel")]
        public virtual string SecurityPatchLevel { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The Status type defines a logical error model that is suitable for different programming environments,
    /// including REST APIs and RPC APIs. It is used by gRPC (https://github.com/grpc). The error model is designed to
    /// be: Simple to use and understand for most users Flexible enough to meet unexpected needsOverviewThe Status
    /// message contains three pieces of data: error code, error message, and error details. The error code should be an
    /// enum value of google.rpc.Code, but it may accept additional error codes if needed. The error message should be a
    /// developer-facing English message that helps developers understand and resolve the error. If a localized user-
    /// facing error message is needed, put the localized message in the error details or localize it in the client. The
    /// optional error details may contain arbitrary information about the error. There is a predefined set of error
    /// detail types in the package google.rpc that can be used for common error conditions.Language mappingThe Status
    /// message is the logical representation of the error model, but it is not necessarily the actual wire format. When
    /// the Status message is exposed in different client libraries and different wire protocols, it can be mapped
    /// differently. For example, it will likely be mapped to some exceptions in Java, but more likely mapped to some
    /// error codes in C.Other usesThe error model and the Status message can be used in a variety of environments,
    /// either with or without APIs, to provide a consistent developer experience across different environments.Example
    /// uses of this error model include: Partial errors. If a service needs to return partial errors to the client, it
    /// may embed the Status in the normal response to indicate the partial errors. Workflow errors. A typical workflow
    /// has multiple steps. Each step may have a Status message for error reporting. Batch operations. If a client uses
    /// batch request and batch response, the Status message should be used directly inside batch response, one for each
    /// error sub-response. Asynchronous operations. If an API call embeds asynchronous operation results in its
    /// response, the status of those operations should be represented directly using the Status message. Logging. If
    /// some API errors are stored in logs, the message Status could be used directly after any stripping needed for
    /// security/privacy reasons.</summary>
    public class Status : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The status code, which should be an enum value of google.rpc.Code.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("code")]
        public virtual System.Nullable<int> Code { get; set; } 

        /// <summary>A list of messages that carry the error details. There is a common set of message types for APIs to
        /// use.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("details")]
        public virtual System.Collections.Generic.IList<System.Collections.Generic.IDictionary<string,object>> Details { get; set; } 

        /// <summary>A developer-facing error message, which should be in English. Any user-facing error message should
        /// be localized and sent in the google.rpc.Status.details field, or localized by the client.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("message")]
        public virtual string Message { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Settings controlling the behavior of status reports.</summary>
    public class StatusReportingSettings : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Whether displays reporting is enabled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayInfoEnabled")]
        public virtual System.Nullable<bool> DisplayInfoEnabled { get; set; } 

        /// <summary>Whether hardware status reporting is enabled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hardwareStatusEnabled")]
        public virtual System.Nullable<bool> HardwareStatusEnabled { get; set; } 

        /// <summary>Whether memory info reporting is enabled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("memoryInfoEnabled")]
        public virtual System.Nullable<bool> MemoryInfoEnabled { get; set; } 

        /// <summary>Whether network info reporting is enabled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("networkInfoEnabled")]
        public virtual System.Nullable<bool> NetworkInfoEnabled { get; set; } 

        /// <summary>Whether power management event reporting is enabled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("powerManagementEventsEnabled")]
        public virtual System.Nullable<bool> PowerManagementEventsEnabled { get; set; } 

        /// <summary>Whether software info reporting is enabled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("softwareInfoEnabled")]
        public virtual System.Nullable<bool> SoftwareInfoEnabled { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Configuration for managing system updates</summary>
    public class SystemUpdate : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>If the type is WINDOWED, the end of the maintenance window, measured as the number of minutes after
        /// midnight in device local time. This value must be between 0 and 1439, inclusive. If this value is less than
        /// start_minutes, then the maintenance window spans midnight. If the maintenance window specified is smaller
        /// than 30 minutes, the actual window is extended to 30 minutes beyond the start time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endMinutes")]
        public virtual System.Nullable<int> EndMinutes { get; set; } 

        /// <summary>If the type is WINDOWED, the start of the maintenance window, measured as the number of minutes
        /// after midnight in device local time. This value must be between 0 and 1439, inclusive.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startMinutes")]
        public virtual System.Nullable<int> StartMinutes { get; set; } 

        /// <summary>The type of system update to configure.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Provides user facing message with locale info. The maximum message length is 4096 characters.</summary>
    public class UserFacingMessage : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The default message that gets displayed if no localized message is specified, or the user's locale
        /// does not match with any of the localized messages. A default message must be provided if any localized
        /// messages are provided.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultMessage")]
        public virtual string DefaultMessage { get; set; } 

        /// <summary>A map which contains  pairs. The locale is a BCP 47 language code, e.g. en-US, es-ES, fr.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("localizedMessages")]
        public virtual System.Collections.Generic.IDictionary<string,string> LocalizedMessages { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A web token used to access an embeddable managed Google Play web UI.</summary>
    public class WebToken : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The name of the web token, which is generated by the server during creation, in the form
        /// enterprises/{enterpriseId}/webTokens/{webTokenId}.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The URL of the parent frame hosting the iframe with the embedded UI. To prevent XSS, the iframe may
        /// not be hosted at other URLs. The URL must use the https scheme.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parentFrameUrl")]
        public virtual string ParentFrameUrl { get; set; } 

        /// <summary>Permissions the admin may exercise in the embedded UI. The admin must have all of these permissions
        /// in order to view the UI.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("permissions")]
        public virtual System.Collections.Generic.IList<string> Permissions { get; set; } 

        /// <summary>The token value which is used in the hosting page to generate the iframe with the embedded UI. This
        /// is a read-only field generated by the server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }
}
