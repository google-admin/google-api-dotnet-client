// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by google-apis-code-generator 1.5.1
//     C# generator version: 1.36.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

/**
 * \brief
 *   IAM Service Account Credentials API Version v1
 *
 * \section ApiInfo API Version Information
 *    <table>
 *      <tr><th>API
 *          <td><a href='https://cloud.google.com/iam/docs/creating-short-lived-service-account-credentials'>IAM Service Account Credentials API</a>
 *      <tr><th>API Version<td>v1
 *      <tr><th>API Rev<td>20181101 (1400)
 *      <tr><th>API Docs
 *          <td><a href='https://cloud.google.com/iam/docs/creating-short-lived-service-account-credentials'>
 *              https://cloud.google.com/iam/docs/creating-short-lived-service-account-credentials</a>
 *      <tr><th>Discovery Name<td>iamcredentials
 *    </table>
 *
 * \section ForMoreInfo For More Information
 *
 * The complete API documentation for using IAM Service Account Credentials API can be found at
 * <a href='https://cloud.google.com/iam/docs/creating-short-lived-service-account-credentials'>https://cloud.google.com/iam/docs/creating-short-lived-service-account-credentials</a>.
 *
 * For more information about the Google APIs Client Library for .NET, see
 * <a href='https://developers.google.com/api-client-library/dotnet/get_started'>
 * https://developers.google.com/api-client-library/dotnet/get_started</a>
 */

namespace Google.Apis.IAMCredentials.v1
{
    /// <summary>The IAMCredentials Service.</summary>
    public class IAMCredentialsService : Google.Apis.Services.BaseClientService
    {
        /// <summary>The API version.</summary>
        public const string Version = "v1";

        /// <summary>The discovery version used to generate this service.</summary>
        public static Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed =
            Google.Apis.Discovery.DiscoveryVersion.Version_1_0;

        /// <summary>Constructs a new service.</summary>
        public IAMCredentialsService() :
            this(new Google.Apis.Services.BaseClientService.Initializer()) {}

        /// <summary>Constructs a new service.</summary>
        /// <param name="initializer">The service initializer.</param>
        public IAMCredentialsService(Google.Apis.Services.BaseClientService.Initializer initializer)
            : base(initializer)
        {
            projects = new ProjectsResource(this);
        }

        /// <summary>Gets the service supported features.</summary>
        public override System.Collections.Generic.IList<string> Features
        {
            get { return new string[0]; }
        }

        /// <summary>Gets the service name.</summary>
        public override string Name
        {
            get { return "iamcredentials"; }
        }

        /// <summary>Gets the service base URI.</summary>
        public override string BaseUri
        {
            get { return "https://iamcredentials.googleapis.com/"; }
        }

        /// <summary>Gets the service base path.</summary>
        public override string BasePath
        {
            get { return ""; }
        }

        #if !NET40
        /// <summary>Gets the batch base URI; <c>null</c> if unspecified.</summary>
        public override string BatchUri
        {
            get { return "https://iamcredentials.googleapis.com/batch"; }
        }

        /// <summary>Gets the batch base path; <c>null</c> if unspecified.</summary>
        public override string BatchPath
        {
            get { return "batch"; }
        }
        #endif

        /// <summary>Available OAuth 2.0 scopes for use with the IAM Service Account Credentials API.</summary>
        public class Scope
        {
            /// <summary>View and manage your data across Google Cloud Platform services</summary>
            public static string CloudPlatform = "https://www.googleapis.com/auth/cloud-platform";

        }



        private readonly ProjectsResource projects;

        /// <summary>Gets the Projects resource.</summary>
        public virtual ProjectsResource Projects
        {
            get { return projects; }
        }
    }

    ///<summary>A base abstract class for IAMCredentials requests.</summary>
    public abstract class IAMCredentialsBaseServiceRequest<TResponse> : Google.Apis.Requests.ClientServiceRequest<TResponse>
    {
        ///<summary>Constructs a new IAMCredentialsBaseServiceRequest instance.</summary>
        protected IAMCredentialsBaseServiceRequest(Google.Apis.Services.IClientService service)
            : base(service)
        {
        }

        /// <summary>V1 error format.</summary>
        [Google.Apis.Util.RequestParameterAttribute("$.xgafv", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<XgafvEnum> Xgafv { get; set; }

        /// <summary>V1 error format.</summary>
        public enum XgafvEnum
        {
            /// <summary>v1 error format</summary>
            [Google.Apis.Util.StringValueAttribute("1")]
            Value1,
            /// <summary>v2 error format</summary>
            [Google.Apis.Util.StringValueAttribute("2")]
            Value2,
        }

        /// <summary>OAuth access token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("access_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string AccessToken { get; set; }

        /// <summary>Data format for response.</summary>
        /// [default: json]
        [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<AltEnum> Alt { get; set; }

        /// <summary>Data format for response.</summary>
        public enum AltEnum
        {
            /// <summary>Responses with Content-Type of application/json</summary>
            [Google.Apis.Util.StringValueAttribute("json")]
            Json,
            /// <summary>Media download with context-dependent Content-Type</summary>
            [Google.Apis.Util.StringValueAttribute("media")]
            Media,
            /// <summary>Responses with Content-Type of application/x-protobuf</summary>
            [Google.Apis.Util.StringValueAttribute("proto")]
            Proto,
        }

        /// <summary>JSONP</summary>
        [Google.Apis.Util.RequestParameterAttribute("callback", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Callback { get; set; }

        /// <summary>Selector specifying which fields to include in a partial response.</summary>
        [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Fields { get; set; }

        /// <summary>API key. Your API key identifies your project and provides you with API access, quota, and reports.
        /// Required unless you provide an OAuth 2.0 token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("key", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Key { get; set; }

        /// <summary>OAuth 2.0 token for the current user.</summary>
        [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string OauthToken { get; set; }

        /// <summary>Returns response with indentations and line breaks.</summary>
        /// [default: true]
        [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<bool> PrettyPrint { get; set; }

        /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string
        /// assigned to a user, but should not exceed 40 characters.</summary>
        [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string QuotaUser { get; set; }

        /// <summary>Legacy upload protocol for media (e.g. "media", "multipart").</summary>
        [Google.Apis.Util.RequestParameterAttribute("uploadType", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UploadType { get; set; }

        /// <summary>Upload protocol for media (e.g. "raw", "multipart").</summary>
        [Google.Apis.Util.RequestParameterAttribute("upload_protocol", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UploadProtocol { get; set; }

        /// <summary>Initializes IAMCredentials parameter list.</summary>
        protected override void InitParameters()
        {
            base.InitParameters();

            RequestParameters.Add(
                "$.xgafv", new Google.Apis.Discovery.Parameter
                {
                    Name = "$.xgafv",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "access_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "access_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "alt", new Google.Apis.Discovery.Parameter
                {
                    Name = "alt",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "json",
                    Pattern = null,
                });
            RequestParameters.Add(
                "callback", new Google.Apis.Discovery.Parameter
                {
                    Name = "callback",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "fields", new Google.Apis.Discovery.Parameter
                {
                    Name = "fields",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "key", new Google.Apis.Discovery.Parameter
                {
                    Name = "key",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "oauth_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "oauth_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "prettyPrint", new Google.Apis.Discovery.Parameter
                {
                    Name = "prettyPrint",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "true",
                    Pattern = null,
                });
            RequestParameters.Add(
                "quotaUser", new Google.Apis.Discovery.Parameter
                {
                    Name = "quotaUser",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "uploadType", new Google.Apis.Discovery.Parameter
                {
                    Name = "uploadType",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "upload_protocol", new Google.Apis.Discovery.Parameter
                {
                    Name = "upload_protocol",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
        }
    }

    /// <summary>The "projects" collection of methods.</summary>
    public class ProjectsResource
    {
        private const string Resource = "projects";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public ProjectsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
            serviceAccounts = new ServiceAccountsResource(service);

        }

        private readonly ServiceAccountsResource serviceAccounts;

        /// <summary>Gets the ServiceAccounts resource.</summary>
        public virtual ServiceAccountsResource ServiceAccounts
        {
            get { return serviceAccounts; }
        }

        /// <summary>The "serviceAccounts" collection of methods.</summary>
        public class ServiceAccountsResource
        {
            private const string Resource = "serviceAccounts";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public ServiceAccountsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Generates an OAuth 2.0 access token for a service account.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="name">The resource name of the service account for which the credentials are requested, in the
            /// following format: `projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`.</param>
            public virtual GenerateAccessTokenRequest GenerateAccessToken(Google.Apis.IAMCredentials.v1.Data.GenerateAccessTokenRequest body, string name)
            {
                return new GenerateAccessTokenRequest(service, body, name);
            }

            /// <summary>Generates an OAuth 2.0 access token for a service account.</summary>
            public class GenerateAccessTokenRequest : IAMCredentialsBaseServiceRequest<Google.Apis.IAMCredentials.v1.Data.GenerateAccessTokenResponse>
            {
                /// <summary>Constructs a new GenerateAccessToken request.</summary>
                public GenerateAccessTokenRequest(Google.Apis.Services.IClientService service, Google.Apis.IAMCredentials.v1.Data.GenerateAccessTokenRequest body, string name)
                    : base(service)
                {
                    Name = name;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The resource name of the service account for which the credentials are requested, in the
                /// following format: `projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.IAMCredentials.v1.Data.GenerateAccessTokenRequest Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "generateAccessToken"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/{+name}:generateAccessToken"; }
                }

                /// <summary>Initializes GenerateAccessToken parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/serviceAccounts/[^/]+$",
                        });
                }

            }

            /// <summary>Generates an OpenID Connect ID token for a service account.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="name">The resource name of the service account for which the credentials are requested, in the
            /// following format: `projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`.</param>
            public virtual GenerateIdTokenRequest GenerateIdToken(Google.Apis.IAMCredentials.v1.Data.GenerateIdTokenRequest body, string name)
            {
                return new GenerateIdTokenRequest(service, body, name);
            }

            /// <summary>Generates an OpenID Connect ID token for a service account.</summary>
            public class GenerateIdTokenRequest : IAMCredentialsBaseServiceRequest<Google.Apis.IAMCredentials.v1.Data.GenerateIdTokenResponse>
            {
                /// <summary>Constructs a new GenerateIdToken request.</summary>
                public GenerateIdTokenRequest(Google.Apis.Services.IClientService service, Google.Apis.IAMCredentials.v1.Data.GenerateIdTokenRequest body, string name)
                    : base(service)
                {
                    Name = name;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The resource name of the service account for which the credentials are requested, in the
                /// following format: `projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.IAMCredentials.v1.Data.GenerateIdTokenRequest Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "generateIdToken"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/{+name}:generateIdToken"; }
                }

                /// <summary>Initializes GenerateIdToken parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/serviceAccounts/[^/]+$",
                        });
                }

            }


            /// <param name="body">The body of the request.</param>
            /// <param name="name">The resource name of the service account for which the credentials are requested, in the
            /// following format: `projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`.</param>
            public virtual GenerateIdentityBindingAccessTokenRequest GenerateIdentityBindingAccessToken(Google.Apis.IAMCredentials.v1.Data.GenerateIdentityBindingAccessTokenRequest body, string name)
            {
                return new GenerateIdentityBindingAccessTokenRequest(service, body, name);
            }


            public class GenerateIdentityBindingAccessTokenRequest : IAMCredentialsBaseServiceRequest<Google.Apis.IAMCredentials.v1.Data.GenerateIdentityBindingAccessTokenResponse>
            {
                /// <summary>Constructs a new GenerateIdentityBindingAccessToken request.</summary>
                public GenerateIdentityBindingAccessTokenRequest(Google.Apis.Services.IClientService service, Google.Apis.IAMCredentials.v1.Data.GenerateIdentityBindingAccessTokenRequest body, string name)
                    : base(service)
                {
                    Name = name;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The resource name of the service account for which the credentials are requested, in the
                /// following format: `projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.IAMCredentials.v1.Data.GenerateIdentityBindingAccessTokenRequest Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "generateIdentityBindingAccessToken"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/{+name}:generateIdentityBindingAccessToken"; }
                }

                /// <summary>Initializes GenerateIdentityBindingAccessToken parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/serviceAccounts/[^/]+$",
                        });
                }

            }

            /// <summary>Signs a blob using a service account's system-managed private key.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="name">The resource name of the service account for which the credentials are requested, in the
            /// following format: `projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`.</param>
            public virtual SignBlobRequest SignBlob(Google.Apis.IAMCredentials.v1.Data.SignBlobRequest body, string name)
            {
                return new SignBlobRequest(service, body, name);
            }

            /// <summary>Signs a blob using a service account's system-managed private key.</summary>
            public class SignBlobRequest : IAMCredentialsBaseServiceRequest<Google.Apis.IAMCredentials.v1.Data.SignBlobResponse>
            {
                /// <summary>Constructs a new SignBlob request.</summary>
                public SignBlobRequest(Google.Apis.Services.IClientService service, Google.Apis.IAMCredentials.v1.Data.SignBlobRequest body, string name)
                    : base(service)
                {
                    Name = name;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The resource name of the service account for which the credentials are requested, in the
                /// following format: `projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.IAMCredentials.v1.Data.SignBlobRequest Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "signBlob"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/{+name}:signBlob"; }
                }

                /// <summary>Initializes SignBlob parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/serviceAccounts/[^/]+$",
                        });
                }

            }

            /// <summary>Signs a JWT using a service account's system-managed private key.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="name">The resource name of the service account for which the credentials are requested, in the
            /// following format: `projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`.</param>
            public virtual SignJwtRequest SignJwt(Google.Apis.IAMCredentials.v1.Data.SignJwtRequest body, string name)
            {
                return new SignJwtRequest(service, body, name);
            }

            /// <summary>Signs a JWT using a service account's system-managed private key.</summary>
            public class SignJwtRequest : IAMCredentialsBaseServiceRequest<Google.Apis.IAMCredentials.v1.Data.SignJwtResponse>
            {
                /// <summary>Constructs a new SignJwt request.</summary>
                public SignJwtRequest(Google.Apis.Services.IClientService service, Google.Apis.IAMCredentials.v1.Data.SignJwtRequest body, string name)
                    : base(service)
                {
                    Name = name;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The resource name of the service account for which the credentials are requested, in the
                /// following format: `projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.IAMCredentials.v1.Data.SignJwtRequest Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "signJwt"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/{+name}:signJwt"; }
                }

                /// <summary>Initializes SignJwt parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/serviceAccounts/[^/]+$",
                        });
                }

            }
        }
    }
}

namespace Google.Apis.IAMCredentials.v1.Data
{    

    public class GenerateAccessTokenRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The sequence of service accounts in a delegation chain. Each service account must be granted the
        /// `roles/iam.serviceAccountTokenCreator` role on its next service account in the chain. The last service
        /// account in the chain must be granted the `roles/iam.serviceAccountTokenCreator` role on the service account
        /// that is specified in the `name` field of the request.
        ///
        /// The delegates must have the following format:
        /// `projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("delegates")]
        public virtual System.Collections.Generic.IList<string> Delegates { get; set; } 

        /// <summary>The desired lifetime duration of the access token in seconds. Must be set to a value less than or
        /// equal to 3600 (1 hour). If a value is not specified, the token's lifetime will be set to a default value of
        /// one hour.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lifetime")]
        public virtual object Lifetime { get; set; } 

        /// <summary>Code to identify the scopes to be included in the OAuth 2.0 access token. See
        /// https://developers.google.com/identity/protocols/googlescopes for more information. At least one value
        /// required.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("scope")]
        public virtual System.Collections.Generic.IList<string> Scope { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class GenerateAccessTokenResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The OAuth 2.0 access token.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accessToken")]
        public virtual string AccessToken { get; set; } 

        /// <summary>Token expiration time. The expiration time is always set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("expireTime")]
        public virtual object ExpireTime { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class GenerateIdTokenRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The audience for the token, such as the API or account that this token grants access to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("audience")]
        public virtual string Audience { get; set; } 

        /// <summary>The sequence of service accounts in a delegation chain. Each service account must be granted the
        /// `roles/iam.serviceAccountTokenCreator` role on its next service account in the chain. The last service
        /// account in the chain must be granted the `roles/iam.serviceAccountTokenCreator` role on the service account
        /// that is specified in the `name` field of the request.
        ///
        /// The delegates must have the following format:
        /// `projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("delegates")]
        public virtual System.Collections.Generic.IList<string> Delegates { get; set; } 

        /// <summary>Include the service account email in the token. If set to `true`, the token will contain `email`
        /// and `email_verified` claims.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("includeEmail")]
        public virtual System.Nullable<bool> IncludeEmail { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class GenerateIdTokenResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The OpenId Connect ID token.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("token")]
        public virtual string Token { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class GenerateIdentityBindingAccessTokenRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Input token. Must be in JWT format according to RFC7523
        /// (https://tools.ietf.org/html/rfc7523) and must have 'kid' field in the header. Supported signing algorithms:
        /// RS256 (RS512, ES256, ES512 coming soon). Mandatory payload fields (along the lines of RFC 7523, section 3):
        /// - iss: issuer of the token. Must provide a discovery document at $iss/.well-known/openid-configuration . The
        /// document needs to be formatted according to section 4.2 of the OpenID Connect Discovery 1.0 specification. -
        /// iat: Issue time in seconds since epoch. Must be in the past. - exp: Expiration time in seconds since epoch.
        /// Must be less than 48 hours after iat. We recommend to create tokens that last shorter than 6 hours to
        /// improve security unless business reasons mandate longer expiration times. Shorter token lifetimes are
        /// generally more secure since tokens that have been exfiltrated by attackers can be used for a shorter time.
        /// you can configure the maximum lifetime of the incoming token in the configuration of the mapper. The
        /// resulting Google token will expire within an hour or at "exp", whichever is earlier. - sub: JWT subject,
        /// identity asserted in the JWT. - aud: Configured in the mapper policy. By default the service account email.
        ///
        /// Claims from the incoming token can be transferred into the output token accoding to the mapper
        /// configuration. The outgoing claim size is limited. Outgoing claims size must be less than 4kB serialized as
        /// JSON without whitespace.
        ///
        /// Example header: { "alg": "RS256", "kid": "92a4265e14ab04d4d228a48d10d4ca31610936f8" } Example payload: {
        /// "iss": "https://accounts.google.com", "iat": 1517963104, "exp": 1517966704, "aud":
        /// "https://iamcredentials.googleapis.com/google.iam.credentials.v1.CloudGaia", "sub": "113475438248934895348",
        /// "my_claims": { "additional_claim": "value" } }</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("jwt")]
        public virtual string Jwt { get; set; } 

        /// <summary>Code to identify the scopes to be included in the OAuth 2.0 access token. See
        /// https://developers.google.com/identity/protocols/googlescopes for more information. At least one value
        /// required.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("scope")]
        public virtual System.Collections.Generic.IList<string> Scope { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class GenerateIdentityBindingAccessTokenResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The OAuth 2.0 access token.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accessToken")]
        public virtual string AccessToken { get; set; } 

        /// <summary>Token expiration time. The expiration time is always set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("expireTime")]
        public virtual object ExpireTime { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class SignBlobRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The sequence of service accounts in a delegation chain. Each service account must be granted the
        /// `roles/iam.serviceAccountTokenCreator` role on its next service account in the chain. The last service
        /// account in the chain must be granted the `roles/iam.serviceAccountTokenCreator` role on the service account
        /// that is specified in the `name` field of the request.
        ///
        /// The delegates must have the following format:
        /// `projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("delegates")]
        public virtual System.Collections.Generic.IList<string> Delegates { get; set; } 

        /// <summary>The bytes to sign.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("payload")]
        public virtual string Payload { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class SignBlobResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ID of the key used to sign the blob.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("keyId")]
        public virtual string KeyId { get; set; } 

        /// <summary>The signed blob.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("signedBlob")]
        public virtual string SignedBlob { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class SignJwtRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The sequence of service accounts in a delegation chain. Each service account must be granted the
        /// `roles/iam.serviceAccountTokenCreator` role on its next service account in the chain. The last service
        /// account in the chain must be granted the `roles/iam.serviceAccountTokenCreator` role on the service account
        /// that is specified in the `name` field of the request.
        ///
        /// The delegates must have the following format:
        /// `projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("delegates")]
        public virtual System.Collections.Generic.IList<string> Delegates { get; set; } 

        /// <summary>The JWT payload to sign: a JSON object that contains a JWT Claims Set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("payload")]
        public virtual string Payload { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class SignJwtResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ID of the key used to sign the JWT.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("keyId")]
        public virtual string KeyId { get; set; } 

        /// <summary>The signed JWT.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("signedJwt")]
        public virtual string SignedJwt { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }
}
