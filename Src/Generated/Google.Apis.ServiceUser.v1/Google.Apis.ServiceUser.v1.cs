// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by google-apis-code-generator 1.5.1
//     C# generator version: 1.22.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

/**
 * \brief
 *   Google Service User API Version v1
 *
 * \section ApiInfo API Version Information
 *    <table>
 *      <tr><th>API
 *          <td><a href='https://cloud.google.com/service-management/'>Google Service User API</a>
 *      <tr><th>API Version<td>v1
 *      <tr><th>API Rev<td>20170317 (806)
 *      <tr><th>API Docs
 *          <td><a href='https://cloud.google.com/service-management/'>
 *              https://cloud.google.com/service-management/</a>
 *      <tr><th>Discovery Name<td>serviceuser
 *    </table>
 *
 * \section ForMoreInfo For More Information
 *
 * The complete API documentation for using Google Service User API can be found at
 * <a href='https://cloud.google.com/service-management/'>https://cloud.google.com/service-management/</a>.
 *
 * For more information about the Google APIs Client Library for .NET, see
 * <a href='https://developers.google.com/api-client-library/dotnet/get_started'>
 * https://developers.google.com/api-client-library/dotnet/get_started</a>
 */

namespace Google.Apis.ServiceUser.v1
{
    /// <summary>The ServiceUser Service.</summary>
    public class ServiceUserService : Google.Apis.Services.BaseClientService
    {
        /// <summary>The API version.</summary>
        public const string Version = "v1";

        /// <summary>The discovery version used to generate this service.</summary>
        public static Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed =
            Google.Apis.Discovery.DiscoveryVersion.Version_1_0;

        /// <summary>Constructs a new service.</summary>
        public ServiceUserService() :
            this(new Google.Apis.Services.BaseClientService.Initializer()) {}

        /// <summary>Constructs a new service.</summary>
        /// <param name="initializer">The service initializer.</param>
        public ServiceUserService(Google.Apis.Services.BaseClientService.Initializer initializer)
            : base(initializer)
        {
            projects = new ProjectsResource(this);
            services = new ServicesResource(this);
        }

        /// <summary>Gets the service supported features.</summary>
        public override System.Collections.Generic.IList<string> Features
        {
            get { return new string[0]; }
        }

        /// <summary>Gets the service name.</summary>
        public override string Name
        {
            get { return "serviceuser"; }
        }

        /// <summary>Gets the service base URI.</summary>
        public override string BaseUri
        {
            get { return "https://serviceuser.googleapis.com/"; }
        }

        /// <summary>Gets the service base path.</summary>
        public override string BasePath
        {
            get { return ""; }
        }

        /// <summary>Available OAuth 2.0 scopes for use with the Google Service User API.</summary>
        public class Scope
        {
            /// <summary>View and manage your data across Google Cloud Platform services</summary>
            public static string CloudPlatform = "https://www.googleapis.com/auth/cloud-platform";

            /// <summary>View your data across Google Cloud Platform services</summary>
            public static string CloudPlatformReadOnly = "https://www.googleapis.com/auth/cloud-platform.read-only";

            /// <summary>Manage your Google API service configuration</summary>
            public static string ServiceManagement = "https://www.googleapis.com/auth/service.management";

        }



        private readonly ProjectsResource projects;

        /// <summary>Gets the Projects resource.</summary>
        public virtual ProjectsResource Projects
        {
            get { return projects; }
        }

        private readonly ServicesResource services;

        /// <summary>Gets the Services resource.</summary>
        public virtual ServicesResource Services
        {
            get { return services; }
        }
    }

    ///<summary>A base abstract class for ServiceUser requests.</summary>
    public abstract class ServiceUserBaseServiceRequest<TResponse> : Google.Apis.Requests.ClientServiceRequest<TResponse>
    {
        ///<summary>Constructs a new ServiceUserBaseServiceRequest instance.</summary>
        protected ServiceUserBaseServiceRequest(Google.Apis.Services.IClientService service)
            : base(service)
        {
        }

        /// <summary>V1 error format.</summary>
        [Google.Apis.Util.RequestParameterAttribute("$.xgafv", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<XgafvEnum> Xgafv { get; set; }

        /// <summary>V1 error format.</summary>
        public enum XgafvEnum
        {
            /// <summary>v1 error format</summary>
            [Google.Apis.Util.StringValueAttribute("1")]
            Value1,
            /// <summary>v2 error format</summary>
            [Google.Apis.Util.StringValueAttribute("2")]
            Value2,
        }

        /// <summary>OAuth access token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("access_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string AccessToken { get; set; }

        /// <summary>Data format for response.</summary>
        /// [default: json]
        [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<AltEnum> Alt { get; set; }

        /// <summary>Data format for response.</summary>
        public enum AltEnum
        {
            /// <summary>Responses with Content-Type of application/json</summary>
            [Google.Apis.Util.StringValueAttribute("json")]
            Json,
            /// <summary>Media download with context-dependent Content-Type</summary>
            [Google.Apis.Util.StringValueAttribute("media")]
            Media,
            /// <summary>Responses with Content-Type of application/x-protobuf</summary>
            [Google.Apis.Util.StringValueAttribute("proto")]
            Proto,
        }

        /// <summary>OAuth bearer token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("bearer_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string BearerToken { get; set; }

        /// <summary>JSONP</summary>
        [Google.Apis.Util.RequestParameterAttribute("callback", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Callback { get; set; }

        /// <summary>Selector specifying which fields to include in a partial response.</summary>
        [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Fields { get; set; }

        /// <summary>API key. Your API key identifies your project and provides you with API access, quota, and reports.
        /// Required unless you provide an OAuth 2.0 token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("key", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Key { get; set; }

        /// <summary>OAuth 2.0 token for the current user.</summary>
        [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string OauthToken { get; set; }

        /// <summary>Pretty-print response.</summary>
        /// [default: true]
        [Google.Apis.Util.RequestParameterAttribute("pp", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<bool> Pp { get; set; }

        /// <summary>Returns response with indentations and line breaks.</summary>
        /// [default: true]
        [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<bool> PrettyPrint { get; set; }

        /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string
        /// assigned to a user, but should not exceed 40 characters.</summary>
        [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string QuotaUser { get; set; }

        /// <summary>Legacy upload protocol for media (e.g. "media", "multipart").</summary>
        [Google.Apis.Util.RequestParameterAttribute("uploadType", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UploadType { get; set; }

        /// <summary>Upload protocol for media (e.g. "raw", "multipart").</summary>
        [Google.Apis.Util.RequestParameterAttribute("upload_protocol", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UploadProtocol { get; set; }

        /// <summary>Initializes ServiceUser parameter list.</summary>
        protected override void InitParameters()
        {
            base.InitParameters();

            RequestParameters.Add(
                "$.xgafv", new Google.Apis.Discovery.Parameter
                {
                    Name = "$.xgafv",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "access_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "access_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "alt", new Google.Apis.Discovery.Parameter
                {
                    Name = "alt",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "json",
                    Pattern = null,
                });
            RequestParameters.Add(
                "bearer_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "bearer_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "callback", new Google.Apis.Discovery.Parameter
                {
                    Name = "callback",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "fields", new Google.Apis.Discovery.Parameter
                {
                    Name = "fields",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "key", new Google.Apis.Discovery.Parameter
                {
                    Name = "key",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "oauth_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "oauth_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "pp", new Google.Apis.Discovery.Parameter
                {
                    Name = "pp",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "true",
                    Pattern = null,
                });
            RequestParameters.Add(
                "prettyPrint", new Google.Apis.Discovery.Parameter
                {
                    Name = "prettyPrint",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "true",
                    Pattern = null,
                });
            RequestParameters.Add(
                "quotaUser", new Google.Apis.Discovery.Parameter
                {
                    Name = "quotaUser",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "uploadType", new Google.Apis.Discovery.Parameter
                {
                    Name = "uploadType",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "upload_protocol", new Google.Apis.Discovery.Parameter
                {
                    Name = "upload_protocol",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
        }
    }

    /// <summary>The "projects" collection of methods.</summary>
    public class ProjectsResource
    {
        private const string Resource = "projects";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public ProjectsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
            services = new ServicesResource(service);

        }

        private readonly ServicesResource services;

        /// <summary>Gets the Services resource.</summary>
        public virtual ServicesResource Services
        {
            get { return services; }
        }

        /// <summary>The "services" collection of methods.</summary>
        public class ServicesResource
        {
            private const string Resource = "services";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public ServicesResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Disable a service so it can no longer be used with a project. This prevents unintended usage
            /// that may cause unexpected billing charges or security leaks.
            ///
            /// Operation</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="name">Name of the consumer and the service to disable for that consumer.
            ///
            /// The Service User implementation accepts the following forms for consumer: - "project:"
            ///
            /// A valid path would be: - /v1/projects/my-project/services/servicemanagement.googleapis.com:disable</param>
            public virtual DisableRequest Disable(Google.Apis.ServiceUser.v1.Data.DisableServiceRequest body, string name)
            {
                return new DisableRequest(service, body, name);
            }

            /// <summary>Disable a service so it can no longer be used with a project. This prevents unintended usage
            /// that may cause unexpected billing charges or security leaks.
            ///
            /// Operation</summary>
            public class DisableRequest : ServiceUserBaseServiceRequest<Google.Apis.ServiceUser.v1.Data.Operation>
            {
                /// <summary>Constructs a new Disable request.</summary>
                public DisableRequest(Google.Apis.Services.IClientService service, Google.Apis.ServiceUser.v1.Data.DisableServiceRequest body, string name)
                    : base(service)
                {
                    Name = name;
                    Body = body;
                    InitParameters();
                }


                /// <summary>Name of the consumer and the service to disable for that consumer.
                ///
                /// The Service User implementation accepts the following forms for consumer: - "project:"
                ///
                /// A valid path would be: - /v1/projects/my-
                /// project/services/servicemanagement.googleapis.com:disable</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.ServiceUser.v1.Data.DisableServiceRequest Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "disable"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/{+name}:disable"; }
                }

                /// <summary>Initializes Disable parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/services/[^/]+$",
                        });
                }

            }

            /// <summary>Enable a service so it can be used with a project. See [Cloud Auth
            /// Guide](https://cloud.google.com/docs/authentication) for more information.
            ///
            /// Operation</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="name">Name of the consumer and the service to enable for that consumer.
            ///
            /// A valid path would be: - /v1/projects/my-project/services/servicemanagement.googleapis.com:enable</param>
            public virtual EnableRequest Enable(Google.Apis.ServiceUser.v1.Data.EnableServiceRequest body, string name)
            {
                return new EnableRequest(service, body, name);
            }

            /// <summary>Enable a service so it can be used with a project. See [Cloud Auth
            /// Guide](https://cloud.google.com/docs/authentication) for more information.
            ///
            /// Operation</summary>
            public class EnableRequest : ServiceUserBaseServiceRequest<Google.Apis.ServiceUser.v1.Data.Operation>
            {
                /// <summary>Constructs a new Enable request.</summary>
                public EnableRequest(Google.Apis.Services.IClientService service, Google.Apis.ServiceUser.v1.Data.EnableServiceRequest body, string name)
                    : base(service)
                {
                    Name = name;
                    Body = body;
                    InitParameters();
                }


                /// <summary>Name of the consumer and the service to enable for that consumer.
                ///
                /// A valid path would be: - /v1/projects/my-
                /// project/services/servicemanagement.googleapis.com:enable</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.ServiceUser.v1.Data.EnableServiceRequest Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "enable"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/{+name}:enable"; }
                }

                /// <summary>Initializes Enable parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/services/[^/]+$",
                        });
                }

            }

            /// <summary>List enabled services for the specified consumer.</summary>
            /// <param name="parent">List enabled services for the specified parent.
            ///
            /// An example valid parent would be: - projects/my-project</param>
            public virtual ListRequest List(string parent)
            {
                return new ListRequest(service, parent);
            }

            /// <summary>List enabled services for the specified consumer.</summary>
            public class ListRequest : ServiceUserBaseServiceRequest<Google.Apis.ServiceUser.v1.Data.ListEnabledServicesResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, string parent)
                    : base(service)
                {
                    Parent = parent;
                    InitParameters();
                }


                /// <summary>List enabled services for the specified parent.
                ///
                /// An example valid parent would be: - projects/my-project</summary>
                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Parent { get; private set; }

                /// <summary>Token identifying which result to start with; returned by a previous list call.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string PageToken { get; set; }

                /// <summary>Requested size of the next page of data.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<int> PageSize { get; set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/{+parent}/services"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+$",
                        });
                    RequestParameters.Add(
                        "pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }
        }
    }

    /// <summary>The "services" collection of methods.</summary>
    public class ServicesResource
    {
        private const string Resource = "services";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public ServicesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Search available services.
        ///
        /// When no filter is specified, returns all accessible services. For authenticated users, also returns all
        /// services the calling user has "servicemanagement.services.bind" permission for.</summary>
        public virtual SearchRequest Search()
        {
            return new SearchRequest(service);
        }

        /// <summary>Search available services.
        ///
        /// When no filter is specified, returns all accessible services. For authenticated users, also returns all
        /// services the calling user has "servicemanagement.services.bind" permission for.</summary>
        public class SearchRequest : ServiceUserBaseServiceRequest<Google.Apis.ServiceUser.v1.Data.SearchServicesResponse>
        {
            /// <summary>Constructs a new Search request.</summary>
            public SearchRequest(Google.Apis.Services.IClientService service)
                : base(service)
            {
                InitParameters();
            }


            /// <summary>Token identifying which result to start with; returned by a previous list call.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>Requested size of the next page of data.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> PageSize { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "search"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1/services:search"; }
            }

            /// <summary>Initializes Search parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageSize", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageSize",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }
}

namespace Google.Apis.ServiceUser.v1.Data
{    

    /// <summary>Api is a light-weight descriptor for a protocol buffer service.</summary>
    public class Api : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The methods of this api, in unspecified order.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("methods")]
        public virtual System.Collections.Generic.IList<Method> Methods { get; set; } 

        /// <summary>Included APIs. See Mixin.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mixins")]
        public virtual System.Collections.Generic.IList<Mixin> Mixins { get; set; } 

        /// <summary>The fully qualified name of this api, including package name followed by the api's simple
        /// name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Any metadata attached to the API.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("options")]
        public virtual System.Collections.Generic.IList<Option> Options { get; set; } 

        /// <summary>Source context for the protocol buffer service represented by this message.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sourceContext")]
        public virtual SourceContext SourceContext { get; set; } 

        /// <summary>The source syntax of the service.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("syntax")]
        public virtual string Syntax { get; set; } 

        /// <summary>A version string for this api. If specified, must have the form `major-version.minor-version`, as
        /// in `1.10`. If the minor version is omitted, it defaults to zero. If the entire version field is empty, the
        /// major version is derived from the package name, as outlined below. If the field is not empty, the version in
        /// the package name will be verified to be consistent with what is provided here.
        ///
        /// The versioning schema uses [semantic versioning](http://semver.org) where the major version number indicates
        /// a breaking change and the minor version an additive, non-breaking change. Both version numbers are signals
        /// to users what to expect from different versions, and should be carefully chosen based on the product plan.
        ///
        /// The major version is also reflected in the package name of the API, which must end in `v`, as in
        /// `google.feature.v1`. For major versions 0 and 1, the suffix can be omitted. Zero major versions must only be
        /// used for experimental, none-GA apis. </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("version")]
        public virtual string Version { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Configuration for an anthentication provider, including support for [JSON Web Token
    /// (JWT)](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32).</summary>
    public class AuthProvider : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The list of JWT [audiences](https://tools.ietf.org/html/draft-ietf-oauth-json-web-
        /// token-32#section-4.1.3). that are allowed to access. A JWT containing any of these audiences will be
        /// accepted. When this setting is absent, only JWTs with audience "https://Service_name/API_name" will be
        /// accepted. For example, if no audiences are in the setting, LibraryService API will only accept JWTs with the
        /// following audience "https://library-example.googleapis.com/google.example.library.v1.LibraryService".
        ///
        /// Example:
        ///
        /// audiences: bookstore_android.apps.googleusercontent.com, bookstore_web.apps.googleusercontent.com</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("audiences")]
        public virtual string Audiences { get; set; } 

        /// <summary>The unique identifier of the auth provider. It will be referred to by
        /// `AuthRequirement.provider_id`.
        ///
        /// Example: "bookstore_auth".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>Identifies the principal that issued the JWT. See https://tools.ietf.org/html/draft-ietf-oauth-
        /// json-web-token-32#section-4.1.1 Usually a URL or an email address.
        ///
        /// Example: https://securetoken.google.com Example: 1234567-compute@developer.gserviceaccount.com</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("issuer")]
        public virtual string Issuer { get; set; } 

        /// <summary>URL of the provider's public key set to validate signature of the JWT. See [OpenID
        /// Discovery](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata). Optional if the key
        /// set document: - can be retrieved from [OpenID Discovery](https://openid.net/specs/openid-connect-discovery-
        /// 1_0.html of the issuer. - can be inferred from the email domain of the issuer (e.g. a Google service
        /// account).
        ///
        /// Example: https://www.googleapis.com/oauth2/v1/certs</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("jwksUri")]
        public virtual string JwksUri { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>User-defined authentication requirements, including support for [JSON Web Token
    /// (JWT)](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32).</summary>
    public class AuthRequirement : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>NOTE: This will be deprecated soon, once AuthProvider.audiences is implemented and accepted in all
        /// the runtime components.
        ///
        /// The list of JWT [audiences](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32#section-4.1.3).
        /// that are allowed to access. A JWT containing any of these audiences will be accepted. When this setting is
        /// absent, only JWTs with audience "https://Service_name/API_name" will be accepted. For example, if no
        /// audiences are in the setting, LibraryService API will only accept JWTs with the following audience "https
        /// ://library-example.googleapis.com/google.example.library.v1.LibraryService".
        ///
        /// Example:
        ///
        /// audiences: bookstore_android.apps.googleusercontent.com, bookstore_web.apps.googleusercontent.com</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("audiences")]
        public virtual string Audiences { get; set; } 

        /// <summary>id from authentication provider.
        ///
        /// Example:
        ///
        /// provider_id: bookstore_auth</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("providerId")]
        public virtual string ProviderId { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>`Authentication` defines the authentication configuration for an API.
    ///
    /// Example for an API targeted for external use:
    ///
    /// name: calendar.googleapis.com authentication: providers: - id: google_calendar_auth jwks_uri:
    /// https://www.googleapis.com/oauth2/v1/certs issuer: https://securetoken.google.com rules: - selector: "*"
    /// requirements: provider_id: google_calendar_auth</summary>
    public class Authentication : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Defines a set of authentication providers that a service supports.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("providers")]
        public virtual System.Collections.Generic.IList<AuthProvider> Providers { get; set; } 

        /// <summary>A list of authentication rules that apply to individual API methods.
        ///
        /// **NOTE:** All service configuration rules follow "last one wins" order.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rules")]
        public virtual System.Collections.Generic.IList<AuthenticationRule> Rules { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Authentication rules for the service.
    ///
    /// By default, if a method has any authentication requirements, every request must include a valid credential
    /// matching one of the requirements. It's an error to include more than one kind of credential in a single request.
    ///
    /// If a method doesn't have any auth requirements, request credentials will be ignored.</summary>
    public class AuthenticationRule : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Whether to allow requests without a credential. The credential can be an OAuth token, Google
        /// cookies (first-party auth) or EndUserCreds.
        ///
        /// For requests without credentials, if the service control environment is specified, each incoming request
        /// **must** be associated with a service consumer. This can be done by passing an API key that belongs to a
        /// consumer project.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("allowWithoutCredential")]
        public virtual System.Nullable<bool> AllowWithoutCredential { get; set; } 

        /// <summary>The requirements for OAuth credentials.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("oauth")]
        public virtual OAuthRequirements Oauth { get; set; } 

        /// <summary>Requirements for additional authentication providers.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("requirements")]
        public virtual System.Collections.Generic.IList<AuthRequirement> Requirements { get; set; } 

        /// <summary>Selects the methods to which this rule applies.
        ///
        /// Refer to selector for syntax details.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selector")]
        public virtual string Selector { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Configuration of authorization.
    ///
    /// This section determines the authorization provider, if unspecified, then no authorization check will be done.
    ///
    /// Example:
    ///
    /// experimental: authorization: provider: firebaserules.googleapis.com</summary>
    public class AuthorizationConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The name of the authorization provider, such as firebaserules.googleapis.com.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("provider")]
        public virtual string Provider { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>`Backend` defines the backend configuration for a service.</summary>
    public class Backend : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A list of API backend rules that apply to individual API methods.
        ///
        /// **NOTE:** All service configuration rules follow "last one wins" order.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rules")]
        public virtual System.Collections.Generic.IList<BackendRule> Rules { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A backend rule provides configuration for an individual API element.</summary>
    public class BackendRule : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The address of the API backend.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("address")]
        public virtual string Address { get; set; } 

        /// <summary>The number of seconds to wait for a response from a request.  The default depends on the deployment
        /// context.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deadline")]
        public virtual System.Nullable<double> Deadline { get; set; } 

        /// <summary>Selects the methods to which this rule applies.
        ///
        /// Refer to selector for syntax details.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selector")]
        public virtual string Selector { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>`Context` defines which contexts an API requests.
    ///
    /// Example:
    ///
    /// context: rules: - selector: "*" requested: - google.rpc.context.ProjectContext -
    /// google.rpc.context.OriginContext
    ///
    /// The above specifies that all methods in the API request `google.rpc.context.ProjectContext` and
    /// `google.rpc.context.OriginContext`.
    ///
    /// Available context types are defined in package `google.rpc.context`.</summary>
    public class Context : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A list of RPC context rules that apply to individual API methods.
        ///
        /// **NOTE:** All service configuration rules follow "last one wins" order.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rules")]
        public virtual System.Collections.Generic.IList<ContextRule> Rules { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A context rule provides information about the context for an individual API element.</summary>
    public class ContextRule : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A list of full type names of provided contexts.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("provided")]
        public virtual System.Collections.Generic.IList<string> Provided { get; set; } 

        /// <summary>A list of full type names of requested contexts.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("requested")]
        public virtual System.Collections.Generic.IList<string> Requested { get; set; } 

        /// <summary>Selects the methods to which this rule applies.
        ///
        /// Refer to selector for syntax details.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selector")]
        public virtual string Selector { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Selects and configures the service controller used by the service.  The service controller handles
    /// features like abuse, quota, billing, logging, monitoring, etc.</summary>
    public class Control : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The service control environment to use. If empty, no control plane feature (like quota and billing)
        /// will be enabled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("environment")]
        public virtual string Environment { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Customize service error responses.  For example, list any service specific protobuf types that can
    /// appear in error detail lists of error responses.
    ///
    /// Example:
    ///
    /// custom_error: types: - google.foo.v1.CustomError - google.foo.v1.AnotherError</summary>
    public class CustomError : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The list of custom error rules that apply to individual API messages.
        ///
        /// **NOTE:** All service configuration rules follow "last one wins" order.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rules")]
        public virtual System.Collections.Generic.IList<CustomErrorRule> Rules { get; set; } 

        /// <summary>The list of custom error detail types, e.g. 'google.foo.v1.CustomError'.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("types")]
        public virtual System.Collections.Generic.IList<string> Types { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A custom error rule.</summary>
    public class CustomErrorRule : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Mark this message as possible payload in error response.  Otherwise, objects of this type will be
        /// filtered when they appear in error payload.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isErrorType")]
        public virtual System.Nullable<bool> IsErrorType { get; set; } 

        /// <summary>Selects messages to which this rule applies.
        ///
        /// Refer to selector for syntax details.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selector")]
        public virtual string Selector { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A custom pattern is used for defining custom HTTP verb.</summary>
    public class CustomHttpPattern : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The name of this custom HTTP verb.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The path matched by this custom verb.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("path")]
        public virtual string Path { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Request message for DisableService method.</summary>
    public class DisableServiceRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>`Documentation` provides the information for describing a service.
    ///
    /// Example: documentation: summary: > The Google Calendar API gives access to most calendar features. pages: -
    /// name: Overview content: == include google/foo/overview.md == - name: Tutorial content: == include
    /// google/foo/tutorial.md == subpages; - name: Java content: == include google/foo/tutorial_java.md == rules: -
    /// selector: google.calendar.Calendar.Get description: > ... - selector: google.calendar.Calendar.Put description:
    /// > ...
    ///
    /// Documentation is provided in markdown syntax. In addition to standard markdown features, definition lists,
    /// tables and fenced code blocks are supported. Section headers can be provided and are interpreted relative to the
    /// section nesting of the context where a documentation fragment is embedded.
    ///
    /// Documentation from the IDL is merged with documentation defined via the config at normalization time, where
    /// documentation provided by config rules overrides IDL provided.
    ///
    /// A number of constructs specific to the API platform are supported in documentation text.
    ///
    /// In order to reference a proto element, the following notation can be used: fully.qualified.proto.name]] To
    /// override the display text used for the link, this can be used: display text]fully.qualified.proto.name] Text can
    /// be excluded from doc using the following notation: -- internal comment -- Comments can be made conditional using
    /// a visibility label. The below text will be only rendered if the `BETA` label is available: --BETA: comment for
    /// BETA users -- A few directives are available in documentation. Note that directives must appear on a single line
    /// to be properly identified. The `include` directive includes a markdown file from an external source: == include
    /// path/to/file == The `resource_for` directive marks a message to be the resource of a collection in REST view. If
    /// it is not specified, tools attempt to infer the resource from the operations in a collection: == resource_for
    /// v1.shelves.books == The directive `suppress_warning` does not directly affect documentation and is documented
    /// together with service config validation.</summary>
    public class Documentation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The URL to the root of documentation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("documentationRootUrl")]
        public virtual string DocumentationRootUrl { get; set; } 

        /// <summary>Declares a single overview page. For example: documentation: summary: ... overview: == include
        /// overview.md ==
        ///
        /// This is a shortcut for the following declaration (using pages style): documentation: summary: ... pages: -
        /// name: Overview content: == include overview.md ==
        ///
        /// Note: you cannot specify both `overview` field and `pages` field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("overview")]
        public virtual string Overview { get; set; } 

        /// <summary>The top level pages for the documentation set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pages")]
        public virtual System.Collections.Generic.IList<Page> Pages { get; set; } 

        /// <summary>A list of documentation rules that apply to individual API elements.
        ///
        /// **NOTE:** All service configuration rules follow "last one wins" order.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rules")]
        public virtual System.Collections.Generic.IList<DocumentationRule> Rules { get; set; } 

        /// <summary>A short summary of what the service does. Can only be provided by plain text.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("summary")]
        public virtual string Summary { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A documentation rule provides information about individual API elements.</summary>
    public class DocumentationRule : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Deprecation description of the selected element(s). It can be provided if an element is marked as
        /// `deprecated`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deprecationDescription")]
        public virtual string DeprecationDescription { get; set; } 

        /// <summary>Description of the selected API(s).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>The selector is a comma-separated list of patterns. Each pattern is a qualified name of the element
        /// which may end in "*", indicating a wildcard. Wildcards are only allowed at the end and for a whole component
        /// of the qualified name, i.e. "foo.*" is ok, but not "foo.b*" or "foo.*.bar". To specify a default for all
        /// applicable elements, the whole pattern "*" is used.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selector")]
        public virtual string Selector { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Request message for EnableService method.</summary>
    public class EnableServiceRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>`Endpoint` describes a network endpoint that serves a set of APIs. A service may expose any number of
    /// endpoints, and all endpoints share the same service configuration, such as quota configuration and monitoring
    /// configuration.
    ///
    /// Example service configuration:
    ///
    /// name: library-example.googleapis.com endpoints: # Below entry makes 'google.example.library.v1.Library' # API be
    /// served from endpoint address library-example.googleapis.com. # It also allows HTTP OPTIONS calls to be passed to
    /// the backend, for # it to decide whether the subsequent cross-origin request is # allowed to proceed. - name:
    /// library-example.googleapis.com allow_cors: true</summary>
    public class Endpoint : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>DEPRECATED: This field is no longer supported. Instead of using aliases, please specify multiple
        /// google.api.Endpoint for each of the intented alias.
        ///
        /// Additional names that this endpoint will be hosted on.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("aliases")]
        public virtual System.Collections.Generic.IList<string> Aliases { get; set; } 

        /// <summary>Allowing [CORS](https://en.wikipedia.org/wiki/Cross-origin_resource_sharing), aka cross-domain
        /// traffic, would allow the backends served from this endpoint to receive and respond to HTTP OPTIONS requests.
        /// The response will be used by the browser to determine whether the subsequent cross-origin request is allowed
        /// to proceed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("allowCors")]
        public virtual System.Nullable<bool> AllowCors { get; set; } 

        /// <summary>The list of APIs served by this endpoint.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("apis")]
        public virtual System.Collections.Generic.IList<string> Apis { get; set; } 

        /// <summary>The list of features enabled on this endpoint.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("features")]
        public virtual System.Collections.Generic.IList<string> Features { get; set; } 

        /// <summary>The canonical name of this endpoint.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Enum type definition.</summary>
    public class Enum : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Enum value definitions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enumvalue")]
        public virtual System.Collections.Generic.IList<EnumValue> Enumvalue { get; set; } 

        /// <summary>Enum type name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Protocol buffer options.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("options")]
        public virtual System.Collections.Generic.IList<Option> Options { get; set; } 

        /// <summary>The source context.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sourceContext")]
        public virtual SourceContext SourceContext { get; set; } 

        /// <summary>The source syntax.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("syntax")]
        public virtual string Syntax { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Enum value definition.</summary>
    public class EnumValue : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Enum value name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Enum value number.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("number")]
        public virtual System.Nullable<int> Number { get; set; } 

        /// <summary>Protocol buffer options.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("options")]
        public virtual System.Collections.Generic.IList<Option> Options { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Experimental service configuration. These configuration options can only be used by whitelisted
    /// users.</summary>
    public class Experimental : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Authorization configuration.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("authorization")]
        public virtual AuthorizationConfig Authorization { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A single field of a message type.</summary>
    public class Field : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The field cardinality.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cardinality")]
        public virtual string Cardinality { get; set; } 

        /// <summary>The string value of the default value of this field. Proto2 syntax only.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultValue")]
        public virtual string DefaultValue { get; set; } 

        /// <summary>The field JSON name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("jsonName")]
        public virtual string JsonName { get; set; } 

        /// <summary>The field type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The field name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The field number.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("number")]
        public virtual System.Nullable<int> Number { get; set; } 

        /// <summary>The index of the field type in `Type.oneofs`, for message or enumeration types. The first type has
        /// index 1; zero means the type is not in the list.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("oneofIndex")]
        public virtual System.Nullable<int> OneofIndex { get; set; } 

        /// <summary>The protocol buffer options.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("options")]
        public virtual System.Collections.Generic.IList<Option> Options { get; set; } 

        /// <summary>Whether to use alternative packed wire representation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("packed")]
        public virtual System.Nullable<bool> Packed { get; set; } 

        /// <summary>The field type URL, without the scheme, for message or enumeration types. Example:
        /// `"type.googleapis.com/google.protobuf.Timestamp"`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("typeUrl")]
        public virtual string TypeUrl { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Defines the HTTP configuration for a service. It contains a list of HttpRule, each specifying the
    /// mapping of an RPC method to one or more HTTP REST API methods.</summary>
    public class Http : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A list of HTTP configuration rules that apply to individual API methods.
        ///
        /// **NOTE:** All service configuration rules follow "last one wins" order.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rules")]
        public virtual System.Collections.Generic.IList<HttpRule> Rules { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>`HttpRule` defines the mapping of an RPC method to one or more HTTP REST APIs.  The mapping determines
    /// what portions of the request message are populated from the path, query parameters, or body of the HTTP request.
    /// The mapping is typically specified as an `google.api.http` annotation, see "google/api/annotations.proto" for
    /// details.
    ///
    /// The mapping consists of a field specifying the path template and method kind.  The path template can refer to
    /// fields in the request message, as in the example below which describes a REST GET operation on a resource
    /// collection of messages:
    ///
    /// service Messaging { rpc GetMessage(GetMessageRequest) returns (Message) { option (google.api.http).get =
    /// "/v1/messages/{message_id}/{sub.subfield}"; } } message GetMessageRequest { message SubMessage { string subfield
    /// = 1; } string message_id = 1; // mapped to the URL SubMessage sub = 2;    // `sub.subfield` is url-mapped }
    /// message Message { string text = 1; // content of the resource }
    ///
    /// The same http annotation can alternatively be expressed inside the `GRPC API Configuration` YAML file.
    ///
    /// http: rules: - selector: .Messaging.GetMessage get: /v1/messages/{message_id}/{sub.subfield}
    ///
    /// This definition enables an automatic, bidrectional mapping of HTTP JSON to RPC. Example:
    ///
    /// HTTP | RPC -----|----- `GET /v1/messages/123456/foo`  | `GetMessage(message_id: "123456" sub:
    /// SubMessage(subfield: "foo"))`
    ///
    /// In general, not only fields but also field paths can be referenced from a path pattern. Fields mapped to the
    /// path pattern cannot be repeated and must have a primitive (non-message) type.
    ///
    /// Any fields in the request message which are not bound by the path pattern automatically become (optional) HTTP
    /// query parameters. Assume the following definition of the request message:
    ///
    /// message GetMessageRequest { message SubMessage { string subfield = 1; } string message_id = 1; // mapped to the
    /// URL int64 revision = 2;    // becomes a parameter SubMessage sub = 3;    // `sub.subfield` becomes a parameter }
    ///
    /// This enables a HTTP JSON to RPC mapping as below:
    ///
    /// HTTP | RPC -----|----- `GET /v1/messages/123456?revision=2=foo` | `GetMessage(message_id: "123456" revision: 2
    /// sub: SubMessage(subfield: "foo"))`
    ///
    /// Note that fields which are mapped to HTTP parameters must have a primitive type or a repeated primitive type.
    /// Message types are not allowed. In the case of a repeated type, the parameter can be repeated in the URL, as in
    /// `...?param=A=B`.
    ///
    /// For HTTP method kinds which allow a request body, the `body` field specifies the mapping. Consider a REST update
    /// method on the message resource collection:
    ///
    /// service Messaging { rpc UpdateMessage(UpdateMessageRequest) returns (Message) { option (google.api.http) = {
    /// put: "/v1/messages/{message_id}" body: "message" }; } } message UpdateMessageRequest { string message_id = 1; //
    /// mapped to the URL Message message = 2;   // mapped to the body }
    ///
    /// The following HTTP JSON to RPC mapping is enabled, where the representation of the JSON in the request body is
    /// determined by protos JSON encoding:
    ///
    /// HTTP | RPC -----|----- `PUT /v1/messages/123456 { "text": "Hi!" }` | `UpdateMessage(message_id: "123456" message
    /// { text: "Hi!" })`
    ///
    /// The special name `*` can be used in the body mapping to define that every field not bound by the path template
    /// should be mapped to the request body.  This enables the following alternative definition of the update method:
    ///
    /// service Messaging { rpc UpdateMessage(Message) returns (Message) { option (google.api.http) = { put:
    /// "/v1/messages/{message_id}" body: "*" }; } } message Message { string message_id = 1; string text = 2; }
    ///
    /// The following HTTP JSON to RPC mapping is enabled:
    ///
    /// HTTP | RPC -----|----- `PUT /v1/messages/123456 { "text": "Hi!" }` | `UpdateMessage(message_id: "123456" text:
    /// "Hi!")`
    ///
    /// Note that when using `*` in the body mapping, it is not possible to have HTTP parameters, as all fields not
    /// bound by the path end in the body. This makes this option more rarely used in practice of defining REST APIs.
    /// The common usage of `*` is in custom methods which don't use the URL at all for transferring data.
    ///
    /// It is possible to define multiple HTTP methods for one RPC by using the `additional_bindings` option. Example:
    ///
    /// service Messaging { rpc GetMessage(GetMessageRequest) returns (Message) { option (google.api.http) = { get:
    /// "/v1/messages/{message_id}" additional_bindings { get: "/v1/users/{user_id}/messages/{message_id}" } }; } }
    /// message GetMessageRequest { string message_id = 1; string user_id = 2; }
    ///
    /// This enables the following two alternative HTTP JSON to RPC mappings:
    ///
    /// HTTP | RPC -----|----- `GET /v1/messages/123456` | `GetMessage(message_id: "123456")` `GET
    /// /v1/users/me/messages/123456` | `GetMessage(user_id: "me" message_id: "123456")`
    ///
    /// # Rules for HTTP mapping
    ///
    /// The rules for mapping HTTP path, query parameters, and body fields to the request message are as follows:
    ///
    /// 1. The `body` field specifies either `*` or a field path, or is omitted. If omitted, it assumes there is no HTTP
    /// body. 2. Leaf fields (recursive expansion of nested messages in the request) can be classified into three types:
    /// (a) Matched in the URL template. (b) Covered by body (if body is `*`, everything except (a) fields; else
    /// everything under the body field) (c) All other fields. 3. URL query parameters found in the HTTP request are
    /// mapped to (c) fields. 4. Any body sent with an HTTP request can contain only (b) fields.
    ///
    /// The syntax of the path template is as follows:
    ///
    /// Template = "/" Segments [ Verb ] ; Segments = Segment { "/" Segment } ; Segment  = "*" | "**" | LITERAL |
    /// Variable ; Variable = "{" FieldPath [ "=" Segments ] "}" ; FieldPath = IDENT { "." IDENT } ; Verb     = ":"
    /// LITERAL ;
    ///
    /// The syntax `*` matches a single path segment. It follows the semantics of [RFC
    /// 6570](https://tools.ietf.org/html/rfc6570) Section 3.2.2 Simple String Expansion.
    ///
    /// The syntax `**` matches zero or more path segments. It follows the semantics of [RFC
    /// 6570](https://tools.ietf.org/html/rfc6570) Section 3.2.3 Reserved Expansion. NOTE: it must be the last segment
    /// in the path except the Verb.
    ///
    /// The syntax `LITERAL` matches literal text in the URL path.
    ///
    /// The syntax `Variable` matches the entire path as specified by its template; this nested template must not
    /// contain further variables. If a variable matches a single path segment, its template may be omitted, e.g.
    /// `{var}` is equivalent to `{var=*}`.
    ///
    /// NOTE: the field paths in variables and in the `body` must not refer to repeated fields or map fields.
    ///
    /// Use CustomHttpPattern to specify any HTTP method that is not included in the `pattern` field, such as HEAD, or
    /// "*" to leave the HTTP method unspecified for a given URL path rule. The wild-card rule is useful for services
    /// that provide content to Web (HTML) clients.</summary>
    public class HttpRule : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Additional HTTP bindings for the selector. Nested bindings must not contain an
        /// `additional_bindings` field themselves (that is, the nesting may only be one level deep).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("additionalBindings")]
        public virtual System.Collections.Generic.IList<HttpRule> AdditionalBindings { get; set; } 

        /// <summary>The name of the request field whose value is mapped to the HTTP body, or `*` for mapping all fields
        /// not captured by the path pattern to the HTTP body. NOTE: the referred field must not be a repeated field and
        /// must be present at the top-level of request message type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("body")]
        public virtual string Body { get; set; } 

        /// <summary>Custom pattern is used for defining custom verbs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("custom")]
        public virtual CustomHttpPattern Custom { get; set; } 

        /// <summary>Used for deleting a resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("delete")]
        public virtual string Delete { get; set; } 

        /// <summary>Used for listing and getting information about resources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("get")]
        public virtual string Get { get; set; } 

        /// <summary>Use this only for Scotty Requests. Do not use this for bytestream methods. For media support, add
        /// instead [][google.bytestream.RestByteStream] as an API to your configuration.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mediaDownload")]
        public virtual MediaDownload MediaDownload { get; set; } 

        /// <summary>Use this only for Scotty Requests. Do not use this for media support using Bytestream, add instead
        /// [][google.bytestream.RestByteStream] as an API to your configuration for Bytestream methods.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mediaUpload")]
        public virtual MediaUpload MediaUpload { get; set; } 

        /// <summary>Used for updating a resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("patch")]
        public virtual string Patch { get; set; } 

        /// <summary>Used for creating a resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("post")]
        public virtual string Post { get; set; } 

        /// <summary>Used for updating a resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("put")]
        public virtual string Put { get; set; } 

        /// <summary>The name of the response field whose value is mapped to the HTTP body of response. Other response
        /// fields are ignored. This field is optional. When not set, the response message will be used as HTTP body of
        /// response. NOTE: the referred field must be not a repeated field and must be present at the top-level of
        /// response message type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("responseBody")]
        public virtual string ResponseBody { get; set; } 

        /// <summary>Selects methods to which this rule applies.
        ///
        /// Refer to selector for syntax details.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selector")]
        public virtual string Selector { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A description of a label.</summary>
    public class LabelDescriptor : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A human-readable description for the label.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>The label key.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("key")]
        public virtual string Key { get; set; } 

        /// <summary>The type of data that can be assigned to the label.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("valueType")]
        public virtual string ValueType { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Response message for `ListEnabledServices` method.</summary>
    public class ListEnabledServicesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Token that can be passed to `ListEnabledServices` to resume a paginated query.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>Services enabled for the specified parent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("services")]
        public virtual System.Collections.Generic.IList<PublishedService> Services { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A description of a log type. Example in YAML format:
    ///
    /// - name: library.googleapis.com/activity_history description: The history of borrowing and returning library
    /// items. display_name: Activity labels: - key: /customer_id description: Identifier of a library
    /// customer</summary>
    public class LogDescriptor : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A human-readable description of this log. This information appears in the documentation and can
        /// contain details.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>The human-readable name for this log. This information appears on the user interface and should be
        /// concise.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; } 

        /// <summary>The set of labels that are available to describe a specific log entry. Runtime requests that
        /// contain labels not specified here are considered invalid.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("labels")]
        public virtual System.Collections.Generic.IList<LabelDescriptor> Labels { get; set; } 

        /// <summary>The name of the log. It must be less than 512 characters long and can include the following
        /// characters: upper- and lower-case alphanumeric characters [A-Za-z0-9], and punctuation characters including
        /// slash, underscore, hyphen, period [/_-.].</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Logging configuration of the service.
    ///
    /// The following example shows how to configure logs to be sent to the producer and consumer projects. In the
    /// example, the `activity_history` log is sent to both the producer and consumer projects, whereas the
    /// `purchase_history` log is only sent to the producer project.
    ///
    /// monitored_resources: - type: library.googleapis.com/branch labels: - key: /city description: The city where the
    /// library branch is located in. - key: /name description: The name of the branch. logs: - name: activity_history
    /// labels: - key: /customer_id - name: purchase_history logging: producer_destinations: - monitored_resource:
    /// library.googleapis.com/branch logs: - activity_history - purchase_history consumer_destinations: -
    /// monitored_resource: library.googleapis.com/branch logs: - activity_history</summary>
    public class Logging : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Logging configurations for sending logs to the consumer project. There can be multiple consumer
        /// destinations, each one must have a different monitored resource type. A log can be used in at most one
        /// consumer destination.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("consumerDestinations")]
        public virtual System.Collections.Generic.IList<LoggingDestination> ConsumerDestinations { get; set; } 

        /// <summary>Logging configurations for sending logs to the producer project. There can be multiple producer
        /// destinations, each one must have a different monitored resource type. A log can be used in at most one
        /// producer destination.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("producerDestinations")]
        public virtual System.Collections.Generic.IList<LoggingDestination> ProducerDestinations { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Configuration of a specific logging destination (the producer project or the consumer
    /// project).</summary>
    public class LoggingDestination : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Names of the logs to be sent to this destination. Each name must be defined in the Service.logs
        /// section. If the log name is not a domain scoped name, it will be automatically prefixed with the service
        /// name followed by "/".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("logs")]
        public virtual System.Collections.Generic.IList<string> Logs { get; set; } 

        /// <summary>The monitored resource type. The type must be defined in the Service.monitored_resources
        /// section.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("monitoredResource")]
        public virtual string MonitoredResource { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Use this only for Scotty Requests. Do not use this for media support using Bytestream, add instead
    /// [][google.bytestream.RestByteStream] as an API to your configuration for Bytestream methods.</summary>
    public class MediaDownload : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>DO NOT USE THIS FIELD UNTIL THIS WARNING IS REMOVED.
        ///
        /// Specify name of the download service if one is used for download.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("downloadService")]
        public virtual string DownloadService { get; set; } 

        /// <summary>Whether download is enabled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enabled")]
        public virtual System.Nullable<bool> Enabled { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Use this only for Scotty Requests. Do not use this for media support using Bytestream, add instead
    /// [][google.bytestream.RestByteStream] as an API to your configuration for Bytestream methods.</summary>
    public class MediaUpload : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Whether upload is enabled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enabled")]
        public virtual System.Nullable<bool> Enabled { get; set; } 

        /// <summary>DO NOT USE THIS FIELD UNTIL THIS WARNING IS REMOVED.
        ///
        /// Specify name of the upload service if one is used for upload.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uploadService")]
        public virtual string UploadService { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Method represents a method of an api.</summary>
    public class Method : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The simple name of this method.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Any metadata attached to the method.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("options")]
        public virtual System.Collections.Generic.IList<Option> Options { get; set; } 

        /// <summary>If true, the request is streamed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("requestStreaming")]
        public virtual System.Nullable<bool> RequestStreaming { get; set; } 

        /// <summary>A URL of the input message type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("requestTypeUrl")]
        public virtual string RequestTypeUrl { get; set; } 

        /// <summary>If true, the response is streamed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("responseStreaming")]
        public virtual System.Nullable<bool> ResponseStreaming { get; set; } 

        /// <summary>The URL of the output message type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("responseTypeUrl")]
        public virtual string ResponseTypeUrl { get; set; } 

        /// <summary>The source syntax of this method.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("syntax")]
        public virtual string Syntax { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Defines a metric type and its schema. Once a metric descriptor is created, deleting or altering it
    /// stops data collection and makes the metric type's existing data unusable.</summary>
    public class MetricDescriptor : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A detailed description of the metric, which can be used in documentation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>A concise name for the metric, which can be displayed in user interfaces. Use sentence case without
        /// an ending period, for example "Request count".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; } 

        /// <summary>The set of labels that can be used to describe a specific instance of this metric type. For
        /// example, the `appengine.googleapis.com/http/server/response_latencies` metric type has a label for the HTTP
        /// response code, `response_code`, so you can look at latencies for successful responses or just for responses
        /// that failed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("labels")]
        public virtual System.Collections.Generic.IList<LabelDescriptor> Labels { get; set; } 

        /// <summary>Whether the metric records instantaneous values, changes to a value, etc. Some combinations of
        /// `metric_kind` and `value_type` might not be supported.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metricKind")]
        public virtual string MetricKind { get; set; } 

        /// <summary>The resource name of the metric descriptor. Depending on the implementation, the name typically
        /// includes: (1) the parent resource name that defines the scope of the metric type or of its data; and (2) the
        /// metric's URL-encoded type, which also appears in the `type` field of this descriptor. For example, following
        /// is the resource name of a custom metric within the GCP project `my-project-id`:
        ///
        /// "projects/my-project-id/metricDescriptors/custom.googleapis.com%2Finvoice%2Fpaid%2Famount"</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The metric type, including its DNS name prefix. The type is not URL-encoded.  All user-defined
        /// custom metric types have the DNS name `custom.googleapis.com`.  Metric types should use a natural
        /// hierarchical grouping. For example:
        ///
        /// "custom.googleapis.com/invoice/paid/amount"
        /// "appengine.googleapis.com/http/server/response_latencies"</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The unit in which the metric value is reported. It is only applicable if the `value_type` is
        /// `INT64`, `DOUBLE`, or `DISTRIBUTION`. The supported units are a subset of [The Unified Code for Units of
        /// Measure](http://unitsofmeasure.org/ucum.html) standard:
        ///
        /// **Basic units (UNIT)**
        ///
        /// * `bit`   bit * `By`    byte * `s`     second * `min`   minute * `h`     hour * `d`     day
        ///
        /// **Prefixes (PREFIX)**
        ///
        /// * `k`     kilo    (10**3) * `M`     mega    (10**6) * `G`     giga    (10**9) * `T`     tera    (10**12) *
        /// `P`     peta    (10**15) * `E`     exa     (10**18) * `Z`     zetta   (10**21) * `Y`     yotta   (10**24) *
        /// `m`     milli   (10**-3) * `u`     micro   (10**-6) * `n`     nano    (10**-9) * `p`     pico    (10**-12) *
        /// `f`     femto   (10**-15) * `a`     atto    (10**-18) * `z`     zepto   (10**-21) * `y`     yocto
        /// (10**-24) * `Ki`    kibi    (2**10) * `Mi`    mebi    (2**20) * `Gi`    gibi    (2**30) * `Ti`    tebi
        /// (2**40)
        ///
        /// **Grammar**
        ///
        /// The grammar includes the dimensionless unit `1`, such as `1/s`.
        ///
        /// The grammar also includes these connectors:
        ///
        /// * `/`    division (as an infix operator, e.g. `1/s`). * `.`    multiplication (as an infix operator, e.g.
        /// `GBy.d`)
        ///
        /// The grammar for a unit is as follows:
        ///
        /// Expression = Component { "." Component } { "/" Component } ;
        ///
        /// Component = [ PREFIX ] UNIT [ Annotation ] | Annotation | "1" ;
        ///
        /// Annotation = "{" NAME "}" ;
        ///
        /// Notes:
        ///
        /// * `Annotation` is just a comment if it follows a `UNIT` and is equivalent to `1` if it is used alone. For
        /// examples, `{requests}/s == 1/s`, `By{transmitted}/s == By/s`. * `NAME` is a sequence of non-blank printable
        /// ASCII characters not containing '{' or '}'.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("unit")]
        public virtual string Unit { get; set; } 

        /// <summary>Whether the measurement is an integer, a floating-point number, etc. Some combinations of
        /// `metric_kind` and `value_type` might not be supported.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("valueType")]
        public virtual string ValueType { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Declares an API to be included in this API. The including API must redeclare all the methods from the
    /// included API, but documentation and options are inherited as follows:
    ///
    /// - If after comment and whitespace stripping, the documentation string of the redeclared method is empty, it will
    /// be inherited from the original method.
    ///
    /// - Each annotation belonging to the service config (http, visibility) which is not set in the redeclared method
    /// will be inherited.
    ///
    /// - If an http annotation is inherited, the path pattern will be modified as follows. Any version prefix will be
    /// replaced by the version of the including API plus the root path if specified.
    ///
    /// Example of a simple mixin:
    ///
    /// package google.acl.v1; service AccessControl { // Get the underlying ACL object. rpc GetAcl(GetAclRequest)
    /// returns (Acl) { option (google.api.http).get = "/v1/{resource=**}:getAcl"; } }
    ///
    /// package google.storage.v2; service Storage { //       rpc GetAcl(GetAclRequest) returns (Acl);
    ///
    /// // Get a data record. rpc GetData(GetDataRequest) returns (Data) { option (google.api.http).get =
    /// "/v2/{resource=**}"; } }
    ///
    /// Example of a mixin configuration:
    ///
    /// apis: - name: google.storage.v2.Storage mixins: - name: google.acl.v1.AccessControl
    ///
    /// The mixin construct implies that all methods in `AccessControl` are also declared with same name and
    /// request/response types in `Storage`. A documentation generator or annotation processor will see the effective
    /// `Storage.GetAcl` method after inherting documentation and annotations as follows:
    ///
    /// service Storage { // Get the underlying ACL object. rpc GetAcl(GetAclRequest) returns (Acl) { option
    /// (google.api.http).get = "/v2/{resource=**}:getAcl"; } ... }
    ///
    /// Note how the version in the path pattern changed from `v1` to `v2`.
    ///
    /// If the `root` field in the mixin is specified, it should be a relative path under which inherited HTTP paths are
    /// placed. Example:
    ///
    /// apis: - name: google.storage.v2.Storage mixins: - name: google.acl.v1.AccessControl root: acls
    ///
    /// This implies the following inherited HTTP annotation:
    ///
    /// service Storage { // Get the underlying ACL object. rpc GetAcl(GetAclRequest) returns (Acl) { option
    /// (google.api.http).get = "/v2/acls/{resource=**}:getAcl"; } ... }</summary>
    public class Mixin : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The fully qualified name of the API which is included.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>If non-empty specifies a path under which inherited HTTP paths are rooted.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("root")]
        public virtual string Root { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>An object that describes the schema of a MonitoredResource object using a type name and a set of
    /// labels.  For example, the monitored resource descriptor for Google Compute Engine VM instances has a type of
    /// `"gce_instance"` and specifies the use of the labels `"instance_id"` and `"zone"` to identify particular VM
    /// instances.
    ///
    /// Different APIs can support different monitored resource types. APIs generally provide a `list` method that
    /// returns the monitored resource descriptors used by the API.</summary>
    public class MonitoredResourceDescriptor : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. A detailed description of the monitored resource type that might be used in
        /// documentation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>Optional. A concise name for the monitored resource type that might be displayed in user
        /// interfaces. It should be a Title Cased Noun Phrase, without any article or other determiners. For example,
        /// `"Google Cloud SQL Database"`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; } 

        /// <summary>Required. A set of labels used to describe instances of this monitored resource type. For example,
        /// an individual Google Cloud SQL database is identified by values for the labels `"database_id"` and
        /// `"zone"`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("labels")]
        public virtual System.Collections.Generic.IList<LabelDescriptor> Labels { get; set; } 

        /// <summary>Optional. The resource name of the monitored resource descriptor:
        /// `"projects/{project_id}/monitoredResourceDescriptors/{type}"` where {type} is the value of the `type` field
        /// in this object and {project_id} is a project ID that provides API-specific context for accessing the type.
        /// APIs that do not use project information can use the resource name format
        /// `"monitoredResourceDescriptors/{type}"`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Required. The monitored resource type. For example, the type `"cloudsql_database"` represents
        /// databases in Google Cloud SQL. The maximum length of this value is 256 characters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Monitoring configuration of the service.
    ///
    /// The example below shows how to configure monitored resources and metrics for monitoring. In the example, a
    /// monitored resource and two metrics are defined. The `library.googleapis.com/book/returned_count` metric is sent
    /// to both producer and consumer projects, whereas the `library.googleapis.com/book/overdue_count` metric is only
    /// sent to the consumer project.
    ///
    /// monitored_resources: - type: library.googleapis.com/branch labels: - key: /city description: The city where the
    /// library branch is located in. - key: /name description: The name of the branch. metrics: - name:
    /// library.googleapis.com/book/returned_count metric_kind: DELTA value_type: INT64 labels: - key: /customer_id -
    /// name: library.googleapis.com/book/overdue_count metric_kind: GAUGE value_type: INT64 labels: - key: /customer_id
    /// monitoring: producer_destinations: - monitored_resource: library.googleapis.com/branch metrics: -
    /// library.googleapis.com/book/returned_count consumer_destinations: - monitored_resource:
    /// library.googleapis.com/branch metrics: - library.googleapis.com/book/returned_count -
    /// library.googleapis.com/book/overdue_count</summary>
    public class Monitoring : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Monitoring configurations for sending metrics to the consumer project. There can be multiple
        /// consumer destinations, each one must have a different monitored resource type. A metric can be used in at
        /// most one consumer destination.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("consumerDestinations")]
        public virtual System.Collections.Generic.IList<MonitoringDestination> ConsumerDestinations { get; set; } 

        /// <summary>Monitoring configurations for sending metrics to the producer project. There can be multiple
        /// producer destinations, each one must have a different monitored resource type. A metric can be used in at
        /// most one producer destination.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("producerDestinations")]
        public virtual System.Collections.Generic.IList<MonitoringDestination> ProducerDestinations { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Configuration of a specific monitoring destination (the producer project or the consumer
    /// project).</summary>
    public class MonitoringDestination : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Names of the metrics to report to this monitoring destination. Each name must be defined in
        /// Service.metrics section.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metrics")]
        public virtual System.Collections.Generic.IList<string> Metrics { get; set; } 

        /// <summary>The monitored resource type. The type must be defined in Service.monitored_resources
        /// section.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("monitoredResource")]
        public virtual string MonitoredResource { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>OAuth scopes are a way to define data and permissions on data. For example, there are scopes defined
    /// for "Read-only access to Google Calendar" and "Access to Cloud Platform". Users can consent to a scope for an
    /// application, giving it permission to access that data on their behalf.
    ///
    /// OAuth scope specifications should be fairly coarse grained; a user will need to see and understand the text
    /// description of what your scope means.
    ///
    /// In most cases: use one or at most two OAuth scopes for an entire family of products. If your product has
    /// multiple APIs, you should probably be sharing the OAuth scope across all of those APIs.
    ///
    /// When you need finer grained OAuth consent screens: talk with your product management about how developers will
    /// use them in practice.
    ///
    /// Please note that even though each of the canonical scopes is enough for a request to be accepted and passed to
    /// the backend, a request can still fail due to the backend requiring additional scopes or permissions.</summary>
    public class OAuthRequirements : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The list of publicly documented OAuth scopes that are allowed access. An OAuth token containing any
        /// of these scopes will be accepted.
        ///
        /// Example:
        ///
        /// canonical_scopes: https://www.googleapis.com/auth/calendar,
        /// https://www.googleapis.com/auth/calendar.read</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("canonicalScopes")]
        public virtual string CanonicalScopes { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>This resource represents a long-running operation that is the result of a network API call.</summary>
    public class Operation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>If the value is `false`, it means the operation is still in progress. If true, the operation is
        /// completed, and either `error` or `response` is available.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("done")]
        public virtual System.Nullable<bool> Done { get; set; } 

        /// <summary>The error result of the operation in case of failure or cancellation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Status Error { get; set; } 

        /// <summary>Service-specific metadata associated with the operation.  It typically contains progress
        /// information and common metadata such as create time. Some services might not provide such metadata.  Any
        /// method that returns a long-running operation should document the metadata type, if any.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual System.Collections.Generic.IDictionary<string,object> Metadata { get; set; } 

        /// <summary>The server-assigned name, which is only unique within the same service that originally returns it.
        /// If you use the default HTTP mapping, the `name` should have the format of
        /// `operations/some/unique/name`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The normal response of the operation in case of success.  If the original method returns no data on
        /// success, such as `Delete`, the response is `google.protobuf.Empty`.  If the original method is standard
        /// `Get`/`Create`/`Update`, the response should be the resource.  For other methods, the response should have
        /// the type `XxxResponse`, where `Xxx` is the original method name.  For example, if the original method name
        /// is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("response")]
        public virtual System.Collections.Generic.IDictionary<string,object> Response { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The metadata associated with a long running operation resource.</summary>
    public class OperationMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Percentage of completion of this operation, ranging from 0 to 100.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("progressPercentage")]
        public virtual System.Nullable<int> ProgressPercentage { get; set; } 

        /// <summary>The full name of the resources that this operation is directly associated with.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resourceNames")]
        public virtual System.Collections.Generic.IList<string> ResourceNames { get; set; } 

        /// <summary>The start time of the operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startTime")]
        public virtual object StartTime { get; set; } 

        /// <summary>Detailed status information for each step. The order is undetermined.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("steps")]
        public virtual System.Collections.Generic.IList<Step> Steps { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A protocol buffer option, which can be attached to a message, field, enumeration, etc.</summary>
    public class Option : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The option's name. For protobuf built-in options (options defined in descriptor.proto), this is the
        /// short name. For example, `"map_entry"`. For custom options, it should be the fully-qualified name. For
        /// example, `"google.api.http"`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The option's value packed in an Any message. If the value is a primitive, the corresponding wrapper
        /// type defined in google/protobuf/wrappers.proto should be used. If the value is an enum, it should be stored
        /// as an int32 value using the google.protobuf.Int32Value type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual System.Collections.Generic.IDictionary<string,object> Value { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents a documentation page. A page can contain subpages to represent nested documentation set
    /// structure.</summary>
    public class Page : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The Markdown content of the page. You can use == include {path} == to include content from a
        /// Markdown file.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("content")]
        public virtual string Content { get; set; } 

        /// <summary>The name of the page. It will be used as an identity of the page to generate URI of the page, text
        /// of the link to this page in navigation, etc. The full page name (start from the root page name to this page
        /// concatenated with `.`) can be used as reference to the page in your documentation. For example: pages: -
        /// name: Tutorial content: == include tutorial.md == subpages: - name: Java content: == include
        /// tutorial_java.md ==
        ///
        /// You can reference `Java` page using Markdown reference link syntax: `Java`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Subpages of this page. The order of subpages specified here will be honored in the generated
        /// docset.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subpages")]
        public virtual System.Collections.Generic.IList<Page> Subpages { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The published version of a Service that is managed by Google Service Management.</summary>
    public class PublishedService : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The resource name of the service.
        ///
        /// A valid name would be: - services/serviceuser.googleapis.com</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The service's published configuration.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("service")]
        public virtual Service Service { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Response message for SearchServices method.</summary>
    public class SearchServicesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Token that can be passed to `ListAvailableServices` to resume a paginated query.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>Services available publicly or available to the authenticated caller.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("services")]
        public virtual System.Collections.Generic.IList<PublishedService> Services { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>`Service` is the root object of Google service configuration schema. It describes basic information
    /// about a service, such as the name and the title, and delegates other aspects to sub-sections. Each sub-section
    /// is either a proto message or a repeated proto message that configures a specific aspect, such as auth. See each
    /// proto message definition for details.
    ///
    /// Example:
    ///
    /// type: google.api.Service config_version: 3 name: calendar.googleapis.com title: Google Calendar API apis: -
    /// name: google.calendar.v3.Calendar authentication: providers: - id: google_calendar_auth jwks_uri:
    /// https://www.googleapis.com/oauth2/v1/certs issuer: https://securetoken.google.com rules: - selector: "*"
    /// requirements: provider_id: google_calendar_auth</summary>
    public class Service : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A list of API interfaces exported by this service. Only the `name` field of the google.protobuf.Api
        /// needs to be provided by the configuration author, as the remaining fields will be derived from the IDL
        /// during the normalization process. It is an error to specify an API interface here which cannot be resolved
        /// against the associated IDL files.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("apis")]
        public virtual System.Collections.Generic.IList<Api> Apis { get; set; } 

        /// <summary>Auth configuration.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("authentication")]
        public virtual Authentication Authentication { get; set; } 

        /// <summary>API backend configuration.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("backend")]
        public virtual Backend Backend { get; set; } 

        /// <summary>The version of the service configuration. The config version may influence interpretation of the
        /// configuration, for example, to determine defaults. This is documented together with applicable options. The
        /// current default for the config version itself is `3`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("configVersion")]
        public virtual System.Nullable<long> ConfigVersion { get; set; } 

        /// <summary>Context configuration.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("context")]
        public virtual Context Context { get; set; } 

        /// <summary>Configuration for the service control plane.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("control")]
        public virtual Control Control { get; set; } 

        /// <summary>Custom error configuration.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("customError")]
        public virtual CustomError CustomError { get; set; } 

        /// <summary>Additional API documentation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("documentation")]
        public virtual Documentation Documentation { get; set; } 

        /// <summary>Configuration for network endpoints.  If this is empty, then an endpoint with the same name as the
        /// service is automatically generated to service all defined APIs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endpoints")]
        public virtual System.Collections.Generic.IList<Endpoint> Endpoints { get; set; } 

        /// <summary>A list of all enum types included in this API service.  Enums referenced directly or indirectly by
        /// the `apis` are automatically included.  Enums which are not referenced but shall be included should be
        /// listed here by name. Example:
        ///
        /// enums: - name: google.someapi.v1.SomeEnum</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enums")]
        public virtual System.Collections.Generic.IList<Enum> Enums { get; set; } 

        /// <summary>Experimental configuration.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("experimental")]
        public virtual Experimental Experimental { get; set; } 

        /// <summary>HTTP configuration.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("http")]
        public virtual Http Http { get; set; } 

        /// <summary>A unique ID for a specific instance of this message, typically assigned by the client for tracking
        /// purpose. If empty, the server may choose to generate one instead.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>Logging configuration.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("logging")]
        public virtual Logging Logging { get; set; } 

        /// <summary>Defines the logs used by this service.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("logs")]
        public virtual System.Collections.Generic.IList<LogDescriptor> Logs { get; set; } 

        /// <summary>Defines the metrics used by this service.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metrics")]
        public virtual System.Collections.Generic.IList<MetricDescriptor> Metrics { get; set; } 

        /// <summary>Defines the monitored resources used by this service. This is required by the Service.monitoring
        /// and Service.logging configurations.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("monitoredResources")]
        public virtual System.Collections.Generic.IList<MonitoredResourceDescriptor> MonitoredResources { get; set; } 

        /// <summary>Monitoring configuration.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("monitoring")]
        public virtual Monitoring Monitoring { get; set; } 

        /// <summary>The DNS address at which this service is available, e.g. `calendar.googleapis.com`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The id of the Google developer project that owns the service. Members of this project can manage
        /// the service configuration, manage consumption of the service, etc.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("producerProjectId")]
        public virtual string ProducerProjectId { get; set; } 

        /// <summary>Output only. The source information for this configuration if available.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sourceInfo")]
        public virtual SourceInfo SourceInfo { get; set; } 

        /// <summary>System parameter configuration.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("systemParameters")]
        public virtual SystemParameters SystemParameters { get; set; } 

        /// <summary>A list of all proto message types included in this API service. It serves similar purpose as
        /// [google.api.Service.types], except that these types are not needed by user-defined APIs. Therefore, they
        /// will not show up in the generated discovery doc. This field should only be used to define system APIs in
        /// ESF.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("systemTypes")]
        public virtual System.Collections.Generic.IList<Type> SystemTypes { get; set; } 

        /// <summary>The product title associated with this service.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; } 

        /// <summary>A list of all proto message types included in this API service. Types referenced directly or
        /// indirectly by the `apis` are automatically included.  Messages which are not referenced but shall be
        /// included, such as types used by the `google.protobuf.Any` type, should be listed here by name. Example:
        ///
        /// types: - name: google.protobuf.Int32</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("types")]
        public virtual System.Collections.Generic.IList<Type> Types { get; set; } 

        /// <summary>Configuration controlling usage of this service.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("usage")]
        public virtual Usage Usage { get; set; } 

        /// <summary>API visibility configuration.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("visibility")]
        public virtual Visibility Visibility { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>`SourceContext` represents information about the source of a protobuf element, like the file in which
    /// it is defined.</summary>
    public class SourceContext : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The path-qualified name of the .proto file that contained the associated protobuf element.  For
        /// example: `"google/protobuf/source_context.proto"`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fileName")]
        public virtual string FileName { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Source information used to create a Service Config</summary>
    public class SourceInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>All files used during config generation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sourceFiles")]
        public virtual System.Collections.Generic.IList<System.Collections.Generic.IDictionary<string,object>> SourceFiles { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The `Status` type defines a logical error model that is suitable for different programming
    /// environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). The error model
    /// is designed to be:
    ///
    /// - Simple to use and understand for most users - Flexible enough to meet unexpected needs
    ///
    /// # Overview
    ///
    /// The `Status` message contains three pieces of data: error code, error message, and error details. The error code
    /// should be an enum value of google.rpc.Code, but it may accept additional error codes if needed.  The error
    /// message should be a developer-facing English message that helps developers *understand* and *resolve* the error.
    /// If a localized user-facing error message is needed, put the localized message in the error details or localize
    /// it in the client. The optional error details may contain arbitrary information about the error. There is a
    /// predefined set of error detail types in the package `google.rpc` which can be used for common error conditions.
    ///
    /// # Language mapping
    ///
    /// The `Status` message is the logical representation of the error model, but it is not necessarily the actual wire
    /// format. When the `Status` message is exposed in different client libraries and different wire protocols, it can
    /// be mapped differently. For example, it will likely be mapped to some exceptions in Java, but more likely mapped
    /// to some error codes in C.
    ///
    /// # Other uses
    ///
    /// The error model and the `Status` message can be used in a variety of environments, either with or without APIs,
    /// to provide a consistent developer experience across different environments.
    ///
    /// Example uses of this error model include:
    ///
    /// - Partial errors. If a service needs to return partial errors to the client, it may embed the `Status` in the
    /// normal response to indicate the partial errors.
    ///
    /// - Workflow errors. A typical workflow has multiple steps. Each step may have a `Status` message for error
    /// reporting purpose.
    ///
    /// - Batch operations. If a client uses batch request and batch response, the `Status` message should be used
    /// directly inside batch response, one for each error sub-response.
    ///
    /// - Asynchronous operations. If an API call embeds asynchronous operation results in its response, the status of
    /// those operations should be represented directly using the `Status` message.
    ///
    /// - Logging. If some API errors are stored in logs, the message `Status` could be used directly after any
    /// stripping needed for security/privacy reasons.</summary>
    public class Status : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The status code, which should be an enum value of google.rpc.Code.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("code")]
        public virtual System.Nullable<int> Code { get; set; } 

        /// <summary>A list of messages that carry the error details.  There will be a common set of message types for
        /// APIs to use.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("details")]
        public virtual System.Collections.Generic.IList<System.Collections.Generic.IDictionary<string,object>> Details { get; set; } 

        /// <summary>A developer-facing error message, which should be in English. Any user-facing error message should
        /// be localized and sent in the google.rpc.Status.details field, or localized by the client.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("message")]
        public virtual string Message { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents the status of one operation step.</summary>
    public class Step : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The short description of the step.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>The status code.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual string Status { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Define a parameter's name and location. The parameter may be passed as either an HTTP header or a URL
    /// query parameter, and if both are passed the behavior is implementation-dependent.</summary>
    public class SystemParameter : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Define the HTTP header name to use for the parameter. It is case insensitive.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("httpHeader")]
        public virtual string HttpHeader { get; set; } 

        /// <summary>Define the name of the parameter, such as "api_key" . It is case sensitive.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Define the URL query parameter name to use for the parameter. It is case sensitive.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("urlQueryParameter")]
        public virtual string UrlQueryParameter { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Define a system parameter rule mapping system parameter definitions to methods.</summary>
    public class SystemParameterRule : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Define parameters. Multiple names may be defined for a parameter. For a given method call, only one
        /// of them should be used. If multiple names are used the behavior is implementation-dependent. If none of the
        /// specified names are present the behavior is parameter-dependent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parameters")]
        public virtual System.Collections.Generic.IList<SystemParameter> Parameters { get; set; } 

        /// <summary>Selects the methods to which this rule applies. Use '*' to indicate all methods in all APIs.
        ///
        /// Refer to selector for syntax details.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selector")]
        public virtual string Selector { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>### System parameter configuration
    ///
    /// A system parameter is a special kind of parameter defined by the API system, not by an individual API. It is
    /// typically mapped to an HTTP header and/or a URL query parameter. This configuration specifies which methods
    /// change the names of the system parameters.</summary>
    public class SystemParameters : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Define system parameters.
        ///
        /// The parameters defined here will override the default parameters implemented by the system. If this field is
        /// missing from the service config, default system parameters will be used. Default system parameters and names
        /// is implementation-dependent.
        ///
        /// Example: define api key for all methods
        ///
        /// system_parameters rules: - selector: "*" parameters: - name: api_key url_query_parameter: api_key
        ///
        /// Example: define 2 api key names for a specific method.
        ///
        /// system_parameters rules: - selector: "/ListShelves" parameters: - name: api_key http_header: Api-Key1 -
        /// name: api_key http_header: Api-Key2
        ///
        /// **NOTE:** All service configuration rules follow "last one wins" order.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rules")]
        public virtual System.Collections.Generic.IList<SystemParameterRule> Rules { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A protocol buffer message type.</summary>
    public class Type : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The list of fields.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fields")]
        public virtual System.Collections.Generic.IList<Field> Fields { get; set; } 

        /// <summary>The fully qualified message name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The list of types appearing in `oneof` definitions in this type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("oneofs")]
        public virtual System.Collections.Generic.IList<string> Oneofs { get; set; } 

        /// <summary>The protocol buffer options.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("options")]
        public virtual System.Collections.Generic.IList<Option> Options { get; set; } 

        /// <summary>The source context.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sourceContext")]
        public virtual SourceContext SourceContext { get; set; } 

        /// <summary>The source syntax.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("syntax")]
        public virtual string Syntax { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Configuration controlling usage of a service.</summary>
    public class Usage : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The full resource name of a channel used for sending notifications to the service producer.
        ///
        /// Google Service Management currently only supports [Google Cloud Pub/Sub](https://cloud.google.com/pubsub) as
        /// a notification channel. To use Google Cloud Pub/Sub as the channel, this must be the name of a Cloud Pub/Sub
        /// topic that uses the Cloud Pub/Sub topic name format documented in
        /// https://cloud.google.com/pubsub/docs/overview.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("producerNotificationChannel")]
        public virtual string ProducerNotificationChannel { get; set; } 

        /// <summary>Requirements that must be satisfied before a consumer project can use the service. Each requirement
        /// is of the form /; for example 'serviceusage.googleapis.com/billing-enabled'.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("requirements")]
        public virtual System.Collections.Generic.IList<string> Requirements { get; set; } 

        /// <summary>A list of usage rules that apply to individual API methods.
        ///
        /// **NOTE:** All service configuration rules follow "last one wins" order.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rules")]
        public virtual System.Collections.Generic.IList<UsageRule> Rules { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Usage configuration rules for the service.
    ///
    /// NOTE: Under development.
    ///
    /// Use this rule to configure unregistered calls for the service. Unregistered calls are calls that do not contain
    /// consumer project identity. (Example: calls that do not contain an API key). By default, API methods do not allow
    /// unregistered calls, and each method call must be identified by a consumer project identity. Use this rule to
    /// allow/disallow unregistered calls.
    ///
    /// Example of an API that wants to allow unregistered calls for entire service.
    ///
    /// usage: rules: - selector: "*" allow_unregistered_calls: true
    ///
    /// Example of a method that wants to allow unregistered calls.
    ///
    /// usage: rules: - selector: "google.example.library.v1.LibraryService.CreateBook" allow_unregistered_calls:
    /// true</summary>
    public class UsageRule : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>True, if the method allows unregistered calls; false otherwise.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("allowUnregisteredCalls")]
        public virtual System.Nullable<bool> AllowUnregisteredCalls { get; set; } 

        /// <summary>Selects the methods to which this rule applies. Use '*' to indicate all methods in all APIs.
        ///
        /// Refer to selector for syntax details.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selector")]
        public virtual string Selector { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>`Visibility` defines restrictions for the visibility of service elements.  Restrictions are specified
    /// using visibility labels (e.g., TRUSTED_TESTER) that are elsewhere linked to users and projects.
    ///
    /// Users and projects can have access to more than one visibility label. The effective visibility for multiple
    /// labels is the union of each label's elements, plus any unrestricted elements.
    ///
    /// If an element and its parents have no restrictions, visibility is unconditionally granted.
    ///
    /// Example:
    ///
    /// visibility: rules: - selector: google.calendar.Calendar.EnhancedSearch restriction: TRUSTED_TESTER - selector:
    /// google.calendar.Calendar.Delegate restriction: GOOGLE_INTERNAL
    ///
    /// Here, all methods are publicly visible except for the restricted methods EnhancedSearch and Delegate.</summary>
    public class Visibility : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A list of visibility rules that apply to individual API elements.
        ///
        /// **NOTE:** All service configuration rules follow "last one wins" order.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rules")]
        public virtual System.Collections.Generic.IList<VisibilityRule> Rules { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A visibility rule provides visibility configuration for an individual API element.</summary>
    public class VisibilityRule : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A comma-separated list of visibility labels that apply to the `selector`. Any of the listed labels
        /// can be used to grant the visibility.
        ///
        /// If a rule has multiple labels, removing one of the labels but not all of them can break clients.
        ///
        /// Example:
        ///
        /// visibility: rules: - selector: google.calendar.Calendar.EnhancedSearch restriction: GOOGLE_INTERNAL,
        /// TRUSTED_TESTER
        ///
        /// Removing GOOGLE_INTERNAL from this restriction will break clients that rely on this method and only had
        /// access to it through GOOGLE_INTERNAL.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("restriction")]
        public virtual string Restriction { get; set; } 

        /// <summary>Selects methods, messages, fields, enums, etc. to which this rule applies.
        ///
        /// Refer to selector for syntax details.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selector")]
        public virtual string Selector { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }
}
