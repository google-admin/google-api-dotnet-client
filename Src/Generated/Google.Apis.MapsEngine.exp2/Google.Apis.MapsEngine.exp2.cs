// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by google-apis-code-generator 1.5.1
//     C# generator version: 1.10.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

/**
 * \brief
 *   Google Maps Engine API Version exp2
 *
 * \section ApiInfo API Version Information
 *    <table>
 *      <tr><th>API
 *          <td><a href='https://developers.google.com/maps-engine/'>Google Maps Engine API</a>
 *      <tr><th>API Version<td>exp2
 *      <tr><th>API Rev<td>20151202 (335)
 *      <tr><th>API Docs
 *          <td><a href='https://developers.google.com/maps-engine/'>
 *              https://developers.google.com/maps-engine/</a>
 *      <tr><th>Discovery Name<td>mapsengine
 *    </table>
 *
 * \section ForMoreInfo For More Information
 *
 * The complete API documentation for using Google Maps Engine API can be found at
 * <a href='https://developers.google.com/maps-engine/'>https://developers.google.com/maps-engine/</a>.
 *
 * For more information about the Google APIs Client Library for .NET, see
 * <a href='https://developers.google.com/api-client-library/dotnet/get_started'>
 * https://developers.google.com/api-client-library/dotnet/get_started</a>
 */

namespace Google.Apis.MapsEngine.exp2
{
    /// <summary>The MapsEngine Service.</summary>
    public class MapsEngineService : Google.Apis.Services.BaseClientService
    {
        /// <summary>The API version.</summary>
        public const string Version = "exp2";

        /// <summary>The discovery version used to generate this service.</summary>
        public static Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed =
            Google.Apis.Discovery.DiscoveryVersion.Version_1_0;

        /// <summary>Constructs a new service.</summary>
        public MapsEngineService() :
            this(new Google.Apis.Services.BaseClientService.Initializer()) {}

        /// <summary>Constructs a new service.</summary>
        /// <param name="initializer">The service initializer.</param>
        public MapsEngineService(Google.Apis.Services.BaseClientService.Initializer initializer)
            : base(initializer)
        {
            assets = new AssetsResource(this);
            layers = new LayersResource(this);
            maps = new MapsResource(this);
            projects = new ProjectsResource(this);
            rasterCollections = new RasterCollectionsResource(this);
            rasters = new RastersResource(this);
            tables = new TablesResource(this);
        }

        /// <summary>Gets the service supported features.</summary>
        public override System.Collections.Generic.IList<string> Features
        {
            get { return new string[0]; }
        }

        /// <summary>Gets the service name.</summary>
        public override string Name
        {
            get { return "mapsengine"; }
        }

        /// <summary>Gets the service base URI.</summary>
        public override string BaseUri
        {
            get { return "https://www.googleapis.com/mapsengine/exp2/"; }
        }

        /// <summary>Gets the service base path.</summary>
        public override string BasePath
        {
            get { return "mapsengine/exp2/"; }
        }

        /// <summary>Available OAuth 2.0 scopes for use with the Google Maps Engine API.</summary>
        public class Scope
        {
            /// <summary>View and manage your Google My Maps data</summary>
            public static string Mapsengine = "https://www.googleapis.com/auth/mapsengine";

            /// <summary>View your Google My Maps data</summary>
            public static string MapsengineReadonly = "https://www.googleapis.com/auth/mapsengine.readonly";

        }



        private readonly AssetsResource assets;

        /// <summary>Gets the Assets resource.</summary>
        public virtual AssetsResource Assets
        {
            get { return assets; }
        }

        private readonly LayersResource layers;

        /// <summary>Gets the Layers resource.</summary>
        public virtual LayersResource Layers
        {
            get { return layers; }
        }

        private readonly MapsResource maps;

        /// <summary>Gets the Maps resource.</summary>
        public virtual MapsResource Maps
        {
            get { return maps; }
        }

        private readonly ProjectsResource projects;

        /// <summary>Gets the Projects resource.</summary>
        public virtual ProjectsResource Projects
        {
            get { return projects; }
        }

        private readonly RasterCollectionsResource rasterCollections;

        /// <summary>Gets the RasterCollections resource.</summary>
        public virtual RasterCollectionsResource RasterCollections
        {
            get { return rasterCollections; }
        }

        private readonly RastersResource rasters;

        /// <summary>Gets the Rasters resource.</summary>
        public virtual RastersResource Rasters
        {
            get { return rasters; }
        }

        private readonly TablesResource tables;

        /// <summary>Gets the Tables resource.</summary>
        public virtual TablesResource Tables
        {
            get { return tables; }
        }
    }

    ///<summary>A base abstract class for MapsEngine requests.</summary>
    public abstract class MapsEngineBaseServiceRequest<TResponse> : Google.Apis.Requests.ClientServiceRequest<TResponse>
    {
        ///<summary>Constructs a new MapsEngineBaseServiceRequest instance.</summary>
        protected MapsEngineBaseServiceRequest(Google.Apis.Services.IClientService service)
            : base(service)
        {
        }

        /// <summary>Data format for the response.</summary>
        /// [default: json]
        [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<AltEnum> Alt { get; set; }

        /// <summary>Data format for the response.</summary>
        public enum AltEnum
        {
            /// <summary>Responses with Content-Type of application/json</summary>
            [Google.Apis.Util.StringValueAttribute("json")]
            Json,
        }

        /// <summary>Selector specifying which fields to include in a partial response.</summary>
        [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Fields { get; set; }

        /// <summary>API key. Your API key identifies your project and provides you with API access, quota, and reports.
        /// Required unless you provide an OAuth 2.0 token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("key", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Key { get; set; }

        /// <summary>OAuth 2.0 token for the current user.</summary>
        [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string OauthToken { get; set; }

        /// <summary>Returns response with indentations and line breaks.</summary>
        /// [default: true]
        [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<bool> PrettyPrint { get; set; }

        /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string
        /// assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.</summary>
        [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string QuotaUser { get; set; }

        /// <summary>IP address of the site where the request originates. Use this if you want to enforce per-user
        /// limits.</summary>
        [Google.Apis.Util.RequestParameterAttribute("userIp", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UserIp { get; set; }

        /// <summary>Initializes MapsEngine parameter list.</summary>
        protected override void InitParameters()
        {
            base.InitParameters();

            RequestParameters.Add(
                "alt", new Google.Apis.Discovery.Parameter
                {
                    Name = "alt",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "json",
                    Pattern = null,
                });
            RequestParameters.Add(
                "fields", new Google.Apis.Discovery.Parameter
                {
                    Name = "fields",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "key", new Google.Apis.Discovery.Parameter
                {
                    Name = "key",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "oauth_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "oauth_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "prettyPrint", new Google.Apis.Discovery.Parameter
                {
                    Name = "prettyPrint",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "true",
                    Pattern = null,
                });
            RequestParameters.Add(
                "quotaUser", new Google.Apis.Discovery.Parameter
                {
                    Name = "quotaUser",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "userIp", new Google.Apis.Discovery.Parameter
                {
                    Name = "userIp",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
        }
    }

    /// <summary>The "assets" collection of methods.</summary>
    public class AssetsResource
    {
        private const string Resource = "assets";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public AssetsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
            parents = new ParentsResource(service);
            permissions = new PermissionsResource(service);

        }

        private readonly ParentsResource parents;

        /// <summary>Gets the Parents resource.</summary>
        public virtual ParentsResource Parents
        {
            get { return parents; }
        }

        /// <summary>The "parents" collection of methods.</summary>
        public class ParentsResource
        {
            private const string Resource = "parents";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public ParentsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Return all parent ids of the specified asset.</summary>
            /// <param name="id">The ID of the asset whose parents will be listed.</param>
            public virtual ListRequest List(string id)
            {
                return new ListRequest(service, id);
            }

            /// <summary>Return all parent ids of the specified asset.</summary>
            public class ListRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.ParentsListResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, string id)
                    : base(service)
                {
                    Id = id;
                    InitParameters();
                }


                /// <summary>The ID of the asset whose parents will be listed.</summary>
                [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Id { get; private set; }

                /// <summary>The maximum number of items to include in a single response page. The maximum supported
                /// value is 50.</summary>
                [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<long> MaxResults { get; set; }

                /// <summary>The continuation token, used to page through large result sets. To get the next page of
                /// results, set this parameter to the value of nextPageToken from the previous response.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string PageToken { get; set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "assets/{id}/parents"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "id", new Google.Apis.Discovery.Parameter
                        {
                            Name = "id",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "maxResults", new Google.Apis.Discovery.Parameter
                        {
                            Name = "maxResults",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }
        }
        private readonly PermissionsResource permissions;

        /// <summary>Gets the Permissions resource.</summary>
        public virtual PermissionsResource Permissions
        {
            get { return permissions; }
        }

        /// <summary>The "permissions" collection of methods.</summary>
        public class PermissionsResource
        {
            private const string Resource = "permissions";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public PermissionsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Return all of the permissions for the specified asset.</summary>
            /// <param name="id">The ID of the asset whose permissions will be listed.</param>
            public virtual ListRequest List(string id)
            {
                return new ListRequest(service, id);
            }

            /// <summary>Return all of the permissions for the specified asset.</summary>
            public class ListRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.PermissionsListResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, string id)
                    : base(service)
                {
                    Id = id;
                    InitParameters();
                }


                /// <summary>The ID of the asset whose permissions will be listed.</summary>
                [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Id { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "assets/{id}/permissions"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "id", new Google.Apis.Discovery.Parameter
                        {
                            Name = "id",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }
        }

        /// <summary>Return metadata for a particular asset.</summary>
        /// <param name="id">The ID of the asset.</param>
        public virtual GetRequest Get(string id)
        {
            return new GetRequest(service, id);
        }

        /// <summary>Return metadata for a particular asset.</summary>
        public class GetRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.Asset>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string id)
                : base(service)
            {
                Id = id;
                InitParameters();
            }


            /// <summary>The ID of the asset.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "assets/{id}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Return all assets readable by the current user.</summary>
        public virtual ListRequest List()
        {
            return new ListRequest(service);
        }

        /// <summary>Return all assets readable by the current user.</summary>
        public class ListRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.AssetsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service)
                : base(service)
            {
                InitParameters();
            }


            /// <summary>A bounding box, expressed as "west,south,east,north". If set, only assets which intersect this
            /// bounding box will be returned.</summary>
            [Google.Apis.Util.RequestParameterAttribute("bbox", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Bbox { get; set; }

            /// <summary>An RFC 3339 formatted date-time value (e.g. 1970-01-01T00:00:00Z). Returned assets will have
            /// been created at or after this time.</summary>
            [Google.Apis.Util.RequestParameterAttribute("createdAfter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<System.DateTime> CreatedAfter { get; set; }

            /// <summary>An RFC 3339 formatted date-time value (e.g. 1970-01-01T00:00:00Z). Returned assets will have
            /// been created at or before this time.</summary>
            [Google.Apis.Util.RequestParameterAttribute("createdBefore", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<System.DateTime> CreatedBefore { get; set; }

            /// <summary>An email address representing a user. Returned assets that have been created by the user
            /// associated with the provided email address.</summary>
            [Google.Apis.Util.RequestParameterAttribute("creatorEmail", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string CreatorEmail { get; set; }

            /// <summary>The maximum number of items to include in a single response page. The maximum supported value
            /// is 100.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>An RFC 3339 formatted date-time value (e.g. 1970-01-01T00:00:00Z). Returned assets will have
            /// been modified at or after this time.</summary>
            [Google.Apis.Util.RequestParameterAttribute("modifiedAfter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<System.DateTime> ModifiedAfter { get; set; }

            /// <summary>An RFC 3339 formatted date-time value (e.g. 1970-01-01T00:00:00Z). Returned assets will have
            /// been modified at or before this time.</summary>
            [Google.Apis.Util.RequestParameterAttribute("modifiedBefore", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<System.DateTime> ModifiedBefore { get; set; }

            /// <summary>The continuation token, used to page through large result sets. To get the next page of
            /// results, set this parameter to the value of nextPageToken from the previous response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>The ID of a Maps Engine project, used to filter the response. To list all available projects
            /// with their IDs, send a Projects: list request. You can also find your project ID as the value of the
            /// DashboardPlace:cid URL parameter when signed in to mapsengine.google.com.</summary>
            [Google.Apis.Util.RequestParameterAttribute("projectId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ProjectId { get; set; }

            /// <summary>The role parameter indicates that the response should only contain assets where the current
            /// user has the specified level of access.</summary>
            [Google.Apis.Util.RequestParameterAttribute("role", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<RoleEnum> Role { get; set; }

            /// <summary>The role parameter indicates that the response should only contain assets where the current
            /// user has the specified level of access.</summary>
            public enum RoleEnum
            {
                /// <summary>The user can read, write and administer the asset.</summary>
                [Google.Apis.Util.StringValueAttribute("owner")]
                Owner,
                /// <summary>The user can read the asset.</summary>
                [Google.Apis.Util.StringValueAttribute("reader")]
                Reader,
                /// <summary>The user can read and write the asset.</summary>
                [Google.Apis.Util.StringValueAttribute("writer")]
                Writer,
            }

            /// <summary>An unstructured search string used to filter the set of results based on asset
            /// metadata.</summary>
            [Google.Apis.Util.RequestParameterAttribute("search", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Search { get; set; }

            /// <summary>A comma separated list of tags. Returned assets will contain all the tags from the
            /// list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("tags", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Tags { get; set; }

            /// <summary>A comma separated list of asset types. Returned assets will have one of the types from the
            /// provided list. Supported values are 'map', 'layer', 'rasterCollection' and 'table'.</summary>
            [Google.Apis.Util.RequestParameterAttribute("type", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Type { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "assets"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "bbox", new Google.Apis.Discovery.Parameter
                    {
                        Name = "bbox",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "createdAfter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "createdAfter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "createdBefore", new Google.Apis.Discovery.Parameter
                    {
                        Name = "createdBefore",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "creatorEmail", new Google.Apis.Discovery.Parameter
                    {
                        Name = "creatorEmail",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "modifiedAfter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "modifiedAfter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "modifiedBefore", new Google.Apis.Discovery.Parameter
                    {
                        Name = "modifiedBefore",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "projectId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "projectId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "role", new Google.Apis.Discovery.Parameter
                    {
                        Name = "role",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "search", new Google.Apis.Discovery.Parameter
                    {
                        Name = "search",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "tags", new Google.Apis.Discovery.Parameter
                    {
                        Name = "tags",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "type", new Google.Apis.Discovery.Parameter
                    {
                        Name = "type",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "layers" collection of methods.</summary>
    public class LayersResource
    {
        private const string Resource = "layers";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public LayersResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
            parents = new ParentsResource(service);
            permissions = new PermissionsResource(service);

        }

        private readonly ParentsResource parents;

        /// <summary>Gets the Parents resource.</summary>
        public virtual ParentsResource Parents
        {
            get { return parents; }
        }

        /// <summary>The "parents" collection of methods.</summary>
        public class ParentsResource
        {
            private const string Resource = "parents";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public ParentsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Return all parent ids of the specified layer.</summary>
            /// <param name="id">The ID of the layer whose parents will be listed.</param>
            public virtual ListRequest List(string id)
            {
                return new ListRequest(service, id);
            }

            /// <summary>Return all parent ids of the specified layer.</summary>
            public class ListRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.ParentsListResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, string id)
                    : base(service)
                {
                    Id = id;
                    InitParameters();
                }


                /// <summary>The ID of the layer whose parents will be listed.</summary>
                [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Id { get; private set; }

                /// <summary>The maximum number of items to include in a single response page. The maximum supported
                /// value is 50.</summary>
                [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<long> MaxResults { get; set; }

                /// <summary>The continuation token, used to page through large result sets. To get the next page of
                /// results, set this parameter to the value of nextPageToken from the previous response.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string PageToken { get; set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "layers/{id}/parents"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "id", new Google.Apis.Discovery.Parameter
                        {
                            Name = "id",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "maxResults", new Google.Apis.Discovery.Parameter
                        {
                            Name = "maxResults",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }
        }
        private readonly PermissionsResource permissions;

        /// <summary>Gets the Permissions resource.</summary>
        public virtual PermissionsResource Permissions
        {
            get { return permissions; }
        }

        /// <summary>The "permissions" collection of methods.</summary>
        public class PermissionsResource
        {
            private const string Resource = "permissions";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public PermissionsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Remove permission entries from an already existing asset.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="id">The ID of the asset from which permissions will be removed.</param>
            public virtual BatchDeleteRequest BatchDelete(Google.Apis.MapsEngine.exp2.Data.PermissionsBatchDeleteRequest body, string id)
            {
                return new BatchDeleteRequest(service, body, id);
            }

            /// <summary>Remove permission entries from an already existing asset.</summary>
            public class BatchDeleteRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.PermissionsBatchDeleteResponse>
            {
                /// <summary>Constructs a new BatchDelete request.</summary>
                public BatchDeleteRequest(Google.Apis.Services.IClientService service, Google.Apis.MapsEngine.exp2.Data.PermissionsBatchDeleteRequest body, string id)
                    : base(service)
                {
                    Id = id;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The ID of the asset from which permissions will be removed.</summary>
                [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Id { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.MapsEngine.exp2.Data.PermissionsBatchDeleteRequest Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "batchDelete"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "layers/{id}/permissions/batchDelete"; }
                }

                /// <summary>Initializes BatchDelete parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "id", new Google.Apis.Discovery.Parameter
                        {
                            Name = "id",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>Add or update permission entries to an already existing asset.
            ///
            /// An asset can hold up to 20 different permission entries. Each batchInsert request is atomic.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="id">The ID of the asset to which permissions will be added.</param>
            public virtual BatchUpdateRequest BatchUpdate(Google.Apis.MapsEngine.exp2.Data.PermissionsBatchUpdateRequest body, string id)
            {
                return new BatchUpdateRequest(service, body, id);
            }

            /// <summary>Add or update permission entries to an already existing asset.
            ///
            /// An asset can hold up to 20 different permission entries. Each batchInsert request is atomic.</summary>
            public class BatchUpdateRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.PermissionsBatchUpdateResponse>
            {
                /// <summary>Constructs a new BatchUpdate request.</summary>
                public BatchUpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.MapsEngine.exp2.Data.PermissionsBatchUpdateRequest body, string id)
                    : base(service)
                {
                    Id = id;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The ID of the asset to which permissions will be added.</summary>
                [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Id { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.MapsEngine.exp2.Data.PermissionsBatchUpdateRequest Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "batchUpdate"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "layers/{id}/permissions/batchUpdate"; }
                }

                /// <summary>Initializes BatchUpdate parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "id", new Google.Apis.Discovery.Parameter
                        {
                            Name = "id",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>Return all of the permissions for the specified asset.</summary>
            /// <param name="id">The ID of the asset whose permissions will be listed.</param>
            public virtual ListRequest List(string id)
            {
                return new ListRequest(service, id);
            }

            /// <summary>Return all of the permissions for the specified asset.</summary>
            public class ListRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.PermissionsListResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, string id)
                    : base(service)
                {
                    Id = id;
                    InitParameters();
                }


                /// <summary>The ID of the asset whose permissions will be listed.</summary>
                [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Id { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "layers/{id}/permissions"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "id", new Google.Apis.Discovery.Parameter
                        {
                            Name = "id",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }
        }

        /// <summary>Cancel processing on a layer asset.</summary>
        /// <param name="id">The ID of the layer.</param>
        public virtual CancelProcessingRequest CancelProcessing(string id)
        {
            return new CancelProcessingRequest(service, id);
        }

        /// <summary>Cancel processing on a layer asset.</summary>
        public class CancelProcessingRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.ProcessResponse>
        {
            /// <summary>Constructs a new CancelProcessing request.</summary>
            public CancelProcessingRequest(Google.Apis.Services.IClientService service, string id)
                : base(service)
            {
                Id = id;
                InitParameters();
            }


            /// <summary>The ID of the layer.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "cancelProcessing"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "layers/{id}/cancelProcessing"; }
            }

            /// <summary>Initializes CancelProcessing parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Create a layer asset.</summary>
        /// <param name="body">The body of the request.</param>
        public virtual CreateRequest Create(Google.Apis.MapsEngine.exp2.Data.Layer body)
        {
            return new CreateRequest(service, body);
        }

        /// <summary>Create a layer asset.</summary>
        public class CreateRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.Layer>
        {
            /// <summary>Constructs a new Create request.</summary>
            public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.MapsEngine.exp2.Data.Layer body)
                : base(service)
            {
                Body = body;
                InitParameters();
            }


            /// <summary>Whether to queue the created layer for processing.</summary>
            [Google.Apis.Util.RequestParameterAttribute("process", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> Process { get; set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.MapsEngine.exp2.Data.Layer Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "create"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "layers"; }
            }

            /// <summary>Initializes Create parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "process", new Google.Apis.Discovery.Parameter
                    {
                        Name = "process",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Delete a layer.</summary>
        /// <param name="id">The ID of the layer. Only the layer creator or project owner are permitted to delete. If the layer
        /// is published, or included in a map, the request will fail. Unpublish the layer, and remove it from all maps prior to
        /// deleting.</param>
        public virtual DeleteRequest Delete(string id)
        {
            return new DeleteRequest(service, id);
        }

        /// <summary>Delete a layer.</summary>
        public class DeleteRequest : MapsEngineBaseServiceRequest<string>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string id)
                : base(service)
            {
                Id = id;
                InitParameters();
            }


            /// <summary>The ID of the layer. Only the layer creator or project owner are permitted to delete. If the
            /// layer is published, or included in a map, the request will fail. Unpublish the layer, and remove it from
            /// all maps prior to deleting.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "layers/{id}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Return metadata for a particular layer.</summary>
        /// <param name="id">The ID of the layer.</param>
        public virtual GetRequest Get(string id)
        {
            return new GetRequest(service, id);
        }

        /// <summary>Return metadata for a particular layer.</summary>
        public class GetRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.Layer>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string id)
                : base(service)
            {
                Id = id;
                InitParameters();
            }


            /// <summary>The ID of the layer.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Id { get; private set; }

            /// <summary>Deprecated: The version parameter indicates which version of the layer should be returned. When
            /// version is set to published, the published version of the layer will be returned. Please use the
            /// layers.getPublished endpoint instead.</summary>
            [Google.Apis.Util.RequestParameterAttribute("version", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<VersionEnum> Version { get; set; }

            /// <summary>Deprecated: The version parameter indicates which version of the layer should be returned. When
            /// version is set to published, the published version of the layer will be returned. Please use the
            /// layers.getPublished endpoint instead.</summary>
            public enum VersionEnum
            {
                /// <summary>The draft version.</summary>
                [Google.Apis.Util.StringValueAttribute("draft")]
                Draft,
                /// <summary>The published version.</summary>
                [Google.Apis.Util.StringValueAttribute("published")]
                Published,
            }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "layers/{id}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "version", new Google.Apis.Discovery.Parameter
                    {
                        Name = "version",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Return the published metadata for a particular layer.</summary>
        /// <param name="id">The ID of the layer.</param>
        public virtual GetPublishedRequest GetPublished(string id)
        {
            return new GetPublishedRequest(service, id);
        }

        /// <summary>Return the published metadata for a particular layer.</summary>
        public class GetPublishedRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.PublishedLayer>
        {
            /// <summary>Constructs a new GetPublished request.</summary>
            public GetPublishedRequest(Google.Apis.Services.IClientService service, string id)
                : base(service)
            {
                Id = id;
                InitParameters();
            }


            /// <summary>The ID of the layer.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "getPublished"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "layers/{id}/published"; }
            }

            /// <summary>Initializes GetPublished parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Return all layers readable by the current user.</summary>
        public virtual ListRequest List()
        {
            return new ListRequest(service);
        }

        /// <summary>Return all layers readable by the current user.</summary>
        public class ListRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.LayersListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service)
                : base(service)
            {
                InitParameters();
            }


            /// <summary>A bounding box, expressed as "west,south,east,north". If set, only assets which intersect this
            /// bounding box will be returned.</summary>
            [Google.Apis.Util.RequestParameterAttribute("bbox", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Bbox { get; set; }

            /// <summary>An RFC 3339 formatted date-time value (e.g. 1970-01-01T00:00:00Z). Returned assets will have
            /// been created at or after this time.</summary>
            [Google.Apis.Util.RequestParameterAttribute("createdAfter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<System.DateTime> CreatedAfter { get; set; }

            /// <summary>An RFC 3339 formatted date-time value (e.g. 1970-01-01T00:00:00Z). Returned assets will have
            /// been created at or before this time.</summary>
            [Google.Apis.Util.RequestParameterAttribute("createdBefore", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<System.DateTime> CreatedBefore { get; set; }

            /// <summary>An email address representing a user. Returned assets that have been created by the user
            /// associated with the provided email address.</summary>
            [Google.Apis.Util.RequestParameterAttribute("creatorEmail", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string CreatorEmail { get; set; }

            /// <summary>The maximum number of items to include in a single response page. The maximum supported value
            /// is 100.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>An RFC 3339 formatted date-time value (e.g. 1970-01-01T00:00:00Z). Returned assets will have
            /// been modified at or after this time.</summary>
            [Google.Apis.Util.RequestParameterAttribute("modifiedAfter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<System.DateTime> ModifiedAfter { get; set; }

            /// <summary>An RFC 3339 formatted date-time value (e.g. 1970-01-01T00:00:00Z). Returned assets will have
            /// been modified at or before this time.</summary>
            [Google.Apis.Util.RequestParameterAttribute("modifiedBefore", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<System.DateTime> ModifiedBefore { get; set; }

            /// <summary>The continuation token, used to page through large result sets. To get the next page of
            /// results, set this parameter to the value of nextPageToken from the previous response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            [Google.Apis.Util.RequestParameterAttribute("processingStatus", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<ProcessingStatusEnum> ProcessingStatus { get; set; }


            public enum ProcessingStatusEnum
            {
                /// <summary>The layer has completed processing.</summary>
                [Google.Apis.Util.StringValueAttribute("complete")]
                Complete,
                /// <summary>The layer has failed processing.</summary>
                [Google.Apis.Util.StringValueAttribute("failed")]
                Failed,
                /// <summary>The layer is not ready for processing.</summary>
                [Google.Apis.Util.StringValueAttribute("notReady")]
                NotReady,
                /// <summary>The layer is processing.</summary>
                [Google.Apis.Util.StringValueAttribute("processing")]
                Processing,
                /// <summary>The layer is ready for processing.</summary>
                [Google.Apis.Util.StringValueAttribute("ready")]
                Ready,
            }

            /// <summary>The ID of a Maps Engine project, used to filter the response. To list all available projects
            /// with their IDs, send a Projects: list request. You can also find your project ID as the value of the
            /// DashboardPlace:cid URL parameter when signed in to mapsengine.google.com.</summary>
            [Google.Apis.Util.RequestParameterAttribute("projectId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ProjectId { get; set; }

            /// <summary>The role parameter indicates that the response should only contain assets where the current
            /// user has the specified level of access.</summary>
            [Google.Apis.Util.RequestParameterAttribute("role", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<RoleEnum> Role { get; set; }

            /// <summary>The role parameter indicates that the response should only contain assets where the current
            /// user has the specified level of access.</summary>
            public enum RoleEnum
            {
                /// <summary>The user can read, write and administer the asset.</summary>
                [Google.Apis.Util.StringValueAttribute("owner")]
                Owner,
                /// <summary>The user can read the asset.</summary>
                [Google.Apis.Util.StringValueAttribute("reader")]
                Reader,
                /// <summary>The user can read and write the asset.</summary>
                [Google.Apis.Util.StringValueAttribute("writer")]
                Writer,
            }

            /// <summary>An unstructured search string used to filter the set of results based on asset
            /// metadata.</summary>
            [Google.Apis.Util.RequestParameterAttribute("search", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Search { get; set; }

            /// <summary>A comma separated list of tags. Returned assets will contain all the tags from the
            /// list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("tags", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Tags { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "layers"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "bbox", new Google.Apis.Discovery.Parameter
                    {
                        Name = "bbox",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "createdAfter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "createdAfter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "createdBefore", new Google.Apis.Discovery.Parameter
                    {
                        Name = "createdBefore",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "creatorEmail", new Google.Apis.Discovery.Parameter
                    {
                        Name = "creatorEmail",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "modifiedAfter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "modifiedAfter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "modifiedBefore", new Google.Apis.Discovery.Parameter
                    {
                        Name = "modifiedBefore",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "processingStatus", new Google.Apis.Discovery.Parameter
                    {
                        Name = "processingStatus",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "projectId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "projectId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "role", new Google.Apis.Discovery.Parameter
                    {
                        Name = "role",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "search", new Google.Apis.Discovery.Parameter
                    {
                        Name = "search",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "tags", new Google.Apis.Discovery.Parameter
                    {
                        Name = "tags",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Return all published layers readable by the current user.</summary>
        public virtual ListPublishedRequest ListPublished()
        {
            return new ListPublishedRequest(service);
        }

        /// <summary>Return all published layers readable by the current user.</summary>
        public class ListPublishedRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.PublishedLayersListResponse>
        {
            /// <summary>Constructs a new ListPublished request.</summary>
            public ListPublishedRequest(Google.Apis.Services.IClientService service)
                : base(service)
            {
                InitParameters();
            }


            /// <summary>The maximum number of items to include in a single response page. The maximum supported value
            /// is 100.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>The continuation token, used to page through large result sets. To get the next page of
            /// results, set this parameter to the value of nextPageToken from the previous response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>The ID of a Maps Engine project, used to filter the response. To list all available projects
            /// with their IDs, send a Projects: list request. You can also find your project ID as the value of the
            /// DashboardPlace:cid URL parameter when signed in to mapsengine.google.com.</summary>
            [Google.Apis.Util.RequestParameterAttribute("projectId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ProjectId { get; set; }

            /// <summary>An unstructured search string used to filter the set of results based on asset
            /// metadata.</summary>
            [Google.Apis.Util.RequestParameterAttribute("search", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Search { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "listPublished"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "layers/published"; }
            }

            /// <summary>Initializes ListPublished parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "projectId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "projectId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "search", new Google.Apis.Discovery.Parameter
                    {
                        Name = "search",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Mutate a layer asset.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="id">The ID of the layer.</param>
        public virtual PatchRequest Patch(Google.Apis.MapsEngine.exp2.Data.Layer body, string id)
        {
            return new PatchRequest(service, body, id);
        }

        /// <summary>Mutate a layer asset.</summary>
        public class PatchRequest : MapsEngineBaseServiceRequest<string>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.MapsEngine.exp2.Data.Layer body, string id)
                : base(service)
            {
                Id = id;
                Body = body;
                InitParameters();
            }


            /// <summary>The ID of the layer.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Id { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.MapsEngine.exp2.Data.Layer Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "layers/{id}"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Process a layer asset.</summary>
        /// <param name="id">The ID of the layer.</param>
        public virtual ProcessRequest Process(string id)
        {
            return new ProcessRequest(service, id);
        }

        /// <summary>Process a layer asset.</summary>
        public class ProcessRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.ProcessResponse>
        {
            /// <summary>Constructs a new Process request.</summary>
            public ProcessRequest(Google.Apis.Services.IClientService service, string id)
                : base(service)
            {
                Id = id;
                InitParameters();
            }


            /// <summary>The ID of the layer.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "process"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "layers/{id}/process"; }
            }

            /// <summary>Initializes Process parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Publish a layer asset.</summary>
        /// <param name="id">The ID of the layer.</param>
        public virtual PublishRequest Publish(string id)
        {
            return new PublishRequest(service, id);
        }

        /// <summary>Publish a layer asset.</summary>
        public class PublishRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.PublishResponse>
        {
            /// <summary>Constructs a new Publish request.</summary>
            public PublishRequest(Google.Apis.Services.IClientService service, string id)
                : base(service)
            {
                Id = id;
                InitParameters();
            }


            /// <summary>The ID of the layer.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Id { get; private set; }

            /// <summary>If set to true, the API will allow publication of the layer even if it's out of date. If not
            /// true, you'll need to reprocess any out-of-date layer before publishing.</summary>
            [Google.Apis.Util.RequestParameterAttribute("force", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> Force { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "publish"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "layers/{id}/publish"; }
            }

            /// <summary>Initializes Publish parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "force", new Google.Apis.Discovery.Parameter
                    {
                        Name = "force",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Unpublish a layer asset.</summary>
        /// <param name="id">The ID of the layer.</param>
        public virtual UnpublishRequest Unpublish(string id)
        {
            return new UnpublishRequest(service, id);
        }

        /// <summary>Unpublish a layer asset.</summary>
        public class UnpublishRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.PublishResponse>
        {
            /// <summary>Constructs a new Unpublish request.</summary>
            public UnpublishRequest(Google.Apis.Services.IClientService service, string id)
                : base(service)
            {
                Id = id;
                InitParameters();
            }


            /// <summary>The ID of the layer.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "unpublish"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "layers/{id}/unpublish"; }
            }

            /// <summary>Initializes Unpublish parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "maps" collection of methods.</summary>
    public class MapsResource
    {
        private const string Resource = "maps";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public MapsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
            permissions = new PermissionsResource(service);

        }

        private readonly PermissionsResource permissions;

        /// <summary>Gets the Permissions resource.</summary>
        public virtual PermissionsResource Permissions
        {
            get { return permissions; }
        }

        /// <summary>The "permissions" collection of methods.</summary>
        public class PermissionsResource
        {
            private const string Resource = "permissions";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public PermissionsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Remove permission entries from an already existing asset.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="id">The ID of the asset from which permissions will be removed.</param>
            public virtual BatchDeleteRequest BatchDelete(Google.Apis.MapsEngine.exp2.Data.PermissionsBatchDeleteRequest body, string id)
            {
                return new BatchDeleteRequest(service, body, id);
            }

            /// <summary>Remove permission entries from an already existing asset.</summary>
            public class BatchDeleteRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.PermissionsBatchDeleteResponse>
            {
                /// <summary>Constructs a new BatchDelete request.</summary>
                public BatchDeleteRequest(Google.Apis.Services.IClientService service, Google.Apis.MapsEngine.exp2.Data.PermissionsBatchDeleteRequest body, string id)
                    : base(service)
                {
                    Id = id;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The ID of the asset from which permissions will be removed.</summary>
                [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Id { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.MapsEngine.exp2.Data.PermissionsBatchDeleteRequest Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "batchDelete"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "maps/{id}/permissions/batchDelete"; }
                }

                /// <summary>Initializes BatchDelete parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "id", new Google.Apis.Discovery.Parameter
                        {
                            Name = "id",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>Add or update permission entries to an already existing asset.
            ///
            /// An asset can hold up to 20 different permission entries. Each batchInsert request is atomic.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="id">The ID of the asset to which permissions will be added.</param>
            public virtual BatchUpdateRequest BatchUpdate(Google.Apis.MapsEngine.exp2.Data.PermissionsBatchUpdateRequest body, string id)
            {
                return new BatchUpdateRequest(service, body, id);
            }

            /// <summary>Add or update permission entries to an already existing asset.
            ///
            /// An asset can hold up to 20 different permission entries. Each batchInsert request is atomic.</summary>
            public class BatchUpdateRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.PermissionsBatchUpdateResponse>
            {
                /// <summary>Constructs a new BatchUpdate request.</summary>
                public BatchUpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.MapsEngine.exp2.Data.PermissionsBatchUpdateRequest body, string id)
                    : base(service)
                {
                    Id = id;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The ID of the asset to which permissions will be added.</summary>
                [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Id { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.MapsEngine.exp2.Data.PermissionsBatchUpdateRequest Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "batchUpdate"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "maps/{id}/permissions/batchUpdate"; }
                }

                /// <summary>Initializes BatchUpdate parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "id", new Google.Apis.Discovery.Parameter
                        {
                            Name = "id",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>Return all of the permissions for the specified asset.</summary>
            /// <param name="id">The ID of the asset whose permissions will be listed.</param>
            public virtual ListRequest List(string id)
            {
                return new ListRequest(service, id);
            }

            /// <summary>Return all of the permissions for the specified asset.</summary>
            public class ListRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.PermissionsListResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, string id)
                    : base(service)
                {
                    Id = id;
                    InitParameters();
                }


                /// <summary>The ID of the asset whose permissions will be listed.</summary>
                [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Id { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "maps/{id}/permissions"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "id", new Google.Apis.Discovery.Parameter
                        {
                            Name = "id",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }
        }

        /// <summary>Create a map asset.</summary>
        /// <param name="body">The body of the request.</param>
        public virtual CreateRequest Create(Google.Apis.MapsEngine.exp2.Data.Map body)
        {
            return new CreateRequest(service, body);
        }

        /// <summary>Create a map asset.</summary>
        public class CreateRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.Map>
        {
            /// <summary>Constructs a new Create request.</summary>
            public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.MapsEngine.exp2.Data.Map body)
                : base(service)
            {
                Body = body;
                InitParameters();
            }



            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.MapsEngine.exp2.Data.Map Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "create"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "maps"; }
            }

            /// <summary>Initializes Create parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

            }

        }

        /// <summary>Delete a map.</summary>
        /// <param name="id">The ID of the map. Only the map creator or project owner are permitted to delete. If the map is
        /// published the request will fail. Unpublish the map prior to deleting.</param>
        public virtual DeleteRequest Delete(string id)
        {
            return new DeleteRequest(service, id);
        }

        /// <summary>Delete a map.</summary>
        public class DeleteRequest : MapsEngineBaseServiceRequest<string>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string id)
                : base(service)
            {
                Id = id;
                InitParameters();
            }


            /// <summary>The ID of the map. Only the map creator or project owner are permitted to delete. If the map is
            /// published the request will fail. Unpublish the map prior to deleting.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "maps/{id}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Return metadata for a particular map.</summary>
        /// <param name="id">The ID of the map.</param>
        public virtual GetRequest Get(string id)
        {
            return new GetRequest(service, id);
        }

        /// <summary>Return metadata for a particular map.</summary>
        public class GetRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.Map>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string id)
                : base(service)
            {
                Id = id;
                InitParameters();
            }


            /// <summary>The ID of the map.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Id { get; private set; }

            /// <summary>Deprecated: The version parameter indicates which version of the map should be returned. When
            /// version is set to published, the published version of the map will be returned. Please use the
            /// maps.getPublished endpoint instead.</summary>
            [Google.Apis.Util.RequestParameterAttribute("version", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<VersionEnum> Version { get; set; }

            /// <summary>Deprecated: The version parameter indicates which version of the map should be returned. When
            /// version is set to published, the published version of the map will be returned. Please use the
            /// maps.getPublished endpoint instead.</summary>
            public enum VersionEnum
            {
                /// <summary>The draft version.</summary>
                [Google.Apis.Util.StringValueAttribute("draft")]
                Draft,
                /// <summary>The published version.</summary>
                [Google.Apis.Util.StringValueAttribute("published")]
                Published,
            }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "maps/{id}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "version", new Google.Apis.Discovery.Parameter
                    {
                        Name = "version",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Return the published metadata for a particular map.</summary>
        /// <param name="id">The ID of the map.</param>
        public virtual GetPublishedRequest GetPublished(string id)
        {
            return new GetPublishedRequest(service, id);
        }

        /// <summary>Return the published metadata for a particular map.</summary>
        public class GetPublishedRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.PublishedMap>
        {
            /// <summary>Constructs a new GetPublished request.</summary>
            public GetPublishedRequest(Google.Apis.Services.IClientService service, string id)
                : base(service)
            {
                Id = id;
                InitParameters();
            }


            /// <summary>The ID of the map.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "getPublished"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "maps/{id}/published"; }
            }

            /// <summary>Initializes GetPublished parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Return all maps readable by the current user.</summary>
        public virtual ListRequest List()
        {
            return new ListRequest(service);
        }

        /// <summary>Return all maps readable by the current user.</summary>
        public class ListRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.MapsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service)
                : base(service)
            {
                InitParameters();
            }


            /// <summary>A bounding box, expressed as "west,south,east,north". If set, only assets which intersect this
            /// bounding box will be returned.</summary>
            [Google.Apis.Util.RequestParameterAttribute("bbox", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Bbox { get; set; }

            /// <summary>An RFC 3339 formatted date-time value (e.g. 1970-01-01T00:00:00Z). Returned assets will have
            /// been created at or after this time.</summary>
            [Google.Apis.Util.RequestParameterAttribute("createdAfter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<System.DateTime> CreatedAfter { get; set; }

            /// <summary>An RFC 3339 formatted date-time value (e.g. 1970-01-01T00:00:00Z). Returned assets will have
            /// been created at or before this time.</summary>
            [Google.Apis.Util.RequestParameterAttribute("createdBefore", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<System.DateTime> CreatedBefore { get; set; }

            /// <summary>An email address representing a user. Returned assets that have been created by the user
            /// associated with the provided email address.</summary>
            [Google.Apis.Util.RequestParameterAttribute("creatorEmail", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string CreatorEmail { get; set; }

            /// <summary>The maximum number of items to include in a single response page. The maximum supported value
            /// is 100.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>An RFC 3339 formatted date-time value (e.g. 1970-01-01T00:00:00Z). Returned assets will have
            /// been modified at or after this time.</summary>
            [Google.Apis.Util.RequestParameterAttribute("modifiedAfter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<System.DateTime> ModifiedAfter { get; set; }

            /// <summary>An RFC 3339 formatted date-time value (e.g. 1970-01-01T00:00:00Z). Returned assets will have
            /// been modified at or before this time.</summary>
            [Google.Apis.Util.RequestParameterAttribute("modifiedBefore", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<System.DateTime> ModifiedBefore { get; set; }

            /// <summary>The continuation token, used to page through large result sets. To get the next page of
            /// results, set this parameter to the value of nextPageToken from the previous response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            [Google.Apis.Util.RequestParameterAttribute("processingStatus", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<ProcessingStatusEnum> ProcessingStatus { get; set; }


            public enum ProcessingStatusEnum
            {
                /// <summary>The map has completed processing.</summary>
                [Google.Apis.Util.StringValueAttribute("complete")]
                Complete,
                /// <summary>The map has failed processing.</summary>
                [Google.Apis.Util.StringValueAttribute("failed")]
                Failed,
                /// <summary>The map is not ready for processing.</summary>
                [Google.Apis.Util.StringValueAttribute("notReady")]
                NotReady,
                /// <summary>The map is processing.</summary>
                [Google.Apis.Util.StringValueAttribute("processing")]
                Processing,
            }

            /// <summary>The ID of a Maps Engine project, used to filter the response. To list all available projects
            /// with their IDs, send a Projects: list request. You can also find your project ID as the value of the
            /// DashboardPlace:cid URL parameter when signed in to mapsengine.google.com.</summary>
            [Google.Apis.Util.RequestParameterAttribute("projectId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ProjectId { get; set; }

            /// <summary>The role parameter indicates that the response should only contain assets where the current
            /// user has the specified level of access.</summary>
            [Google.Apis.Util.RequestParameterAttribute("role", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<RoleEnum> Role { get; set; }

            /// <summary>The role parameter indicates that the response should only contain assets where the current
            /// user has the specified level of access.</summary>
            public enum RoleEnum
            {
                /// <summary>The user can read, write and administer the asset.</summary>
                [Google.Apis.Util.StringValueAttribute("owner")]
                Owner,
                /// <summary>The user can read the asset.</summary>
                [Google.Apis.Util.StringValueAttribute("reader")]
                Reader,
                /// <summary>The user can read and write the asset.</summary>
                [Google.Apis.Util.StringValueAttribute("writer")]
                Writer,
            }

            /// <summary>An unstructured search string used to filter the set of results based on asset
            /// metadata.</summary>
            [Google.Apis.Util.RequestParameterAttribute("search", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Search { get; set; }

            /// <summary>A comma separated list of tags. Returned assets will contain all the tags from the
            /// list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("tags", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Tags { get; set; }

            /// <summary>Deprecated: The version parameter indicates which version of the maps should be returned. When
            /// version is set to published this parameter will filter the result set to include only maps that are
            /// published. Please use the maps.listPublished endpoint instead.</summary>
            [Google.Apis.Util.RequestParameterAttribute("version", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<VersionEnum> Version { get; set; }

            /// <summary>Deprecated: The version parameter indicates which version of the maps should be returned. When
            /// version is set to published this parameter will filter the result set to include only maps that are
            /// published. Please use the maps.listPublished endpoint instead.</summary>
            public enum VersionEnum
            {
                /// <summary>The draft version.</summary>
                [Google.Apis.Util.StringValueAttribute("draft")]
                Draft,
                /// <summary>The published version.</summary>
                [Google.Apis.Util.StringValueAttribute("published")]
                Published,
            }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "maps"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "bbox", new Google.Apis.Discovery.Parameter
                    {
                        Name = "bbox",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "createdAfter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "createdAfter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "createdBefore", new Google.Apis.Discovery.Parameter
                    {
                        Name = "createdBefore",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "creatorEmail", new Google.Apis.Discovery.Parameter
                    {
                        Name = "creatorEmail",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "modifiedAfter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "modifiedAfter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "modifiedBefore", new Google.Apis.Discovery.Parameter
                    {
                        Name = "modifiedBefore",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "processingStatus", new Google.Apis.Discovery.Parameter
                    {
                        Name = "processingStatus",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "projectId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "projectId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "role", new Google.Apis.Discovery.Parameter
                    {
                        Name = "role",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "search", new Google.Apis.Discovery.Parameter
                    {
                        Name = "search",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "tags", new Google.Apis.Discovery.Parameter
                    {
                        Name = "tags",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "version", new Google.Apis.Discovery.Parameter
                    {
                        Name = "version",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Return all published maps readable by the current user.</summary>
        public virtual ListPublishedRequest ListPublished()
        {
            return new ListPublishedRequest(service);
        }

        /// <summary>Return all published maps readable by the current user.</summary>
        public class ListPublishedRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.PublishedMapsListResponse>
        {
            /// <summary>Constructs a new ListPublished request.</summary>
            public ListPublishedRequest(Google.Apis.Services.IClientService service)
                : base(service)
            {
                InitParameters();
            }


            /// <summary>The maximum number of items to include in a single response page. The maximum supported value
            /// is 100.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>The continuation token, used to page through large result sets. To get the next page of
            /// results, set this parameter to the value of nextPageToken from the previous response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>The ID of a Maps Engine project, used to filter the response. To list all available projects
            /// with their IDs, send a Projects: list request. You can also find your project ID as the value of the
            /// DashboardPlace:cid URL parameter when signed in to mapsengine.google.com.</summary>
            [Google.Apis.Util.RequestParameterAttribute("projectId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ProjectId { get; set; }

            /// <summary>An unstructured search string used to filter the set of results based on asset
            /// metadata.</summary>
            [Google.Apis.Util.RequestParameterAttribute("search", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Search { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "listPublished"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "maps/published"; }
            }

            /// <summary>Initializes ListPublished parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "projectId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "projectId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "search", new Google.Apis.Discovery.Parameter
                    {
                        Name = "search",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Mutate a map asset.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="id">The ID of the map.</param>
        public virtual PatchRequest Patch(Google.Apis.MapsEngine.exp2.Data.Map body, string id)
        {
            return new PatchRequest(service, body, id);
        }

        /// <summary>Mutate a map asset.</summary>
        public class PatchRequest : MapsEngineBaseServiceRequest<string>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.MapsEngine.exp2.Data.Map body, string id)
                : base(service)
            {
                Id = id;
                Body = body;
                InitParameters();
            }


            /// <summary>The ID of the map.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Id { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.MapsEngine.exp2.Data.Map Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "maps/{id}"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Publish a map asset.</summary>
        /// <param name="id">The ID of the map.</param>
        public virtual PublishRequest Publish(string id)
        {
            return new PublishRequest(service, id);
        }

        /// <summary>Publish a map asset.</summary>
        public class PublishRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.PublishResponse>
        {
            /// <summary>Constructs a new Publish request.</summary>
            public PublishRequest(Google.Apis.Services.IClientService service, string id)
                : base(service)
            {
                Id = id;
                InitParameters();
            }


            /// <summary>The ID of the map.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Id { get; private set; }

            /// <summary>If set to true, the API will allow publication of the map even if it's out of date. If false,
            /// the map must have a processingStatus of complete before publishing.</summary>
            [Google.Apis.Util.RequestParameterAttribute("force", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> Force { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "publish"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "maps/{id}/publish"; }
            }

            /// <summary>Initializes Publish parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "force", new Google.Apis.Discovery.Parameter
                    {
                        Name = "force",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Unpublish a map asset.</summary>
        /// <param name="id">The ID of the map.</param>
        public virtual UnpublishRequest Unpublish(string id)
        {
            return new UnpublishRequest(service, id);
        }

        /// <summary>Unpublish a map asset.</summary>
        public class UnpublishRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.PublishResponse>
        {
            /// <summary>Constructs a new Unpublish request.</summary>
            public UnpublishRequest(Google.Apis.Services.IClientService service, string id)
                : base(service)
            {
                Id = id;
                InitParameters();
            }


            /// <summary>The ID of the map.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "unpublish"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "maps/{id}/unpublish"; }
            }

            /// <summary>Initializes Unpublish parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "projects" collection of methods.</summary>
    public class ProjectsResource
    {
        private const string Resource = "projects";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public ProjectsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
            icons = new IconsResource(service);

        }

        private readonly IconsResource icons;

        /// <summary>Gets the Icons resource.</summary>
        public virtual IconsResource Icons
        {
            get { return icons; }
        }

        /// <summary>The "icons" collection of methods.</summary>
        public class IconsResource
        {
            private const string Resource = "icons";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public IconsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Create an icon.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="projectId">The ID of the project.</param>
            public virtual CreateRequest Create(Google.Apis.MapsEngine.exp2.Data.Icon body, string projectId)
            {
                return new CreateRequest(service, body, projectId);
            }

            /// <summary>Create an icon.</summary>
            public class CreateRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.Icon>
            {
                /// <summary>Constructs a new Create request.</summary>
                public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.MapsEngine.exp2.Data.Icon body, string projectId)
                    : base(service)
                {
                    ProjectId = projectId;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The ID of the project.</summary>
                [Google.Apis.Util.RequestParameterAttribute("projectId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string ProjectId { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.MapsEngine.exp2.Data.Icon Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "create"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "projects/{projectId}/icons"; }
                }

                /// <summary>Initializes Create parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "projectId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "projectId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>Create an icon.</summary>/// <param name="body">The body of the request.</param>
            /// <param name="projectId">The ID of the project.</param>
            /// <param name="stream">The stream to upload.</param>
            /// <param name="contentType">The content type of the stream to upload.</param>
            public virtual CreateMediaUpload Create(Google.Apis.MapsEngine.exp2.Data.Icon body, string projectId, System.IO.Stream stream, string contentType)
            {
                return new CreateMediaUpload(service, body, projectId, stream, contentType);
            }

            /// <summary>Create media upload which supports resumable upload.</summary>
            public class CreateMediaUpload : Google.Apis.Upload.ResumableUpload<Google.Apis.MapsEngine.exp2.Data.Icon, Google.Apis.MapsEngine.exp2.Data.Icon>
            {

                /// <summary>Data format for the response.</summary>
                /// [default: json]
                [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<AltEnum> Alt { get; set; }

                /// <summary>Data format for the response.</summary>
                public enum AltEnum
                {
                    /// <summary>Responses with Content-Type of application/json</summary>
                    [Google.Apis.Util.StringValueAttribute("json")]
                    Json,
                }

                /// <summary>Selector specifying which fields to include in a partial response.</summary>
                [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string Fields { get; set; }

                /// <summary>API key. Your API key identifies your project and provides you with API access, quota, and
                /// reports. Required unless you provide an OAuth 2.0 token.</summary>
                [Google.Apis.Util.RequestParameterAttribute("key", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string Key { get; set; }

                /// <summary>OAuth 2.0 token for the current user.</summary>
                [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string OauthToken { get; set; }

                /// <summary>Returns response with indentations and line breaks.</summary>
                /// [default: true]
                [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<bool> PrettyPrint { get; set; }

                /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary
                /// string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are
                /// provided.</summary>
                [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string QuotaUser { get; set; }

                /// <summary>IP address of the site where the request originates. Use this if you want to enforce per-
                /// user limits.</summary>
                [Google.Apis.Util.RequestParameterAttribute("userIp", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string UserIp { get; set; }


                /// <summary>The ID of the project.</summary>
                [Google.Apis.Util.RequestParameterAttribute("projectId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string ProjectId { get; private set; }

                /// <summary>Constructs a new Create media upload instance.</summary>
                public CreateMediaUpload(Google.Apis.Services.IClientService service, Google.Apis.MapsEngine.exp2.Data.Icon body, string
                 projectId, System.IO.Stream stream, string contentType)
                    : base(service, string.Format("/{0}/{1}{2}", "upload", service.BasePath, "projects/{projectId}/icons"), "POST", stream, contentType)
                {
                    ProjectId = projectId;
                    Body = body;
                }
            }

            /// <summary>Return an icon or its associated metadata</summary>
            /// <param name="projectId">The ID of the project.</param>
            /// <param name="id">The ID of the icon.</param>
            public virtual GetRequest Get(string projectId, string id)
            {
                return new GetRequest(service, projectId, id);
            }

            /// <summary>Return an icon or its associated metadata</summary>
            public class GetRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.Icon>
            {
                /// <summary>Constructs a new Get request.</summary>
                public GetRequest(Google.Apis.Services.IClientService service, string projectId, string id)
                    : base(service)
                {
                    ProjectId = projectId;
                    Id = id;
                    MediaDownloader = new Google.Apis.Download.MediaDownloader(service);
                    InitParameters();
                }


                /// <summary>The ID of the project.</summary>
                [Google.Apis.Util.RequestParameterAttribute("projectId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string ProjectId { get; private set; }

                /// <summary>The ID of the icon.</summary>
                [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Id { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "get"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "projects/{projectId}/icons/{id}"; }
                }

                /// <summary>Initializes Get parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "projectId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "projectId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "id", new Google.Apis.Discovery.Parameter
                        {
                            Name = "id",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

                /// <summary>Gets the media downloader.</summary>
                public Google.Apis.Download.IMediaDownloader MediaDownloader { get; private set; }

                /// <summary>Synchronously download the media into the given stream.</summary>
                public virtual void Download(System.IO.Stream stream)
                {
                    MediaDownloader.Download(this.GenerateRequestUri(), stream);
                }

                /// <summary>Asynchronously download the media into the given stream.</summary>
                public virtual System.Threading.Tasks.Task<Google.Apis.Download.IDownloadProgress> DownloadAsync(System.IO.Stream stream)
                {
                    return MediaDownloader.DownloadAsync(this.GenerateRequestUri(), stream);
                }

                /// <summary>Asynchronously download the media into the given stream.</summary>
                public virtual System.Threading.Tasks.Task<Google.Apis.Download.IDownloadProgress> DownloadAsync(System.IO.Stream stream,
                    System.Threading.CancellationToken cancellationToken)
                {
                    return MediaDownloader.DownloadAsync(this.GenerateRequestUri(), stream, cancellationToken);
                }

            }

            /// <summary>Return all icons in the current project</summary>
            /// <param name="projectId">The ID of the project.</param>
            public virtual ListRequest List(string projectId)
            {
                return new ListRequest(service, projectId);
            }

            /// <summary>Return all icons in the current project</summary>
            public class ListRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.IconsListResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, string projectId)
                    : base(service)
                {
                    ProjectId = projectId;
                    InitParameters();
                }


                /// <summary>The ID of the project.</summary>
                [Google.Apis.Util.RequestParameterAttribute("projectId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string ProjectId { get; private set; }

                /// <summary>The maximum number of items to include in a single response page. The maximum supported
                /// value is 50.</summary>
                [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<long> MaxResults { get; set; }

                /// <summary>The continuation token, used to page through large result sets. To get the next page of
                /// results, set this parameter to the value of nextPageToken from the previous response.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string PageToken { get; set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "projects/{projectId}/icons"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "projectId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "projectId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "maxResults", new Google.Apis.Discovery.Parameter
                        {
                            Name = "maxResults",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }
        }

        /// <summary>Return all projects readable by the current user.</summary>
        public virtual ListRequest List()
        {
            return new ListRequest(service);
        }

        /// <summary>Return all projects readable by the current user.</summary>
        public class ListRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.ProjectsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service)
                : base(service)
            {
                InitParameters();
            }



            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "projects"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

            }

        }
    }

    /// <summary>The "rasterCollections" collection of methods.</summary>
    public class RasterCollectionsResource
    {
        private const string Resource = "rasterCollections";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public RasterCollectionsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
            parents = new ParentsResource(service);
            permissions = new PermissionsResource(service);
            rasters = new RastersResource(service);

        }

        private readonly ParentsResource parents;

        /// <summary>Gets the Parents resource.</summary>
        public virtual ParentsResource Parents
        {
            get { return parents; }
        }

        /// <summary>The "parents" collection of methods.</summary>
        public class ParentsResource
        {
            private const string Resource = "parents";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public ParentsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Return all parent ids of the specified raster collection.</summary>
            /// <param name="id">The ID of the raster collection whose parents will be listed.</param>
            public virtual ListRequest List(string id)
            {
                return new ListRequest(service, id);
            }

            /// <summary>Return all parent ids of the specified raster collection.</summary>
            public class ListRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.ParentsListResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, string id)
                    : base(service)
                {
                    Id = id;
                    InitParameters();
                }


                /// <summary>The ID of the raster collection whose parents will be listed.</summary>
                [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Id { get; private set; }

                /// <summary>The maximum number of items to include in a single response page. The maximum supported
                /// value is 50.</summary>
                [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<long> MaxResults { get; set; }

                /// <summary>The continuation token, used to page through large result sets. To get the next page of
                /// results, set this parameter to the value of nextPageToken from the previous response.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string PageToken { get; set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "rasterCollections/{id}/parents"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "id", new Google.Apis.Discovery.Parameter
                        {
                            Name = "id",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "maxResults", new Google.Apis.Discovery.Parameter
                        {
                            Name = "maxResults",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }
        }
        private readonly PermissionsResource permissions;

        /// <summary>Gets the Permissions resource.</summary>
        public virtual PermissionsResource Permissions
        {
            get { return permissions; }
        }

        /// <summary>The "permissions" collection of methods.</summary>
        public class PermissionsResource
        {
            private const string Resource = "permissions";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public PermissionsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Remove permission entries from an already existing asset.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="id">The ID of the asset from which permissions will be removed.</param>
            public virtual BatchDeleteRequest BatchDelete(Google.Apis.MapsEngine.exp2.Data.PermissionsBatchDeleteRequest body, string id)
            {
                return new BatchDeleteRequest(service, body, id);
            }

            /// <summary>Remove permission entries from an already existing asset.</summary>
            public class BatchDeleteRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.PermissionsBatchDeleteResponse>
            {
                /// <summary>Constructs a new BatchDelete request.</summary>
                public BatchDeleteRequest(Google.Apis.Services.IClientService service, Google.Apis.MapsEngine.exp2.Data.PermissionsBatchDeleteRequest body, string id)
                    : base(service)
                {
                    Id = id;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The ID of the asset from which permissions will be removed.</summary>
                [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Id { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.MapsEngine.exp2.Data.PermissionsBatchDeleteRequest Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "batchDelete"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "rasterCollections/{id}/permissions/batchDelete"; }
                }

                /// <summary>Initializes BatchDelete parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "id", new Google.Apis.Discovery.Parameter
                        {
                            Name = "id",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>Add or update permission entries to an already existing asset.
            ///
            /// An asset can hold up to 20 different permission entries. Each batchInsert request is atomic.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="id">The ID of the asset to which permissions will be added.</param>
            public virtual BatchUpdateRequest BatchUpdate(Google.Apis.MapsEngine.exp2.Data.PermissionsBatchUpdateRequest body, string id)
            {
                return new BatchUpdateRequest(service, body, id);
            }

            /// <summary>Add or update permission entries to an already existing asset.
            ///
            /// An asset can hold up to 20 different permission entries. Each batchInsert request is atomic.</summary>
            public class BatchUpdateRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.PermissionsBatchUpdateResponse>
            {
                /// <summary>Constructs a new BatchUpdate request.</summary>
                public BatchUpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.MapsEngine.exp2.Data.PermissionsBatchUpdateRequest body, string id)
                    : base(service)
                {
                    Id = id;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The ID of the asset to which permissions will be added.</summary>
                [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Id { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.MapsEngine.exp2.Data.PermissionsBatchUpdateRequest Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "batchUpdate"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "rasterCollections/{id}/permissions/batchUpdate"; }
                }

                /// <summary>Initializes BatchUpdate parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "id", new Google.Apis.Discovery.Parameter
                        {
                            Name = "id",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>Return all of the permissions for the specified asset.</summary>
            /// <param name="id">The ID of the asset whose permissions will be listed.</param>
            public virtual ListRequest List(string id)
            {
                return new ListRequest(service, id);
            }

            /// <summary>Return all of the permissions for the specified asset.</summary>
            public class ListRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.PermissionsListResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, string id)
                    : base(service)
                {
                    Id = id;
                    InitParameters();
                }


                /// <summary>The ID of the asset whose permissions will be listed.</summary>
                [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Id { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "rasterCollections/{id}/permissions"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "id", new Google.Apis.Discovery.Parameter
                        {
                            Name = "id",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }
        }
        private readonly RastersResource rasters;

        /// <summary>Gets the Rasters resource.</summary>
        public virtual RastersResource Rasters
        {
            get { return rasters; }
        }

        /// <summary>The "rasters" collection of methods.</summary>
        public class RastersResource
        {
            private const string Resource = "rasters";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public RastersResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Remove rasters from an existing raster collection.
            ///
            /// Up to 50 rasters can be included in a single batchDelete request. Each batchDelete request is
            /// atomic.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="id">The ID of the raster collection to which these rasters belong.</param>
            public virtual BatchDeleteRequest BatchDelete(Google.Apis.MapsEngine.exp2.Data.RasterCollectionsRasterBatchDeleteRequest body, string id)
            {
                return new BatchDeleteRequest(service, body, id);
            }

            /// <summary>Remove rasters from an existing raster collection.
            ///
            /// Up to 50 rasters can be included in a single batchDelete request. Each batchDelete request is
            /// atomic.</summary>
            public class BatchDeleteRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.RasterCollectionsRastersBatchDeleteResponse>
            {
                /// <summary>Constructs a new BatchDelete request.</summary>
                public BatchDeleteRequest(Google.Apis.Services.IClientService service, Google.Apis.MapsEngine.exp2.Data.RasterCollectionsRasterBatchDeleteRequest body, string id)
                    : base(service)
                {
                    Id = id;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The ID of the raster collection to which these rasters belong.</summary>
                [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Id { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.MapsEngine.exp2.Data.RasterCollectionsRasterBatchDeleteRequest Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "batchDelete"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "rasterCollections/{id}/rasters/batchDelete"; }
                }

                /// <summary>Initializes BatchDelete parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "id", new Google.Apis.Discovery.Parameter
                        {
                            Name = "id",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>Add rasters to an existing raster collection. Rasters must be successfully processed in order
            /// to be added to a raster collection.
            ///
            /// Up to 50 rasters can be included in a single batchInsert request. Each batchInsert request is
            /// atomic.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="id">The ID of the raster collection to which these rasters belong.</param>
            public virtual BatchInsertRequest BatchInsert(Google.Apis.MapsEngine.exp2.Data.RasterCollectionsRastersBatchInsertRequest body, string id)
            {
                return new BatchInsertRequest(service, body, id);
            }

            /// <summary>Add rasters to an existing raster collection. Rasters must be successfully processed in order
            /// to be added to a raster collection.
            ///
            /// Up to 50 rasters can be included in a single batchInsert request. Each batchInsert request is
            /// atomic.</summary>
            public class BatchInsertRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.RasterCollectionsRastersBatchInsertResponse>
            {
                /// <summary>Constructs a new BatchInsert request.</summary>
                public BatchInsertRequest(Google.Apis.Services.IClientService service, Google.Apis.MapsEngine.exp2.Data.RasterCollectionsRastersBatchInsertRequest body, string id)
                    : base(service)
                {
                    Id = id;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The ID of the raster collection to which these rasters belong.</summary>
                [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Id { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.MapsEngine.exp2.Data.RasterCollectionsRastersBatchInsertRequest Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "batchInsert"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "rasterCollections/{id}/rasters/batchInsert"; }
                }

                /// <summary>Initializes BatchInsert parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "id", new Google.Apis.Discovery.Parameter
                        {
                            Name = "id",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>Return all rasters within a raster collection.</summary>
            /// <param name="id">The ID of the raster collection to which these rasters belong.</param>
            public virtual ListRequest List(string id)
            {
                return new ListRequest(service, id);
            }

            /// <summary>Return all rasters within a raster collection.</summary>
            public class ListRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.RasterCollectionsRastersListResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, string id)
                    : base(service)
                {
                    Id = id;
                    InitParameters();
                }


                /// <summary>The ID of the raster collection to which these rasters belong.</summary>
                [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Id { get; private set; }

                /// <summary>A bounding box, expressed as "west,south,east,north". If set, only assets which intersect
                /// this bounding box will be returned.</summary>
                [Google.Apis.Util.RequestParameterAttribute("bbox", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string Bbox { get; set; }

                /// <summary>An RFC 3339 formatted date-time value (e.g. 1970-01-01T00:00:00Z). Returned assets will
                /// have been created at or after this time.</summary>
                [Google.Apis.Util.RequestParameterAttribute("createdAfter", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<System.DateTime> CreatedAfter { get; set; }

                /// <summary>An RFC 3339 formatted date-time value (e.g. 1970-01-01T00:00:00Z). Returned assets will
                /// have been created at or before this time.</summary>
                [Google.Apis.Util.RequestParameterAttribute("createdBefore", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<System.DateTime> CreatedBefore { get; set; }

                /// <summary>An email address representing a user. Returned assets that have been created by the user
                /// associated with the provided email address.</summary>
                [Google.Apis.Util.RequestParameterAttribute("creatorEmail", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string CreatorEmail { get; set; }

                /// <summary>The maximum number of items to include in a single response page. The maximum supported
                /// value is 100.</summary>
                [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<long> MaxResults { get; set; }

                /// <summary>An RFC 3339 formatted date-time value (e.g. 1970-01-01T00:00:00Z). Returned assets will
                /// have been modified at or after this time.</summary>
                [Google.Apis.Util.RequestParameterAttribute("modifiedAfter", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<System.DateTime> ModifiedAfter { get; set; }

                /// <summary>An RFC 3339 formatted date-time value (e.g. 1970-01-01T00:00:00Z). Returned assets will
                /// have been modified at or before this time.</summary>
                [Google.Apis.Util.RequestParameterAttribute("modifiedBefore", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<System.DateTime> ModifiedBefore { get; set; }

                /// <summary>The continuation token, used to page through large result sets. To get the next page of
                /// results, set this parameter to the value of nextPageToken from the previous response.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string PageToken { get; set; }

                /// <summary>The role parameter indicates that the response should only contain assets where the current
                /// user has the specified level of access.</summary>
                [Google.Apis.Util.RequestParameterAttribute("role", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<RoleEnum> Role { get; set; }

                /// <summary>The role parameter indicates that the response should only contain assets where the current
                /// user has the specified level of access.</summary>
                public enum RoleEnum
                {
                    /// <summary>The user can read, write and administer the asset.</summary>
                    [Google.Apis.Util.StringValueAttribute("owner")]
                    Owner,
                    /// <summary>The user can read the asset.</summary>
                    [Google.Apis.Util.StringValueAttribute("reader")]
                    Reader,
                    /// <summary>The user can read and write the asset.</summary>
                    [Google.Apis.Util.StringValueAttribute("writer")]
                    Writer,
                }

                /// <summary>An unstructured search string used to filter the set of results based on asset
                /// metadata.</summary>
                [Google.Apis.Util.RequestParameterAttribute("search", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string Search { get; set; }

                /// <summary>A comma separated list of tags. Returned assets will contain all the tags from the
                /// list.</summary>
                [Google.Apis.Util.RequestParameterAttribute("tags", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string Tags { get; set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "rasterCollections/{id}/rasters"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "id", new Google.Apis.Discovery.Parameter
                        {
                            Name = "id",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "bbox", new Google.Apis.Discovery.Parameter
                        {
                            Name = "bbox",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "createdAfter", new Google.Apis.Discovery.Parameter
                        {
                            Name = "createdAfter",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "createdBefore", new Google.Apis.Discovery.Parameter
                        {
                            Name = "createdBefore",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "creatorEmail", new Google.Apis.Discovery.Parameter
                        {
                            Name = "creatorEmail",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "maxResults", new Google.Apis.Discovery.Parameter
                        {
                            Name = "maxResults",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "modifiedAfter", new Google.Apis.Discovery.Parameter
                        {
                            Name = "modifiedAfter",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "modifiedBefore", new Google.Apis.Discovery.Parameter
                        {
                            Name = "modifiedBefore",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "role", new Google.Apis.Discovery.Parameter
                        {
                            Name = "role",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "search", new Google.Apis.Discovery.Parameter
                        {
                            Name = "search",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "tags", new Google.Apis.Discovery.Parameter
                        {
                            Name = "tags",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }
        }

        /// <summary>Cancel processing on a raster collection asset.</summary>
        /// <param name="id">The ID of the raster collection.</param>
        public virtual CancelProcessingRequest CancelProcessing(string id)
        {
            return new CancelProcessingRequest(service, id);
        }

        /// <summary>Cancel processing on a raster collection asset.</summary>
        public class CancelProcessingRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.ProcessResponse>
        {
            /// <summary>Constructs a new CancelProcessing request.</summary>
            public CancelProcessingRequest(Google.Apis.Services.IClientService service, string id)
                : base(service)
            {
                Id = id;
                InitParameters();
            }


            /// <summary>The ID of the raster collection.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "cancelProcessing"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "rasterCollections/{id}/cancelProcessing"; }
            }

            /// <summary>Initializes CancelProcessing parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Create a raster collection asset.</summary>
        /// <param name="body">The body of the request.</param>
        public virtual CreateRequest Create(Google.Apis.MapsEngine.exp2.Data.RasterCollection body)
        {
            return new CreateRequest(service, body);
        }

        /// <summary>Create a raster collection asset.</summary>
        public class CreateRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.RasterCollection>
        {
            /// <summary>Constructs a new Create request.</summary>
            public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.MapsEngine.exp2.Data.RasterCollection body)
                : base(service)
            {
                Body = body;
                InitParameters();
            }



            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.MapsEngine.exp2.Data.RasterCollection Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "create"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "rasterCollections"; }
            }

            /// <summary>Initializes Create parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

            }

        }

        /// <summary>Delete a raster collection.</summary>
        /// <param name="id">The ID of the raster collection. Only the raster collection creator or project owner are permitted
        /// to delete. If the rastor collection is included in a layer, the request will fail. Remove the raster collection from
        /// all layers prior to deleting.</param>
        public virtual DeleteRequest Delete(string id)
        {
            return new DeleteRequest(service, id);
        }

        /// <summary>Delete a raster collection.</summary>
        public class DeleteRequest : MapsEngineBaseServiceRequest<string>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string id)
                : base(service)
            {
                Id = id;
                InitParameters();
            }


            /// <summary>The ID of the raster collection. Only the raster collection creator or project owner are
            /// permitted to delete. If the rastor collection is included in a layer, the request will fail. Remove the
            /// raster collection from all layers prior to deleting.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "rasterCollections/{id}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Return metadata for a particular raster collection.</summary>
        /// <param name="id">The ID of the raster collection.</param>
        public virtual GetRequest Get(string id)
        {
            return new GetRequest(service, id);
        }

        /// <summary>Return metadata for a particular raster collection.</summary>
        public class GetRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.RasterCollection>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string id)
                : base(service)
            {
                Id = id;
                InitParameters();
            }


            /// <summary>The ID of the raster collection.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "rasterCollections/{id}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Return all raster collections readable by the current user.</summary>
        public virtual ListRequest List()
        {
            return new ListRequest(service);
        }

        /// <summary>Return all raster collections readable by the current user.</summary>
        public class ListRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.RasterCollectionsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service)
                : base(service)
            {
                InitParameters();
            }


            /// <summary>A bounding box, expressed as "west,south,east,north". If set, only assets which intersect this
            /// bounding box will be returned.</summary>
            [Google.Apis.Util.RequestParameterAttribute("bbox", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Bbox { get; set; }

            /// <summary>An RFC 3339 formatted date-time value (e.g. 1970-01-01T00:00:00Z). Returned assets will have
            /// been created at or after this time.</summary>
            [Google.Apis.Util.RequestParameterAttribute("createdAfter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<System.DateTime> CreatedAfter { get; set; }

            /// <summary>An RFC 3339 formatted date-time value (e.g. 1970-01-01T00:00:00Z). Returned assets will have
            /// been created at or before this time.</summary>
            [Google.Apis.Util.RequestParameterAttribute("createdBefore", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<System.DateTime> CreatedBefore { get; set; }

            /// <summary>An email address representing a user. Returned assets that have been created by the user
            /// associated with the provided email address.</summary>
            [Google.Apis.Util.RequestParameterAttribute("creatorEmail", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string CreatorEmail { get; set; }

            /// <summary>The maximum number of items to include in a single response page. The maximum supported value
            /// is 100.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>An RFC 3339 formatted date-time value (e.g. 1970-01-01T00:00:00Z). Returned assets will have
            /// been modified at or after this time.</summary>
            [Google.Apis.Util.RequestParameterAttribute("modifiedAfter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<System.DateTime> ModifiedAfter { get; set; }

            /// <summary>An RFC 3339 formatted date-time value (e.g. 1970-01-01T00:00:00Z). Returned assets will have
            /// been modified at or before this time.</summary>
            [Google.Apis.Util.RequestParameterAttribute("modifiedBefore", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<System.DateTime> ModifiedBefore { get; set; }

            /// <summary>The continuation token, used to page through large result sets. To get the next page of
            /// results, set this parameter to the value of nextPageToken from the previous response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            [Google.Apis.Util.RequestParameterAttribute("processingStatus", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<ProcessingStatusEnum> ProcessingStatus { get; set; }


            public enum ProcessingStatusEnum
            {
                /// <summary>The raster collection has completed processing.</summary>
                [Google.Apis.Util.StringValueAttribute("complete")]
                Complete,
                /// <summary>The raster collection has failed processing.</summary>
                [Google.Apis.Util.StringValueAttribute("failed")]
                Failed,
                /// <summary>The raster collection is not ready for processing.</summary>
                [Google.Apis.Util.StringValueAttribute("notReady")]
                NotReady,
                /// <summary>The raster collection is processing.</summary>
                [Google.Apis.Util.StringValueAttribute("processing")]
                Processing,
                /// <summary>The raster collection is ready for processing.</summary>
                [Google.Apis.Util.StringValueAttribute("ready")]
                Ready,
            }

            /// <summary>The ID of a Maps Engine project, used to filter the response. To list all available projects
            /// with their IDs, send a Projects: list request. You can also find your project ID as the value of the
            /// DashboardPlace:cid URL parameter when signed in to mapsengine.google.com.</summary>
            [Google.Apis.Util.RequestParameterAttribute("projectId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ProjectId { get; set; }

            /// <summary>The role parameter indicates that the response should only contain assets where the current
            /// user has the specified level of access.</summary>
            [Google.Apis.Util.RequestParameterAttribute("role", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<RoleEnum> Role { get; set; }

            /// <summary>The role parameter indicates that the response should only contain assets where the current
            /// user has the specified level of access.</summary>
            public enum RoleEnum
            {
                /// <summary>The user can read, write and administer the asset.</summary>
                [Google.Apis.Util.StringValueAttribute("owner")]
                Owner,
                /// <summary>The user can read the asset.</summary>
                [Google.Apis.Util.StringValueAttribute("reader")]
                Reader,
                /// <summary>The user can read and write the asset.</summary>
                [Google.Apis.Util.StringValueAttribute("writer")]
                Writer,
            }

            /// <summary>An unstructured search string used to filter the set of results based on asset
            /// metadata.</summary>
            [Google.Apis.Util.RequestParameterAttribute("search", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Search { get; set; }

            /// <summary>A comma separated list of tags. Returned assets will contain all the tags from the
            /// list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("tags", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Tags { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "rasterCollections"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "bbox", new Google.Apis.Discovery.Parameter
                    {
                        Name = "bbox",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "createdAfter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "createdAfter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "createdBefore", new Google.Apis.Discovery.Parameter
                    {
                        Name = "createdBefore",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "creatorEmail", new Google.Apis.Discovery.Parameter
                    {
                        Name = "creatorEmail",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "modifiedAfter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "modifiedAfter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "modifiedBefore", new Google.Apis.Discovery.Parameter
                    {
                        Name = "modifiedBefore",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "processingStatus", new Google.Apis.Discovery.Parameter
                    {
                        Name = "processingStatus",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "projectId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "projectId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "role", new Google.Apis.Discovery.Parameter
                    {
                        Name = "role",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "search", new Google.Apis.Discovery.Parameter
                    {
                        Name = "search",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "tags", new Google.Apis.Discovery.Parameter
                    {
                        Name = "tags",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Mutate a raster collection asset.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="id">The ID of the raster collection.</param>
        public virtual PatchRequest Patch(Google.Apis.MapsEngine.exp2.Data.RasterCollection body, string id)
        {
            return new PatchRequest(service, body, id);
        }

        /// <summary>Mutate a raster collection asset.</summary>
        public class PatchRequest : MapsEngineBaseServiceRequest<string>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.MapsEngine.exp2.Data.RasterCollection body, string id)
                : base(service)
            {
                Id = id;
                Body = body;
                InitParameters();
            }


            /// <summary>The ID of the raster collection.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Id { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.MapsEngine.exp2.Data.RasterCollection Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "rasterCollections/{id}"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Process a raster collection asset.</summary>
        /// <param name="id">The ID of the raster collection.</param>
        public virtual ProcessRequest Process(string id)
        {
            return new ProcessRequest(service, id);
        }

        /// <summary>Process a raster collection asset.</summary>
        public class ProcessRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.ProcessResponse>
        {
            /// <summary>Constructs a new Process request.</summary>
            public ProcessRequest(Google.Apis.Services.IClientService service, string id)
                : base(service)
            {
                Id = id;
                InitParameters();
            }


            /// <summary>The ID of the raster collection.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "process"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "rasterCollections/{id}/process"; }
            }

            /// <summary>Initializes Process parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "rasters" collection of methods.</summary>
    public class RastersResource
    {
        private const string Resource = "rasters";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public RastersResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
            files = new FilesResource(service);
            parents = new ParentsResource(service);
            permissions = new PermissionsResource(service);

        }

        private readonly FilesResource files;

        /// <summary>Gets the Files resource.</summary>
        public virtual FilesResource Files
        {
            get { return files; }
        }

        /// <summary>The "files" collection of methods.</summary>
        public class FilesResource
        {
            private const string Resource = "files";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public FilesResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Upload a file to a raster asset.</summary>
            /// <param name="id">The ID of the raster asset.</param>
            /// <param name="filename">The file name of this uploaded
            /// file.</param>
            public virtual InsertRequest Insert(string id, string filename)
            {
                return new InsertRequest(service, id, filename);
            }

            /// <summary>Upload a file to a raster asset.</summary>
            public class InsertRequest : MapsEngineBaseServiceRequest<string>
            {
                /// <summary>Constructs a new Insert request.</summary>
                public InsertRequest(Google.Apis.Services.IClientService service, string id, string filename)
                    : base(service)
                {
                    Id = id;
                    Filename = filename;
                    InitParameters();
                }


                /// <summary>The ID of the raster asset.</summary>
                [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Id { get; private set; }

                /// <summary>The file name of this uploaded file.</summary>
                [Google.Apis.Util.RequestParameterAttribute("filename", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string Filename { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "insert"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "rasters/{id}/files"; }
                }

                /// <summary>Initializes Insert parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "id", new Google.Apis.Discovery.Parameter
                        {
                            Name = "id",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "filename", new Google.Apis.Discovery.Parameter
                        {
                            Name = "filename",
                            IsRequired = true,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>Upload a file to a raster asset.</summary>
            /// <param name="id">The ID of the raster asset.</param>
            /// <param name="filename">The file name of this uploaded
            /// file.</param>
            /// <param name="stream">The stream to upload.</param>
            /// <param name="contentType">The content type of the stream to upload.</param>
            public virtual InsertMediaUpload Insert(string id, string filename, System.IO.Stream stream, string contentType)
            {
                return new InsertMediaUpload(service, id, filename, stream, contentType);
            }

            /// <summary>Insert media upload which supports resumable upload.</summary>
            public class InsertMediaUpload : Google.Apis.Upload.ResumableUpload<string>
            {

                /// <summary>Data format for the response.</summary>
                /// [default: json]
                [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<AltEnum> Alt { get; set; }

                /// <summary>Data format for the response.</summary>
                public enum AltEnum
                {
                    /// <summary>Responses with Content-Type of application/json</summary>
                    [Google.Apis.Util.StringValueAttribute("json")]
                    Json,
                }

                /// <summary>Selector specifying which fields to include in a partial response.</summary>
                [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string Fields { get; set; }

                /// <summary>API key. Your API key identifies your project and provides you with API access, quota, and
                /// reports. Required unless you provide an OAuth 2.0 token.</summary>
                [Google.Apis.Util.RequestParameterAttribute("key", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string Key { get; set; }

                /// <summary>OAuth 2.0 token for the current user.</summary>
                [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string OauthToken { get; set; }

                /// <summary>Returns response with indentations and line breaks.</summary>
                /// [default: true]
                [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<bool> PrettyPrint { get; set; }

                /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary
                /// string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are
                /// provided.</summary>
                [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string QuotaUser { get; set; }

                /// <summary>IP address of the site where the request originates. Use this if you want to enforce per-
                /// user limits.</summary>
                [Google.Apis.Util.RequestParameterAttribute("userIp", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string UserIp { get; set; }


                /// <summary>The ID of the raster asset.</summary>
                [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Id { get; private set; }

                /// <summary>The file name of this uploaded file.</summary>
                [Google.Apis.Util.RequestParameterAttribute("filename", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string Filename { get; private set; }

                /// <summary>Constructs a new Insert media upload instance.</summary>
                public InsertMediaUpload(Google.Apis.Services.IClientService service, string
                 id, string
                 filename, System.IO.Stream stream, string contentType)
                    : base(service, string.Format("/{0}/{1}{2}", "upload", service.BasePath, "rasters/{id}/files"), "POST", stream, contentType)
                {
                    Id = id;
                    Filename = filename;
                }
            }
        }
        private readonly ParentsResource parents;

        /// <summary>Gets the Parents resource.</summary>
        public virtual ParentsResource Parents
        {
            get { return parents; }
        }

        /// <summary>The "parents" collection of methods.</summary>
        public class ParentsResource
        {
            private const string Resource = "parents";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public ParentsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Return all parent ids of the specified rasters.</summary>
            /// <param name="id">The ID of the rasters whose parents will be listed.</param>
            public virtual ListRequest List(string id)
            {
                return new ListRequest(service, id);
            }

            /// <summary>Return all parent ids of the specified rasters.</summary>
            public class ListRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.ParentsListResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, string id)
                    : base(service)
                {
                    Id = id;
                    InitParameters();
                }


                /// <summary>The ID of the rasters whose parents will be listed.</summary>
                [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Id { get; private set; }

                /// <summary>The maximum number of items to include in a single response page. The maximum supported
                /// value is 50.</summary>
                [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<long> MaxResults { get; set; }

                /// <summary>The continuation token, used to page through large result sets. To get the next page of
                /// results, set this parameter to the value of nextPageToken from the previous response.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string PageToken { get; set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "rasters/{id}/parents"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "id", new Google.Apis.Discovery.Parameter
                        {
                            Name = "id",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "maxResults", new Google.Apis.Discovery.Parameter
                        {
                            Name = "maxResults",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }
        }
        private readonly PermissionsResource permissions;

        /// <summary>Gets the Permissions resource.</summary>
        public virtual PermissionsResource Permissions
        {
            get { return permissions; }
        }

        /// <summary>The "permissions" collection of methods.</summary>
        public class PermissionsResource
        {
            private const string Resource = "permissions";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public PermissionsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Remove permission entries from an already existing asset.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="id">The ID of the asset from which permissions will be removed.</param>
            public virtual BatchDeleteRequest BatchDelete(Google.Apis.MapsEngine.exp2.Data.PermissionsBatchDeleteRequest body, string id)
            {
                return new BatchDeleteRequest(service, body, id);
            }

            /// <summary>Remove permission entries from an already existing asset.</summary>
            public class BatchDeleteRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.PermissionsBatchDeleteResponse>
            {
                /// <summary>Constructs a new BatchDelete request.</summary>
                public BatchDeleteRequest(Google.Apis.Services.IClientService service, Google.Apis.MapsEngine.exp2.Data.PermissionsBatchDeleteRequest body, string id)
                    : base(service)
                {
                    Id = id;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The ID of the asset from which permissions will be removed.</summary>
                [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Id { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.MapsEngine.exp2.Data.PermissionsBatchDeleteRequest Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "batchDelete"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "rasters/{id}/permissions/batchDelete"; }
                }

                /// <summary>Initializes BatchDelete parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "id", new Google.Apis.Discovery.Parameter
                        {
                            Name = "id",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>Add or update permission entries to an already existing asset.
            ///
            /// An asset can hold up to 20 different permission entries. Each batchInsert request is atomic.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="id">The ID of the asset to which permissions will be added.</param>
            public virtual BatchUpdateRequest BatchUpdate(Google.Apis.MapsEngine.exp2.Data.PermissionsBatchUpdateRequest body, string id)
            {
                return new BatchUpdateRequest(service, body, id);
            }

            /// <summary>Add or update permission entries to an already existing asset.
            ///
            /// An asset can hold up to 20 different permission entries. Each batchInsert request is atomic.</summary>
            public class BatchUpdateRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.PermissionsBatchUpdateResponse>
            {
                /// <summary>Constructs a new BatchUpdate request.</summary>
                public BatchUpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.MapsEngine.exp2.Data.PermissionsBatchUpdateRequest body, string id)
                    : base(service)
                {
                    Id = id;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The ID of the asset to which permissions will be added.</summary>
                [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Id { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.MapsEngine.exp2.Data.PermissionsBatchUpdateRequest Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "batchUpdate"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "rasters/{id}/permissions/batchUpdate"; }
                }

                /// <summary>Initializes BatchUpdate parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "id", new Google.Apis.Discovery.Parameter
                        {
                            Name = "id",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>Return all of the permissions for the specified asset.</summary>
            /// <param name="id">The ID of the asset whose permissions will be listed.</param>
            public virtual ListRequest List(string id)
            {
                return new ListRequest(service, id);
            }

            /// <summary>Return all of the permissions for the specified asset.</summary>
            public class ListRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.PermissionsListResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, string id)
                    : base(service)
                {
                    Id = id;
                    InitParameters();
                }


                /// <summary>The ID of the asset whose permissions will be listed.</summary>
                [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Id { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "rasters/{id}/permissions"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "id", new Google.Apis.Discovery.Parameter
                        {
                            Name = "id",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }
        }

        /// <summary>Delete a raster.</summary>
        /// <param name="id">The ID of the raster. Only the raster creator or project owner are permitted to delete. If the
        /// raster is included in a layer or mosaic, the request will fail. Remove it from all parents prior to
        /// deleting.</param>
        public virtual DeleteRequest Delete(string id)
        {
            return new DeleteRequest(service, id);
        }

        /// <summary>Delete a raster.</summary>
        public class DeleteRequest : MapsEngineBaseServiceRequest<string>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string id)
                : base(service)
            {
                Id = id;
                InitParameters();
            }


            /// <summary>The ID of the raster. Only the raster creator or project owner are permitted to delete. If the
            /// raster is included in a layer or mosaic, the request will fail. Remove it from all parents prior to
            /// deleting.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "rasters/{id}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Return metadata for a single raster.</summary>
        /// <param name="id">The ID of the raster.</param>
        public virtual GetRequest Get(string id)
        {
            return new GetRequest(service, id);
        }

        /// <summary>Return metadata for a single raster.</summary>
        public class GetRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.Raster>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string id)
                : base(service)
            {
                Id = id;
                InitParameters();
            }


            /// <summary>The ID of the raster.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "rasters/{id}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Return all rasters readable by the current user.</summary>
        /// <param name="projectId">The ID of a Maps Engine project, used to filter the response. To list all available projects
        /// with their IDs, send a Projects: list request. You can also find your project ID as the value of the
        /// DashboardPlace:cid URL parameter when signed in to mapsengine.google.com.</param>
        public virtual ListRequest List(string projectId)
        {
            return new ListRequest(service, projectId);
        }

        /// <summary>Return all rasters readable by the current user.</summary>
        public class ListRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.RastersListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string projectId)
                : base(service)
            {
                ProjectId = projectId;
                InitParameters();
            }


            /// <summary>The ID of a Maps Engine project, used to filter the response. To list all available projects
            /// with their IDs, send a Projects: list request. You can also find your project ID as the value of the
            /// DashboardPlace:cid URL parameter when signed in to mapsengine.google.com.</summary>
            [Google.Apis.Util.RequestParameterAttribute("projectId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ProjectId { get; private set; }

            /// <summary>A bounding box, expressed as "west,south,east,north". If set, only assets which intersect this
            /// bounding box will be returned.</summary>
            [Google.Apis.Util.RequestParameterAttribute("bbox", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Bbox { get; set; }

            /// <summary>An RFC 3339 formatted date-time value (e.g. 1970-01-01T00:00:00Z). Returned assets will have
            /// been created at or after this time.</summary>
            [Google.Apis.Util.RequestParameterAttribute("createdAfter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<System.DateTime> CreatedAfter { get; set; }

            /// <summary>An RFC 3339 formatted date-time value (e.g. 1970-01-01T00:00:00Z). Returned assets will have
            /// been created at or before this time.</summary>
            [Google.Apis.Util.RequestParameterAttribute("createdBefore", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<System.DateTime> CreatedBefore { get; set; }

            /// <summary>An email address representing a user. Returned assets that have been created by the user
            /// associated with the provided email address.</summary>
            [Google.Apis.Util.RequestParameterAttribute("creatorEmail", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string CreatorEmail { get; set; }

            /// <summary>The maximum number of items to include in a single response page. The maximum supported value
            /// is 100.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>An RFC 3339 formatted date-time value (e.g. 1970-01-01T00:00:00Z). Returned assets will have
            /// been modified at or after this time.</summary>
            [Google.Apis.Util.RequestParameterAttribute("modifiedAfter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<System.DateTime> ModifiedAfter { get; set; }

            /// <summary>An RFC 3339 formatted date-time value (e.g. 1970-01-01T00:00:00Z). Returned assets will have
            /// been modified at or before this time.</summary>
            [Google.Apis.Util.RequestParameterAttribute("modifiedBefore", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<System.DateTime> ModifiedBefore { get; set; }

            /// <summary>The continuation token, used to page through large result sets. To get the next page of
            /// results, set this parameter to the value of nextPageToken from the previous response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            [Google.Apis.Util.RequestParameterAttribute("processingStatus", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<ProcessingStatusEnum> ProcessingStatus { get; set; }


            public enum ProcessingStatusEnum
            {
                /// <summary>The raster has completed processing.</summary>
                [Google.Apis.Util.StringValueAttribute("complete")]
                Complete,
                /// <summary>The raster has failed processing.</summary>
                [Google.Apis.Util.StringValueAttribute("failed")]
                Failed,
                /// <summary>The raster is not ready for processing.</summary>
                [Google.Apis.Util.StringValueAttribute("notReady")]
                NotReady,
                /// <summary>The raster is processing.</summary>
                [Google.Apis.Util.StringValueAttribute("processing")]
                Processing,
                /// <summary>The raster is ready for processing.</summary>
                [Google.Apis.Util.StringValueAttribute("ready")]
                Ready,
            }

            /// <summary>The role parameter indicates that the response should only contain assets where the current
            /// user has the specified level of access.</summary>
            [Google.Apis.Util.RequestParameterAttribute("role", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<RoleEnum> Role { get; set; }

            /// <summary>The role parameter indicates that the response should only contain assets where the current
            /// user has the specified level of access.</summary>
            public enum RoleEnum
            {
                /// <summary>The user can read, write and administer the asset.</summary>
                [Google.Apis.Util.StringValueAttribute("owner")]
                Owner,
                /// <summary>The user can read the asset.</summary>
                [Google.Apis.Util.StringValueAttribute("reader")]
                Reader,
                /// <summary>The user can read and write the asset.</summary>
                [Google.Apis.Util.StringValueAttribute("writer")]
                Writer,
            }

            /// <summary>An unstructured search string used to filter the set of results based on asset
            /// metadata.</summary>
            [Google.Apis.Util.RequestParameterAttribute("search", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Search { get; set; }

            /// <summary>A comma separated list of tags. Returned assets will contain all the tags from the
            /// list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("tags", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Tags { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "rasters"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "projectId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "projectId",
                        IsRequired = true,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "bbox", new Google.Apis.Discovery.Parameter
                    {
                        Name = "bbox",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "createdAfter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "createdAfter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "createdBefore", new Google.Apis.Discovery.Parameter
                    {
                        Name = "createdBefore",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "creatorEmail", new Google.Apis.Discovery.Parameter
                    {
                        Name = "creatorEmail",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "modifiedAfter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "modifiedAfter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "modifiedBefore", new Google.Apis.Discovery.Parameter
                    {
                        Name = "modifiedBefore",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "processingStatus", new Google.Apis.Discovery.Parameter
                    {
                        Name = "processingStatus",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "role", new Google.Apis.Discovery.Parameter
                    {
                        Name = "role",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "search", new Google.Apis.Discovery.Parameter
                    {
                        Name = "search",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "tags", new Google.Apis.Discovery.Parameter
                    {
                        Name = "tags",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Mutate a raster asset.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="id">The ID of the raster.</param>
        public virtual PatchRequest Patch(Google.Apis.MapsEngine.exp2.Data.Raster body, string id)
        {
            return new PatchRequest(service, body, id);
        }

        /// <summary>Mutate a raster asset.</summary>
        public class PatchRequest : MapsEngineBaseServiceRequest<string>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.MapsEngine.exp2.Data.Raster body, string id)
                : base(service)
            {
                Id = id;
                Body = body;
                InitParameters();
            }


            /// <summary>The ID of the raster.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Id { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.MapsEngine.exp2.Data.Raster Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "rasters/{id}"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Process a raster asset.</summary>
        /// <param name="id">The ID of the raster.</param>
        public virtual ProcessRequest Process(string id)
        {
            return new ProcessRequest(service, id);
        }

        /// <summary>Process a raster asset.</summary>
        public class ProcessRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.ProcessResponse>
        {
            /// <summary>Constructs a new Process request.</summary>
            public ProcessRequest(Google.Apis.Services.IClientService service, string id)
                : base(service)
            {
                Id = id;
                InitParameters();
            }


            /// <summary>The ID of the raster.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "process"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "rasters/{id}/process"; }
            }

            /// <summary>Initializes Process parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Create a skeleton raster asset for upload.</summary>
        /// <param name="body">The body of the request.</param>
        public virtual UploadRequest Upload(Google.Apis.MapsEngine.exp2.Data.Raster body)
        {
            return new UploadRequest(service, body);
        }

        /// <summary>Create a skeleton raster asset for upload.</summary>
        public class UploadRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.Raster>
        {
            /// <summary>Constructs a new Upload request.</summary>
            public UploadRequest(Google.Apis.Services.IClientService service, Google.Apis.MapsEngine.exp2.Data.Raster body)
                : base(service)
            {
                Body = body;
                InitParameters();
            }



            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.MapsEngine.exp2.Data.Raster Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "upload"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "rasters/upload"; }
            }

            /// <summary>Initializes Upload parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

            }

        }
    }

    /// <summary>The "tables" collection of methods.</summary>
    public class TablesResource
    {
        private const string Resource = "tables";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public TablesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
            features = new FeaturesResource(service);
            files = new FilesResource(service);
            parents = new ParentsResource(service);
            permissions = new PermissionsResource(service);

        }

        private readonly FeaturesResource features;

        /// <summary>Gets the Features resource.</summary>
        public virtual FeaturesResource Features
        {
            get { return features; }
        }

        /// <summary>The "features" collection of methods.</summary>
        public class FeaturesResource
        {
            private const string Resource = "features";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public FeaturesResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Delete all features matching the given IDs.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="id">The ID of the table that contains the features to be deleted.</param>
            public virtual BatchDeleteRequest BatchDelete(Google.Apis.MapsEngine.exp2.Data.FeaturesBatchDeleteRequest body, string id)
            {
                return new BatchDeleteRequest(service, body, id);
            }

            /// <summary>Delete all features matching the given IDs.</summary>
            public class BatchDeleteRequest : MapsEngineBaseServiceRequest<string>
            {
                /// <summary>Constructs a new BatchDelete request.</summary>
                public BatchDeleteRequest(Google.Apis.Services.IClientService service, Google.Apis.MapsEngine.exp2.Data.FeaturesBatchDeleteRequest body, string id)
                    : base(service)
                {
                    Id = id;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The ID of the table that contains the features to be deleted.</summary>
                [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Id { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.MapsEngine.exp2.Data.FeaturesBatchDeleteRequest Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "batchDelete"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "tables/{id}/features/batchDelete"; }
                }

                /// <summary>Initializes BatchDelete parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "id", new Google.Apis.Discovery.Parameter
                        {
                            Name = "id",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>Append features to an existing table.
            ///
            /// A single batchInsert request can create:
            ///
            /// - Up to 50 features. - A combined total of 10 000 vertices. Feature limits are documented in the
            /// Supported data formats and limits article of the Google Maps Engine help center. Note that free and paid
            /// accounts have different limits.
            ///
            /// For more information about inserting features, read Creating features in the Google Maps Engine
            /// developer's guide.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="id">The ID of the table to append the features to.</param>
            public virtual BatchInsertRequest BatchInsert(Google.Apis.MapsEngine.exp2.Data.FeaturesBatchInsertRequest body, string id)
            {
                return new BatchInsertRequest(service, body, id);
            }

            /// <summary>Append features to an existing table.
            ///
            /// A single batchInsert request can create:
            ///
            /// - Up to 50 features. - A combined total of 10 000 vertices. Feature limits are documented in the
            /// Supported data formats and limits article of the Google Maps Engine help center. Note that free and paid
            /// accounts have different limits.
            ///
            /// For more information about inserting features, read Creating features in the Google Maps Engine
            /// developer's guide.</summary>
            public class BatchInsertRequest : MapsEngineBaseServiceRequest<string>
            {
                /// <summary>Constructs a new BatchInsert request.</summary>
                public BatchInsertRequest(Google.Apis.Services.IClientService service, Google.Apis.MapsEngine.exp2.Data.FeaturesBatchInsertRequest body, string id)
                    : base(service)
                {
                    Id = id;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The ID of the table to append the features to.</summary>
                [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Id { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.MapsEngine.exp2.Data.FeaturesBatchInsertRequest Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "batchInsert"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "tables/{id}/features/batchInsert"; }
                }

                /// <summary>Initializes BatchInsert parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "id", new Google.Apis.Discovery.Parameter
                        {
                            Name = "id",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>Update the supplied features.
            ///
            /// A single batchPatch request can update:
            ///
            /// - Up to 50 features. - A combined total of 10 000 vertices. Feature limits are documented in the
            /// Supported data formats and limits article of the Google Maps Engine help center. Note that free and paid
            /// accounts have different limits.
            ///
            /// Feature updates use HTTP PATCH semantics:
            ///
            /// - A supplied value replaces an existing value (if any) in that field. - Omitted fields remain unchanged.
            /// - Complex values in geometries and properties must be replaced as atomic units. For example, providing
            /// just the coordinates of a geometry is not allowed; the complete geometry, including type, must be
            /// supplied. - Setting a property's value to null deletes that property. For more information about
            /// updating features, read Updating features in the Google Maps Engine developer's guide.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="id">The ID of the table containing the features to be patched.</param>
            public virtual BatchPatchRequest BatchPatch(Google.Apis.MapsEngine.exp2.Data.FeaturesBatchPatchRequest body, string id)
            {
                return new BatchPatchRequest(service, body, id);
            }

            /// <summary>Update the supplied features.
            ///
            /// A single batchPatch request can update:
            ///
            /// - Up to 50 features. - A combined total of 10 000 vertices. Feature limits are documented in the
            /// Supported data formats and limits article of the Google Maps Engine help center. Note that free and paid
            /// accounts have different limits.
            ///
            /// Feature updates use HTTP PATCH semantics:
            ///
            /// - A supplied value replaces an existing value (if any) in that field. - Omitted fields remain unchanged.
            /// - Complex values in geometries and properties must be replaced as atomic units. For example, providing
            /// just the coordinates of a geometry is not allowed; the complete geometry, including type, must be
            /// supplied. - Setting a property's value to null deletes that property. For more information about
            /// updating features, read Updating features in the Google Maps Engine developer's guide.</summary>
            public class BatchPatchRequest : MapsEngineBaseServiceRequest<string>
            {
                /// <summary>Constructs a new BatchPatch request.</summary>
                public BatchPatchRequest(Google.Apis.Services.IClientService service, Google.Apis.MapsEngine.exp2.Data.FeaturesBatchPatchRequest body, string id)
                    : base(service)
                {
                    Id = id;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The ID of the table containing the features to be patched.</summary>
                [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Id { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.MapsEngine.exp2.Data.FeaturesBatchPatchRequest Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "batchPatch"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "tables/{id}/features/batchPatch"; }
                }

                /// <summary>Initializes BatchPatch parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "id", new Google.Apis.Discovery.Parameter
                        {
                            Name = "id",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>Return a single feature, given its ID.</summary>
            /// <param name="tableId">The ID of the table.</param>
            /// <param name="id">The ID of the feature to
            /// get.</param>
            public virtual GetRequest Get(string tableId, string id)
            {
                return new GetRequest(service, tableId, id);
            }

            /// <summary>Return a single feature, given its ID.</summary>
            public class GetRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.Feature>
            {
                /// <summary>Constructs a new Get request.</summary>
                public GetRequest(Google.Apis.Services.IClientService service, string tableId, string id)
                    : base(service)
                {
                    TableId = tableId;
                    Id = id;
                    InitParameters();
                }


                /// <summary>The ID of the table.</summary>
                [Google.Apis.Util.RequestParameterAttribute("tableId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string TableId { get; private set; }

                /// <summary>The ID of the feature to get.</summary>
                [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Id { get; private set; }

                /// <summary>A SQL-like projection clause used to specify returned properties. If this parameter is not
                /// included, all properties are returned.</summary>
                [Google.Apis.Util.RequestParameterAttribute("select", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string Select { get; set; }

                /// <summary>The table version to access. See Accessing Public Data for information.</summary>
                [Google.Apis.Util.RequestParameterAttribute("version", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<VersionEnum> Version { get; set; }

                /// <summary>The table version to access. See Accessing Public Data for information.</summary>
                public enum VersionEnum
                {
                    /// <summary>The draft version.</summary>
                    [Google.Apis.Util.StringValueAttribute("draft")]
                    Draft,
                    /// <summary>The published version.</summary>
                    [Google.Apis.Util.StringValueAttribute("published")]
                    Published,
                }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "get"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "tables/{tableId}/features/{id}"; }
                }

                /// <summary>Initializes Get parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "tableId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "tableId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "id", new Google.Apis.Discovery.Parameter
                        {
                            Name = "id",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "select", new Google.Apis.Discovery.Parameter
                        {
                            Name = "select",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "version", new Google.Apis.Discovery.Parameter
                        {
                            Name = "version",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>Return all features readable by the current user.</summary>
            /// <param name="id">The ID of the table to which these features belong.</param>
            public virtual ListRequest List(string id)
            {
                return new ListRequest(service, id);
            }

            /// <summary>Return all features readable by the current user.</summary>
            public class ListRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.FeaturesListResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, string id)
                    : base(service)
                {
                    Id = id;
                    InitParameters();
                }


                /// <summary>The ID of the table to which these features belong.</summary>
                [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Id { get; private set; }

                /// <summary>A comma separated list of optional data to include. Optional data available:
                /// schema.</summary>
                [Google.Apis.Util.RequestParameterAttribute("include", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string Include { get; set; }

                /// <summary>A geometry literal that specifies the spatial restriction of the query.</summary>
                [Google.Apis.Util.RequestParameterAttribute("intersects", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string Intersects { get; set; }

                /// <summary>The total number of features to return from the query, irrespective of the number of
                /// pages.</summary>
                [Google.Apis.Util.RequestParameterAttribute("limit", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<long> Limit { get; set; }

                /// <summary>The maximum number of items to include in the response, used for paging. The maximum
                /// supported value is 1000.</summary>
                [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<long> MaxResults { get; set; }

                /// <summary>An SQL-like order by clause used to sort results. If this parameter is not included, the
                /// order of features is undefined.</summary>
                [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string OrderBy { get; set; }

                /// <summary>The continuation token, used to page through large result sets. To get the next page of
                /// results, set this parameter to the value of nextPageToken from the previous response.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string PageToken { get; set; }

                /// <summary>A SQL-like projection clause used to specify returned properties. If this parameter is not
                /// included, all properties are returned.</summary>
                [Google.Apis.Util.RequestParameterAttribute("select", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string Select { get; set; }

                /// <summary>The table version to access. See Accessing Public Data for information.</summary>
                [Google.Apis.Util.RequestParameterAttribute("version", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<VersionEnum> Version { get; set; }

                /// <summary>The table version to access. See Accessing Public Data for information.</summary>
                public enum VersionEnum
                {
                    /// <summary>The draft version.</summary>
                    [Google.Apis.Util.StringValueAttribute("draft")]
                    Draft,
                    /// <summary>The published version.</summary>
                    [Google.Apis.Util.StringValueAttribute("published")]
                    Published,
                }

                /// <summary>An SQL-like predicate used to filter results.</summary>
                [Google.Apis.Util.RequestParameterAttribute("where", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string Where { get; set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "tables/{id}/features"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "id", new Google.Apis.Discovery.Parameter
                        {
                            Name = "id",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "include", new Google.Apis.Discovery.Parameter
                        {
                            Name = "include",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "intersects", new Google.Apis.Discovery.Parameter
                        {
                            Name = "intersects",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "limit", new Google.Apis.Discovery.Parameter
                        {
                            Name = "limit",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "maxResults", new Google.Apis.Discovery.Parameter
                        {
                            Name = "maxResults",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "orderBy", new Google.Apis.Discovery.Parameter
                        {
                            Name = "orderBy",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "select", new Google.Apis.Discovery.Parameter
                        {
                            Name = "select",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "version", new Google.Apis.Discovery.Parameter
                        {
                            Name = "version",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "where", new Google.Apis.Discovery.Parameter
                        {
                            Name = "where",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }
        }
        private readonly FilesResource files;

        /// <summary>Gets the Files resource.</summary>
        public virtual FilesResource Files
        {
            get { return files; }
        }

        /// <summary>The "files" collection of methods.</summary>
        public class FilesResource
        {
            private const string Resource = "files";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public FilesResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Upload a file to a placeholder table asset. See Table Upload in the Developer's Guide for more
            /// information. Supported file types are listed in the Supported data formats and limits article of the
            /// Google Maps Engine help center.</summary>
            /// <param name="id">The ID of the table asset.</param>
            /// <param name="filename">The file name of this uploaded
            /// file.</param>
            public virtual InsertRequest Insert(string id, string filename)
            {
                return new InsertRequest(service, id, filename);
            }

            /// <summary>Upload a file to a placeholder table asset. See Table Upload in the Developer's Guide for more
            /// information. Supported file types are listed in the Supported data formats and limits article of the
            /// Google Maps Engine help center.</summary>
            public class InsertRequest : MapsEngineBaseServiceRequest<string>
            {
                /// <summary>Constructs a new Insert request.</summary>
                public InsertRequest(Google.Apis.Services.IClientService service, string id, string filename)
                    : base(service)
                {
                    Id = id;
                    Filename = filename;
                    InitParameters();
                }


                /// <summary>The ID of the table asset.</summary>
                [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Id { get; private set; }

                /// <summary>The file name of this uploaded file.</summary>
                [Google.Apis.Util.RequestParameterAttribute("filename", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string Filename { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "insert"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "tables/{id}/files"; }
                }

                /// <summary>Initializes Insert parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "id", new Google.Apis.Discovery.Parameter
                        {
                            Name = "id",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "filename", new Google.Apis.Discovery.Parameter
                        {
                            Name = "filename",
                            IsRequired = true,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>Upload a file to a placeholder table asset. See Table Upload in the Developer's Guide for more
            /// information. Supported file types are listed in the Supported data formats and limits article of the
            /// Google Maps Engine help center.</summary>
            /// <param name="id">The ID of the table asset.</param>
            /// <param name="filename">The file name of this uploaded
            /// file.</param>
            /// <param name="stream">The stream to upload.</param>
            /// <param name="contentType">The content type of the stream to upload.</param>
            public virtual InsertMediaUpload Insert(string id, string filename, System.IO.Stream stream, string contentType)
            {
                return new InsertMediaUpload(service, id, filename, stream, contentType);
            }

            /// <summary>Insert media upload which supports resumable upload.</summary>
            public class InsertMediaUpload : Google.Apis.Upload.ResumableUpload<string>
            {

                /// <summary>Data format for the response.</summary>
                /// [default: json]
                [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<AltEnum> Alt { get; set; }

                /// <summary>Data format for the response.</summary>
                public enum AltEnum
                {
                    /// <summary>Responses with Content-Type of application/json</summary>
                    [Google.Apis.Util.StringValueAttribute("json")]
                    Json,
                }

                /// <summary>Selector specifying which fields to include in a partial response.</summary>
                [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string Fields { get; set; }

                /// <summary>API key. Your API key identifies your project and provides you with API access, quota, and
                /// reports. Required unless you provide an OAuth 2.0 token.</summary>
                [Google.Apis.Util.RequestParameterAttribute("key", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string Key { get; set; }

                /// <summary>OAuth 2.0 token for the current user.</summary>
                [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string OauthToken { get; set; }

                /// <summary>Returns response with indentations and line breaks.</summary>
                /// [default: true]
                [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<bool> PrettyPrint { get; set; }

                /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary
                /// string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are
                /// provided.</summary>
                [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string QuotaUser { get; set; }

                /// <summary>IP address of the site where the request originates. Use this if you want to enforce per-
                /// user limits.</summary>
                [Google.Apis.Util.RequestParameterAttribute("userIp", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string UserIp { get; set; }


                /// <summary>The ID of the table asset.</summary>
                [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Id { get; private set; }

                /// <summary>The file name of this uploaded file.</summary>
                [Google.Apis.Util.RequestParameterAttribute("filename", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string Filename { get; private set; }

                /// <summary>Constructs a new Insert media upload instance.</summary>
                public InsertMediaUpload(Google.Apis.Services.IClientService service, string
                 id, string
                 filename, System.IO.Stream stream, string contentType)
                    : base(service, string.Format("/{0}/{1}{2}", "upload", service.BasePath, "tables/{id}/files"), "POST", stream, contentType)
                {
                    Id = id;
                    Filename = filename;
                }
            }
        }
        private readonly ParentsResource parents;

        /// <summary>Gets the Parents resource.</summary>
        public virtual ParentsResource Parents
        {
            get { return parents; }
        }

        /// <summary>The "parents" collection of methods.</summary>
        public class ParentsResource
        {
            private const string Resource = "parents";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public ParentsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Return all parent ids of the specified table.</summary>
            /// <param name="id">The ID of the table whose parents will be listed.</param>
            public virtual ListRequest List(string id)
            {
                return new ListRequest(service, id);
            }

            /// <summary>Return all parent ids of the specified table.</summary>
            public class ListRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.ParentsListResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, string id)
                    : base(service)
                {
                    Id = id;
                    InitParameters();
                }


                /// <summary>The ID of the table whose parents will be listed.</summary>
                [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Id { get; private set; }

                /// <summary>The maximum number of items to include in a single response page. The maximum supported
                /// value is 50.</summary>
                [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<long> MaxResults { get; set; }

                /// <summary>The continuation token, used to page through large result sets. To get the next page of
                /// results, set this parameter to the value of nextPageToken from the previous response.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string PageToken { get; set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "tables/{id}/parents"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "id", new Google.Apis.Discovery.Parameter
                        {
                            Name = "id",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "maxResults", new Google.Apis.Discovery.Parameter
                        {
                            Name = "maxResults",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }
        }
        private readonly PermissionsResource permissions;

        /// <summary>Gets the Permissions resource.</summary>
        public virtual PermissionsResource Permissions
        {
            get { return permissions; }
        }

        /// <summary>The "permissions" collection of methods.</summary>
        public class PermissionsResource
        {
            private const string Resource = "permissions";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public PermissionsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Remove permission entries from an already existing asset.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="id">The ID of the asset from which permissions will be removed.</param>
            public virtual BatchDeleteRequest BatchDelete(Google.Apis.MapsEngine.exp2.Data.PermissionsBatchDeleteRequest body, string id)
            {
                return new BatchDeleteRequest(service, body, id);
            }

            /// <summary>Remove permission entries from an already existing asset.</summary>
            public class BatchDeleteRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.PermissionsBatchDeleteResponse>
            {
                /// <summary>Constructs a new BatchDelete request.</summary>
                public BatchDeleteRequest(Google.Apis.Services.IClientService service, Google.Apis.MapsEngine.exp2.Data.PermissionsBatchDeleteRequest body, string id)
                    : base(service)
                {
                    Id = id;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The ID of the asset from which permissions will be removed.</summary>
                [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Id { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.MapsEngine.exp2.Data.PermissionsBatchDeleteRequest Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "batchDelete"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "tables/{id}/permissions/batchDelete"; }
                }

                /// <summary>Initializes BatchDelete parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "id", new Google.Apis.Discovery.Parameter
                        {
                            Name = "id",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>Add or update permission entries to an already existing asset.
            ///
            /// An asset can hold up to 20 different permission entries. Each batchInsert request is atomic.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="id">The ID of the asset to which permissions will be added.</param>
            public virtual BatchUpdateRequest BatchUpdate(Google.Apis.MapsEngine.exp2.Data.PermissionsBatchUpdateRequest body, string id)
            {
                return new BatchUpdateRequest(service, body, id);
            }

            /// <summary>Add or update permission entries to an already existing asset.
            ///
            /// An asset can hold up to 20 different permission entries. Each batchInsert request is atomic.</summary>
            public class BatchUpdateRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.PermissionsBatchUpdateResponse>
            {
                /// <summary>Constructs a new BatchUpdate request.</summary>
                public BatchUpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.MapsEngine.exp2.Data.PermissionsBatchUpdateRequest body, string id)
                    : base(service)
                {
                    Id = id;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The ID of the asset to which permissions will be added.</summary>
                [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Id { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.MapsEngine.exp2.Data.PermissionsBatchUpdateRequest Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "batchUpdate"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "tables/{id}/permissions/batchUpdate"; }
                }

                /// <summary>Initializes BatchUpdate parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "id", new Google.Apis.Discovery.Parameter
                        {
                            Name = "id",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>Return all of the permissions for the specified asset.</summary>
            /// <param name="id">The ID of the asset whose permissions will be listed.</param>
            public virtual ListRequest List(string id)
            {
                return new ListRequest(service, id);
            }

            /// <summary>Return all of the permissions for the specified asset.</summary>
            public class ListRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.PermissionsListResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, string id)
                    : base(service)
                {
                    Id = id;
                    InitParameters();
                }


                /// <summary>The ID of the asset whose permissions will be listed.</summary>
                [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Id { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "tables/{id}/permissions"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "id", new Google.Apis.Discovery.Parameter
                        {
                            Name = "id",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }
        }

        /// <summary>Create a table asset.</summary>
        /// <param name="body">The body of the request.</param>
        public virtual CreateRequest Create(Google.Apis.MapsEngine.exp2.Data.Table body)
        {
            return new CreateRequest(service, body);
        }

        /// <summary>Create a table asset.</summary>
        public class CreateRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.Table>
        {
            /// <summary>Constructs a new Create request.</summary>
            public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.MapsEngine.exp2.Data.Table body)
                : base(service)
            {
                Body = body;
                InitParameters();
            }



            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.MapsEngine.exp2.Data.Table Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "create"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "tables"; }
            }

            /// <summary>Initializes Create parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

            }

        }

        /// <summary>Delete a table.</summary>
        /// <param name="id">The ID of the table. Only the table creator or project owner are permitted to delete. If the table
        /// is included in a layer, the request will fail. Remove it from all layers prior to deleting.</param>
        public virtual DeleteRequest Delete(string id)
        {
            return new DeleteRequest(service, id);
        }

        /// <summary>Delete a table.</summary>
        public class DeleteRequest : MapsEngineBaseServiceRequest<string>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string id)
                : base(service)
            {
                Id = id;
                InitParameters();
            }


            /// <summary>The ID of the table. Only the table creator or project owner are permitted to delete. If the
            /// table is included in a layer, the request will fail. Remove it from all layers prior to
            /// deleting.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "tables/{id}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Return metadata for a particular table, including the schema.</summary>
        /// <param name="id">The ID of the table.</param>
        public virtual GetRequest Get(string id)
        {
            return new GetRequest(service, id);
        }

        /// <summary>Return metadata for a particular table, including the schema.</summary>
        public class GetRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.Table>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string id)
                : base(service)
            {
                Id = id;
                InitParameters();
            }


            /// <summary>The ID of the table.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Id { get; private set; }


            [Google.Apis.Util.RequestParameterAttribute("version", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<VersionEnum> Version { get; set; }


            public enum VersionEnum
            {
                /// <summary>The draft version.</summary>
                [Google.Apis.Util.StringValueAttribute("draft")]
                Draft,
                /// <summary>The published version.</summary>
                [Google.Apis.Util.StringValueAttribute("published")]
                Published,
            }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "tables/{id}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "version", new Google.Apis.Discovery.Parameter
                    {
                        Name = "version",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Return all tables readable by the current user.</summary>
        public virtual ListRequest List()
        {
            return new ListRequest(service);
        }

        /// <summary>Return all tables readable by the current user.</summary>
        public class ListRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.TablesListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service)
                : base(service)
            {
                InitParameters();
            }


            /// <summary>A bounding box, expressed as "west,south,east,north". If set, only assets which intersect this
            /// bounding box will be returned.</summary>
            [Google.Apis.Util.RequestParameterAttribute("bbox", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Bbox { get; set; }

            /// <summary>An RFC 3339 formatted date-time value (e.g. 1970-01-01T00:00:00Z). Returned assets will have
            /// been created at or after this time.</summary>
            [Google.Apis.Util.RequestParameterAttribute("createdAfter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<System.DateTime> CreatedAfter { get; set; }

            /// <summary>An RFC 3339 formatted date-time value (e.g. 1970-01-01T00:00:00Z). Returned assets will have
            /// been created at or before this time.</summary>
            [Google.Apis.Util.RequestParameterAttribute("createdBefore", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<System.DateTime> CreatedBefore { get; set; }

            /// <summary>An email address representing a user. Returned assets that have been created by the user
            /// associated with the provided email address.</summary>
            [Google.Apis.Util.RequestParameterAttribute("creatorEmail", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string CreatorEmail { get; set; }

            /// <summary>The maximum number of items to include in a single response page. The maximum supported value
            /// is 100.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>An RFC 3339 formatted date-time value (e.g. 1970-01-01T00:00:00Z). Returned assets will have
            /// been modified at or after this time.</summary>
            [Google.Apis.Util.RequestParameterAttribute("modifiedAfter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<System.DateTime> ModifiedAfter { get; set; }

            /// <summary>An RFC 3339 formatted date-time value (e.g. 1970-01-01T00:00:00Z). Returned assets will have
            /// been modified at or before this time.</summary>
            [Google.Apis.Util.RequestParameterAttribute("modifiedBefore", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<System.DateTime> ModifiedBefore { get; set; }

            /// <summary>The continuation token, used to page through large result sets. To get the next page of
            /// results, set this parameter to the value of nextPageToken from the previous response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            [Google.Apis.Util.RequestParameterAttribute("processingStatus", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<ProcessingStatusEnum> ProcessingStatus { get; set; }


            public enum ProcessingStatusEnum
            {
                /// <summary>The table has completed processing.</summary>
                [Google.Apis.Util.StringValueAttribute("complete")]
                Complete,
                /// <summary>The table has failed processing.</summary>
                [Google.Apis.Util.StringValueAttribute("failed")]
                Failed,
                /// <summary>The table is not ready for processing.</summary>
                [Google.Apis.Util.StringValueAttribute("notReady")]
                NotReady,
                /// <summary>The table is processing.</summary>
                [Google.Apis.Util.StringValueAttribute("processing")]
                Processing,
                /// <summary>The table is ready for processing.</summary>
                [Google.Apis.Util.StringValueAttribute("ready")]
                Ready,
            }

            /// <summary>The ID of a Maps Engine project, used to filter the response. To list all available projects
            /// with their IDs, send a Projects: list request. You can also find your project ID as the value of the
            /// DashboardPlace:cid URL parameter when signed in to mapsengine.google.com.</summary>
            [Google.Apis.Util.RequestParameterAttribute("projectId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ProjectId { get; set; }

            /// <summary>The role parameter indicates that the response should only contain assets where the current
            /// user has the specified level of access.</summary>
            [Google.Apis.Util.RequestParameterAttribute("role", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<RoleEnum> Role { get; set; }

            /// <summary>The role parameter indicates that the response should only contain assets where the current
            /// user has the specified level of access.</summary>
            public enum RoleEnum
            {
                /// <summary>The user can read, write and administer the asset.</summary>
                [Google.Apis.Util.StringValueAttribute("owner")]
                Owner,
                /// <summary>The user can read the asset.</summary>
                [Google.Apis.Util.StringValueAttribute("reader")]
                Reader,
                /// <summary>The user can read and write the asset.</summary>
                [Google.Apis.Util.StringValueAttribute("writer")]
                Writer,
            }

            /// <summary>An unstructured search string used to filter the set of results based on asset
            /// metadata.</summary>
            [Google.Apis.Util.RequestParameterAttribute("search", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Search { get; set; }

            /// <summary>A comma separated list of tags. Returned assets will contain all the tags from the
            /// list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("tags", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Tags { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "tables"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "bbox", new Google.Apis.Discovery.Parameter
                    {
                        Name = "bbox",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "createdAfter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "createdAfter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "createdBefore", new Google.Apis.Discovery.Parameter
                    {
                        Name = "createdBefore",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "creatorEmail", new Google.Apis.Discovery.Parameter
                    {
                        Name = "creatorEmail",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "modifiedAfter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "modifiedAfter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "modifiedBefore", new Google.Apis.Discovery.Parameter
                    {
                        Name = "modifiedBefore",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "processingStatus", new Google.Apis.Discovery.Parameter
                    {
                        Name = "processingStatus",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "projectId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "projectId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "role", new Google.Apis.Discovery.Parameter
                    {
                        Name = "role",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "search", new Google.Apis.Discovery.Parameter
                    {
                        Name = "search",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "tags", new Google.Apis.Discovery.Parameter
                    {
                        Name = "tags",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Mutate a table asset.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="id">The ID of the table.</param>
        public virtual PatchRequest Patch(Google.Apis.MapsEngine.exp2.Data.Table body, string id)
        {
            return new PatchRequest(service, body, id);
        }

        /// <summary>Mutate a table asset.</summary>
        public class PatchRequest : MapsEngineBaseServiceRequest<string>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.MapsEngine.exp2.Data.Table body, string id)
                : base(service)
            {
                Id = id;
                Body = body;
                InitParameters();
            }


            /// <summary>The ID of the table.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Id { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.MapsEngine.exp2.Data.Table Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "tables/{id}"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Process a table asset.</summary>
        /// <param name="id">The ID of the table.</param>
        public virtual ProcessRequest Process(string id)
        {
            return new ProcessRequest(service, id);
        }

        /// <summary>Process a table asset.</summary>
        public class ProcessRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.ProcessResponse>
        {
            /// <summary>Constructs a new Process request.</summary>
            public ProcessRequest(Google.Apis.Services.IClientService service, string id)
                : base(service)
            {
                Id = id;
                InitParameters();
            }


            /// <summary>The ID of the table.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "process"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "tables/{id}/process"; }
            }

            /// <summary>Initializes Process parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Create a placeholder table asset to which table files can be uploaded. Once the placeholder has
        /// been created, files are uploaded to the
        /// https://www.googleapis.com/upload/mapsengine/v1/tables/table_id/files endpoint. See Table Upload in the
        /// Developer's Guide or Table.files: insert in the reference documentation for more information.</summary>
        /// <param name="body">The body of the request.</param>
        public virtual UploadRequest Upload(Google.Apis.MapsEngine.exp2.Data.Table body)
        {
            return new UploadRequest(service, body);
        }

        /// <summary>Create a placeholder table asset to which table files can be uploaded. Once the placeholder has
        /// been created, files are uploaded to the
        /// https://www.googleapis.com/upload/mapsengine/v1/tables/table_id/files endpoint. See Table Upload in the
        /// Developer's Guide or Table.files: insert in the reference documentation for more information.</summary>
        public class UploadRequest : MapsEngineBaseServiceRequest<Google.Apis.MapsEngine.exp2.Data.Table>
        {
            /// <summary>Constructs a new Upload request.</summary>
            public UploadRequest(Google.Apis.Services.IClientService service, Google.Apis.MapsEngine.exp2.Data.Table body)
                : base(service)
            {
                Body = body;
                InitParameters();
            }



            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.MapsEngine.exp2.Data.Table Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "upload"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "tables/upload"; }
            }

            /// <summary>Initializes Upload parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

            }

        }
    }
}

namespace Google.Apis.MapsEngine.exp2.Data
{    

    /// <summary>Acquisition time represents acquired time of a raster.</summary>
    public class AcquisitionTime : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The end time if acquisition time is a range. The value is an RFC 3339 formatted date-time value
        /// (1970-01-01T00:00:00Z).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("end")]
        public virtual string EndRaw { get; set; }

        /// <summary><seealso cref="System.DateTime"/> representation of <see cref="EndRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnore]
        public virtual System.Nullable<System.DateTime> End
        {
            get
            {
                return Google.Apis.Util.Utilities.GetDateTimeFromString(EndRaw);
            }
            set
            {
                EndRaw = Google.Apis.Util.Utilities.GetStringFromDateTime(value);
            }
        }

        /// <summary>The precision of acquisition time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("precision")]
        public virtual string Precision { get; set; } 

        /// <summary>The acquisition time, or start time if acquisition time is a range. The value is an RFC 3339
        /// formatted date-time value (1970-01-01T00:00:00Z).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("start")]
        public virtual string StartRaw { get; set; }

        /// <summary><seealso cref="System.DateTime"/> representation of <see cref="StartRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnore]
        public virtual System.Nullable<System.DateTime> Start
        {
            get
            {
                return Google.Apis.Util.Utilities.GetDateTimeFromString(StartRaw);
            }
            set
            {
                StartRaw = Google.Apis.Util.Utilities.GetStringFromDateTime(value);
            }
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>An asset is any Google Maps Engine resource that has a globally unique ID. Assets include maps, layers,
    /// vector tables, raster collections, and rasters. Projects and features are not considered assets.
    ///
    /// More detailed information about an asset can be obtained by querying the asset's particular endpoint.</summary>
    public class Asset : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A rectangular bounding box which contains all of the data in this asset. The box is expressed as
        /// \"west, south, east, north\". The numbers represent latitude and longitude in decimal degrees.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bbox")]
        public virtual System.Collections.Generic.IList<System.Nullable<double>> Bbox { get; set; } 

        /// <summary>The creation time of this asset. The value is an RFC 3339-formatted date-time value (for example,
        /// 1970-01-01T00:00:00Z).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creationTime")]
        public virtual string CreationTimeRaw { get; set; }

        /// <summary><seealso cref="System.DateTime"/> representation of <see cref="CreationTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnore]
        public virtual System.Nullable<System.DateTime> CreationTime
        {
            get
            {
                return Google.Apis.Util.Utilities.GetDateTimeFromString(CreationTimeRaw);
            }
            set
            {
                CreationTimeRaw = Google.Apis.Util.Utilities.GetStringFromDateTime(value);
            }
        }

        /// <summary>The email address of the creator of this asset. This is only returned on GET requests and not LIST
        /// requests.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creatorEmail")]
        public virtual string CreatorEmail { get; set; } 

        /// <summary>The asset's description.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>The ETag, used to refer to the current version of the asset.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag { get; set; } 

        /// <summary>The asset's globally unique ID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>The last modified time of this asset. The value is an RFC 3339-formatted date-time value (for
        /// example, 1970-01-01T00:00:00Z).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastModifiedTime")]
        public virtual string LastModifiedTimeRaw { get; set; }

        /// <summary><seealso cref="System.DateTime"/> representation of <see cref="LastModifiedTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnore]
        public virtual System.Nullable<System.DateTime> LastModifiedTime
        {
            get
            {
                return Google.Apis.Util.Utilities.GetDateTimeFromString(LastModifiedTimeRaw);
            }
            set
            {
                LastModifiedTimeRaw = Google.Apis.Util.Utilities.GetStringFromDateTime(value);
            }
        }

        /// <summary>The email address of the last modifier of this asset. This is only returned on GET requests and not
        /// LIST requests.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastModifierEmail")]
        public virtual string LastModifierEmail { get; set; } 

        /// <summary>The asset's name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ID of the project to which the asset belongs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("projectId")]
        public virtual string ProjectId { get; set; } 

        /// <summary>The URL to query to retrieve the asset's complete object. The assets endpoint only returns high-
        /// level information about a resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resource")]
        public virtual string Resource { get; set; } 

        /// <summary>An array of text strings, with each string representing a tag. More information about tags can be
        /// found in the Tagging data article of the Maps Engine help center.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tags")]
        public virtual System.Collections.Generic.IList<string> Tags { get; set; } 

        /// <summary>The type of asset. One of raster, rasterCollection, table, map, or layer.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>If true, WRITERs of the asset are able to edit the asset permissions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("writersCanEditPermissions")]
        public virtual System.Nullable<bool> WritersCanEditPermissions { get; set; } 

    }    

    /// <summary>The response returned by a call to resources.List.</summary>
    public class AssetsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Assets returned.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("assets")]
        public virtual System.Collections.Generic.IList<Asset> Assets { get; set; } 

        /// <summary>Next page token.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Border in line style. Both color and width are required.</summary>
    public class Border : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Color of the border.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("color")]
        public virtual string Color { get; set; } 

        /// <summary>Opacity of the border.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("opacity")]
        public virtual System.Nullable<double> Opacity { get; set; } 

        /// <summary>Width of the border, in pixels.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("width")]
        public virtual System.Nullable<double> Width { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Basic color used in styling.</summary>
    public class Color : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The CSS style color, can be in format of "red" or "#7733EE".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("color")]
        public virtual string ColorValue { get; set; } 

        /// <summary>Opacity ranges from 0 to 1, inclusive. If not provided, default to 1.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("opacity")]
        public virtual System.Nullable<double> Opacity { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class Datasource : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ID of a datasource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A display rule of the vector style.</summary>
    public class DisplayRule : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>This display rule will only be applied to features that match all of the filters here. If filters
        /// is empty, then the rule applies to all features.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filters")]
        public virtual System.Collections.Generic.IList<Filter> Filters { get; set; } 

        /// <summary>Style applied to lines. Required for LineString Geometry.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lineOptions")]
        public virtual LineStyle LineOptions { get; set; } 

        /// <summary>Display rule name. Name is not unique and cannot be used for identification purpose.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Style applied to points. Required for Point Geometry.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pointOptions")]
        public virtual PointStyle PointOptions { get; set; } 

        /// <summary>Style applied to polygons. Required for Polygon Geometry.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("polygonOptions")]
        public virtual PolygonStyle PolygonOptions { get; set; } 

        /// <summary>The zoom levels that this display rule apply.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("zoomLevels")]
        public virtual ZoomLevels ZoomLevels { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A feature within a table.</summary>
    public class Feature : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The geometry member of this Feature.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("geometry")]
        public virtual GeoJsonGeometry Geometry { get; set; } 

        /// <summary>Key/value pairs of this Feature.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("properties")]
        public virtual System.Collections.Generic.IDictionary<string,object> Properties { get; set; } 

        /// <summary>Identifies this object as a feature.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A feature info contains information about individual feature.</summary>
    public class FeatureInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>HTML template of the info window. If not provided, a default template with all attributes will be
        /// generated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("content")]
        public virtual string Content { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The request sent to features.BatchDelete.</summary>
    public class FeaturesBatchDeleteRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("gx_ids")]
        public virtual System.Collections.Generic.IList<string> GxIds { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("primaryKeys")]
        public virtual System.Collections.Generic.IList<string> PrimaryKeys { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The request sent to features.Insert.</summary>
    public class FeaturesBatchInsertRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("features")]
        public virtual System.Collections.Generic.IList<Feature> Features { get; set; } 

        /// <summary>If true, the server will normalize feature geometries. It is assumed that the South Pole is
        /// exterior to any polygons given. See here for a list of normalizations. If false, all feature geometries must
        /// be given already normalized. The points in all LinearRings must be listed in counter-clockwise order, and
        /// LinearRings may not intersect.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("normalizeGeometries")]
        public virtual System.Nullable<bool> NormalizeGeometries { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The request sent to features.BatchPatch.</summary>
    public class FeaturesBatchPatchRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("features")]
        public virtual System.Collections.Generic.IList<Feature> Features { get; set; } 

        /// <summary>If true, the server will normalize feature geometries. It is assumed that the South Pole is
        /// exterior to any polygons given. See here for a list of normalizations. If false, all feature geometries must
        /// be given already normalized. The points in all LinearRings must be listed in counter-clockwise order, and
        /// LinearRings may not intersect.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("normalizeGeometries")]
        public virtual System.Nullable<bool> NormalizeGeometries { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The response returned by a call to features.List.</summary>
    public class FeaturesListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>An indicator of the maximum rate at which queries may be made, if all queries were as expensive as
        /// this query.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("allowedQueriesPerSecond")]
        public virtual System.Nullable<double> AllowedQueriesPerSecond { get; set; } 

        /// <summary>Resources returned.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("features")]
        public virtual System.Collections.Generic.IList<Feature> Features { get; set; } 

        /// <summary>Next page token.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The feature schema.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("schema")]
        public virtual Schema Schema { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A single File, which is a component of an Asset.</summary>
    public class File : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The name of the file.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filename")]
        public virtual string Filename { get; set; } 

        /// <summary>The size of the file in bytes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("size")]
        public virtual System.Nullable<long> Size { get; set; } 

        /// <summary>The upload status of the file.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uploadStatus")]
        public virtual string UploadStatus { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Conditions for filtering features.</summary>
    public class Filter : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The column name to filter on.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("column")]
        public virtual string Column { get; set; } 

        /// <summary>Operation used to evaluate the filter.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("operator")]
        public virtual string Operator__ { get; set; } 

        /// <summary>Value to be evaluated against attribute.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual object Value { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class GeoJsonGeometry : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A heterogenous collection of GeoJsonGeometry objects.</summary>
    public class GeoJsonGeometryCollection : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>An array of geometry objects. There must be at least 2 different types of geometries in the
        /// array.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("geometries")]
        public virtual System.Collections.Generic.IList<GeoJsonGeometry> Geometries { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class GeoJsonLineString : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>An array of two or more positions, representing a line.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("coordinates")]
        public virtual System.Collections.Generic.IList<System.Collections.Generic.IList<System.Nullable<double>>> Coordinates { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Multi Line String</summary>
    public class GeoJsonMultiLineString : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>An array of at least two GeoJsonLineString coordinate arrays.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("coordinates")]
        public virtual System.Collections.Generic.IList<System.Collections.Generic.IList<System.Collections.Generic.IList<System.Nullable<double>>>> Coordinates { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class GeoJsonMultiPoint : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>An array of at least two GeoJsonPoint coordinate arrays.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("coordinates")]
        public virtual System.Collections.Generic.IList<System.Collections.Generic.IList<System.Nullable<double>>> Coordinates { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class GeoJsonMultiPolygon : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>An array of at least two GeoJsonPolygon coordinate arrays.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("coordinates")]
        public virtual System.Collections.Generic.IList<System.Collections.Generic.IList<System.Collections.Generic.IList<System.Collections.Generic.IList<System.Nullable<double>>>>> Coordinates { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class GeoJsonPoint : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A single GeoJsonPosition, specifying the location of the point.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("coordinates")]
        public virtual System.Collections.Generic.IList<System.Nullable<double>> Coordinates { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class GeoJsonPolygon : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>An array of LinearRings. A LinearRing is a GeoJsonLineString which is closed (that is, the first
        /// and last GeoJsonPositions are equal), and which contains at least four GeoJsonPositions. For polygons with
        /// multiple rings, the first LinearRing is the exterior ring, and any subsequent rings are interior rings (that
        /// is, holes).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("coordinates")]
        public virtual System.Collections.Generic.IList<System.Collections.Generic.IList<System.Collections.Generic.IList<System.Nullable<double>>>> Coordinates { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>An icon is a user-uploaded image that can be used to style point geometries.</summary>
    public class Icon : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The description of this Icon, supplied by the author.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>An ID used to refer to this Icon.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>The name of this Icon, supplied by the author.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Style for icon, this is part of point style.</summary>
    public class IconStyle : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Custom icon id.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>Stock icon name. To use a stock icon, prefix it with 'gx_'. See Stock icon names for valid icon
        /// names. For example, to specify small_red, set name to 'gx_small_red'.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>A scalable shape.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("scaledShape")]
        public virtual ScaledShape ScaledShape { get; set; } 

        /// <summary>The function used to scale shapes. Required when a scaledShape is specified.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("scalingFunction")]
        public virtual ScalingFunction ScalingFunction { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The response returned by a call to icons.List.</summary>
    public class IconsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Resources returned.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("icons")]
        public virtual System.Collections.Generic.IList<Icon> Icons { get; set; } 

        /// <summary>Next page token.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Text label style.</summary>
    public class LabelStyle : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Color of the text. If not provided, default to black.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("color")]
        public virtual string Color { get; set; } 

        /// <summary>The column value of the feature to be displayed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("column")]
        public virtual string Column { get; set; } 

        /// <summary>Font style of the label, defaults to 'normal'.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fontStyle")]
        public virtual string FontStyle { get; set; } 

        /// <summary>Font weight of the label, defaults to 'normal'.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fontWeight")]
        public virtual string FontWeight { get; set; } 

        /// <summary>Opacity of the text.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("opacity")]
        public virtual System.Nullable<double> Opacity { get; set; } 

        /// <summary>Outline color of the text.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("outline")]
        public virtual Color Outline { get; set; } 

        /// <summary>Font size of the label, in pixels. 8 <= size <= 15. If not provided, a default size will be
        /// provided.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("size")]
        public virtual System.Nullable<double> Size { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A Layer combines multiple datasources, with styling information, for presentation on a map.</summary>
    public class Layer : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A rectangular bounding box which contains all of the data in this Layer. The box is expressed as
        /// \"west, south, east, north\". The numbers represent latitude and longitude in decimal degrees.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bbox")]
        public virtual System.Collections.Generic.IList<System.Nullable<double>> Bbox { get; set; } 

        /// <summary>The creation time of this layer. The value is an RFC 3339 formatted date-time value (e.g.
        /// 1970-01-01T00:00:00Z).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creationTime")]
        public virtual string CreationTimeRaw { get; set; }

        /// <summary><seealso cref="System.DateTime"/> representation of <see cref="CreationTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnore]
        public virtual System.Nullable<System.DateTime> CreationTime
        {
            get
            {
                return Google.Apis.Util.Utilities.GetDateTimeFromString(CreationTimeRaw);
            }
            set
            {
                CreationTimeRaw = Google.Apis.Util.Utilities.GetStringFromDateTime(value);
            }
        }

        /// <summary>The email address of the creator of this layer. This is only returned on GET requests and not LIST
        /// requests.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creatorEmail")]
        public virtual string CreatorEmail { get; set; } 

        /// <summary>Deprecated: The type of the datasources used to build this Layer. Note: This has been replaced by
        /// layerType, but is still available for now to maintain backward compatibility.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("datasourceType")]
        public virtual string DatasourceType { get; set; } 

        /// <summary>An array of datasources used to build this layer. If layerType is "image", or layerType is not
        /// specified and datasourceType is "image", then each element in this array is a reference to an Image or
        /// RasterCollection. If layerType is "vector", or layerType is not specified and datasourceType is "table" then
        /// each element in this array is a reference to a Vector Table. Note: Datasources are returned in response to a
        /// get request but not a list request. After requesting a list of layers, you'll need to send a get request to
        /// retrieve the datasources for each layer.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("datasources")]
        public virtual System.Collections.Generic.IList<Datasource> Datasources { get; set; } 

        /// <summary>The description of this Layer, supplied by the author.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>Deprecated: The name of an access list of the Map Editor type. The user on whose behalf the request
        /// is being sent must be an editor on that access list. Note: Google Maps Engine no longer uses access lists.
        /// Instead, each asset has its own list of permissions. For backward compatibility, the API still accepts
        /// access lists for projects that are already using access lists. If you created a GME account/project after
        /// July 14th, 2014, you will not be able to send API requests that include access lists. Note: This is an input
        /// field only. It is not returned in response to a list or get request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("draftAccessList")]
        public virtual string DraftAccessList { get; set; } 

        /// <summary>The ETag, used to refer to the current version of the asset.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag { get; set; } 

        /// <summary>A globally unique ID, used to refer to this Layer.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>The last modified time of this layer. The value is an RFC 3339 formatted date-time value (e.g.
        /// 1970-01-01T00:00:00Z).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastModifiedTime")]
        public virtual string LastModifiedTimeRaw { get; set; }

        /// <summary><seealso cref="System.DateTime"/> representation of <see cref="LastModifiedTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnore]
        public virtual System.Nullable<System.DateTime> LastModifiedTime
        {
            get
            {
                return Google.Apis.Util.Utilities.GetDateTimeFromString(LastModifiedTimeRaw);
            }
            set
            {
                LastModifiedTimeRaw = Google.Apis.Util.Utilities.GetStringFromDateTime(value);
            }
        }

        /// <summary>The email address of the last modifier of this layer. This is only returned on GET requests and not
        /// LIST requests.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastModifierEmail")]
        public virtual string LastModifierEmail { get; set; } 

        /// <summary>The type of the datasources used to build this Layer. This should be used instead of
        /// datasourceType. At least one of layerType and datasourceType and must be specified, but layerType takes
        /// precedence.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("layerType")]
        public virtual string LayerType { get; set; } 

        /// <summary>The name of this Layer, supplied by the author.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The processing status of this layer.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("processingStatus")]
        public virtual string ProcessingStatus { get; set; } 

        /// <summary>The ID of the project that this Layer is in.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("projectId")]
        public virtual string ProjectId { get; set; } 

        /// <summary>Deprecated: The access list to whom view permissions are granted. The value must be the name of a
        /// Maps Engine access list of the Map Viewer type, and the user must be a viewer on that list. Note: Google
        /// Maps Engine no longer uses access lists. Instead, each asset has its own list of permissions. For backward
        /// compatibility, the API still accepts access lists for projects that are already using access lists. If you
        /// created a GME account/project after July 14th, 2014, you will not be able to send API requests that include
        /// access lists. Note: This is an input field only. It is not returned in response to a list or get
        /// request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("publishedAccessList")]
        public virtual string PublishedAccessList { get; set; } 

        /// <summary>The publishing status of this layer.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("publishingStatus")]
        public virtual string PublishingStatus { get; set; } 

        /// <summary>The styling information for a vector layer. Note: Style information is returned in response to a
        /// get request but not a list request. After requesting a list of layers, you'll need to send a get request to
        /// retrieve the VectorStyles for each layer.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("style")]
        public virtual VectorStyle Style { get; set; } 

        /// <summary>Tags of this Layer.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tags")]
        public virtual System.Collections.Generic.IList<string> Tags { get; set; } 

        /// <summary>If true, WRITERs of the asset are able to edit the asset permissions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("writersCanEditPermissions")]
        public virtual System.Nullable<bool> WritersCanEditPermissions { get; set; } 

    }    

    /// <summary>The response returned by a call to layers.List. Note: The list response does not include all the fields
    /// available in a layer. Refer to the layer resource description for details of the fields that are not included.
    /// You'll need to send a get request to retrieve the additional fields for each layer.</summary>
    public class LayersListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Resources returned.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("layers")]
        public virtual System.Collections.Generic.IList<Layer> Layers { get; set; } 

        /// <summary>Next page token.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Style for lines.</summary>
    public class LineStyle : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Border of the line. 0 < border.width <= 5.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("border")]
        public virtual Border Border { get; set; } 

        /// <summary>Dash defines the pattern of the line, the values are pixel lengths of alternating dash and gap. If
        /// dash is not provided, then it means a solid line. Dash can contain up to 10 values and must contain even
        /// number of values.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dash")]
        public virtual System.Collections.Generic.IList<System.Nullable<double>> Dash { get; set; } 

        /// <summary>Label style for the line.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("label")]
        public virtual LabelStyle Label { get; set; } 

        /// <summary>Stroke of the line.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("stroke")]
        public virtual LineStyle.StrokeData Stroke { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
        

        /// <summary>Stroke of the line.</summary>
        public class StrokeData
        {
            /// <summary>Color of the line.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("color")]
            public virtual string Color { get; set; } 

            /// <summary>Opacity of the line.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("opacity")]
            public virtual System.Nullable<double> Opacity { get; set; } 

            /// <summary>Width of the line, in pixels. 0 <= width <= 10. If width is set to 0, the line will be
            /// invisible.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("width")]
            public virtual System.Nullable<double> Width { get; set; } 

        }
    }    

    /// <summary>A Map is a collection of Layers, optionally contained within folders.</summary>
    public class Map : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A rectangular bounding box which contains all of the data in this Map. The box is expressed as
        /// \"west, south, east, north\". The numbers represent latitude and longitude in decimal degrees.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bbox")]
        public virtual System.Collections.Generic.IList<System.Nullable<double>> Bbox { get; set; } 

        /// <summary>The contents of this Map.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contents")]
        public virtual System.Collections.Generic.IList<MapItem> Contents { get; set; } 

        /// <summary>The creation time of this map. The value is an RFC 3339 formatted date-time value (e.g.
        /// 1970-01-01T00:00:00Z).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creationTime")]
        public virtual string CreationTimeRaw { get; set; }

        /// <summary><seealso cref="System.DateTime"/> representation of <see cref="CreationTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnore]
        public virtual System.Nullable<System.DateTime> CreationTime
        {
            get
            {
                return Google.Apis.Util.Utilities.GetDateTimeFromString(CreationTimeRaw);
            }
            set
            {
                CreationTimeRaw = Google.Apis.Util.Utilities.GetStringFromDateTime(value);
            }
        }

        /// <summary>The email address of the creator of this map. This is only returned on GET requests and not LIST
        /// requests.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creatorEmail")]
        public virtual string CreatorEmail { get; set; } 

        /// <summary>An array of four numbers (west, south, east, north) which defines the rectangular bounding box of
        /// the default viewport. The numbers represent latitude and longitude in decimal degrees.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultViewport")]
        public virtual System.Collections.Generic.IList<System.Nullable<double>> DefaultViewport { get; set; } 

        /// <summary>The description of this Map, supplied by the author.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>Deprecated: The name of an access list of the Map Editor type. The user on whose behalf the request
        /// is being sent must be an editor on that access list. Note: Google Maps Engine no longer uses access lists.
        /// Instead, each asset has its own list of permissions. For backward compatibility, the API still accepts
        /// access lists for projects that are already using access lists. If you created a GME account/project after
        /// July 14th, 2014, you will not be able to send API requests that include access lists. Note: This is an input
        /// field only. It is not returned in response to a list or get request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("draftAccessList")]
        public virtual string DraftAccessList { get; set; } 

        /// <summary>The ETag, used to refer to the current version of the asset.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag { get; set; } 

        /// <summary>A globally unique ID, used to refer to this Map.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>The last modified time of this map. The value is an RFC 3339 formatted date-time value (e.g.
        /// 1970-01-01T00:00:00Z).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastModifiedTime")]
        public virtual string LastModifiedTimeRaw { get; set; }

        /// <summary><seealso cref="System.DateTime"/> representation of <see cref="LastModifiedTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnore]
        public virtual System.Nullable<System.DateTime> LastModifiedTime
        {
            get
            {
                return Google.Apis.Util.Utilities.GetDateTimeFromString(LastModifiedTimeRaw);
            }
            set
            {
                LastModifiedTimeRaw = Google.Apis.Util.Utilities.GetStringFromDateTime(value);
            }
        }

        /// <summary>The email address of the last modifier of this map. This is only returned on GET requests and not
        /// LIST requests.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastModifierEmail")]
        public virtual string LastModifierEmail { get; set; } 

        /// <summary>The name of this Map, supplied by the author.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The processing status of this map. Map processing is automatically started once a map becomes ready
        /// for processing.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("processingStatus")]
        public virtual string ProcessingStatus { get; set; } 

        /// <summary>The ID of the project that this Map is in.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("projectId")]
        public virtual string ProjectId { get; set; } 

        /// <summary>Deprecated: The access list to whom view permissions are granted. The value must be the name of a
        /// Maps Engine access list of the Map Viewer type, and the user must be a viewer on that list. Note: Google
        /// Maps Engine no longer uses access lists. Instead, each asset has its own list of permissions. For backward
        /// compatibility, the API still accepts access lists for projects that are already using access lists. If you
        /// created a GME account/project after July 14th, 2014, you will not be able to send API requests that include
        /// access lists. This is an input field only. It is not returned in response to a list or get
        /// request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("publishedAccessList")]
        public virtual string PublishedAccessList { get; set; } 

        /// <summary>The publishing status of this map.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("publishingStatus")]
        public virtual string PublishingStatus { get; set; } 

        /// <summary>Tags of this Map.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tags")]
        public virtual System.Collections.Generic.IList<string> Tags { get; set; } 

        /// <summary>Deprecated: An array containing the available versions of this Map. Currently may only contain
        /// "published". The publishingStatus field should be used instead.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("versions")]
        public virtual System.Collections.Generic.IList<string> Versions { get; set; } 

        /// <summary>If true, WRITERs of the asset are able to edit the asset permissions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("writersCanEditPermissions")]
        public virtual System.Nullable<bool> WritersCanEditPermissions { get; set; } 

    }    

    public class MapFolder : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("contents")]
        public virtual System.Collections.Generic.IList<MapItem> Contents { get; set; } 

        /// <summary>An array of four numbers (west, south, east, north) which defines the rectangular bounding box of
        /// the default viewport. The numbers represent latitude and longitude in decimal degrees.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultViewport")]
        public virtual System.Collections.Generic.IList<System.Nullable<double>> DefaultViewport { get; set; } 

        /// <summary>The expandability setting of this MapFolder. If true, the folder can be expanded.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("expandable")]
        public virtual System.Nullable<bool> Expandable { get; set; } 

        /// <summary>A user defined alias for this MapFolder, specific to this Map.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("key")]
        public virtual string Key { get; set; } 

        /// <summary>The name of this MapFolder.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The visibility setting of this MapFolder. One of "defaultOn" or "defaultOff".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("visibility")]
        public virtual string Visibility { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class MapItem : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class MapKmlLink : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>An array of four numbers (west, south, east, north) which defines the rectangular bounding box of
        /// the default viewport. The numbers represent latitude and longitude in decimal degrees.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultViewport")]
        public virtual System.Collections.Generic.IList<System.Nullable<double>> DefaultViewport { get; set; } 

        /// <summary>The URL to the KML file represented by this MapKmlLink.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kmlUrl")]
        public virtual string KmlUrl { get; set; } 

        /// <summary>The name of this MapKmlLink.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The visibility setting of this MapKmlLink. One of "defaultOn" or "defaultOff".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("visibility")]
        public virtual string Visibility { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class MapLayer : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>An array of four numbers (west, south, east, north) which defines the rectangular bounding box of
        /// the default viewport. The numbers represent latitude and longitude in decimal degrees.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultViewport")]
        public virtual System.Collections.Generic.IList<System.Nullable<double>> DefaultViewport { get; set; } 

        /// <summary>The ID of this MapLayer. This ID can be used to request more details about the layer.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>A user defined alias for this MapLayer, specific to this Map.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("key")]
        public virtual string Key { get; set; } 

        /// <summary>The name of this MapLayer.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The visibility setting of this MapLayer. One of "defaultOn" or "defaultOff".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("visibility")]
        public virtual string Visibility { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The response returned by a call to maps.List.</summary>
    public class MapsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Resources returned.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maps")]
        public virtual System.Collections.Generic.IList<Map> Maps { get; set; } 

        /// <summary>Next page token.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A list of the parents of an asset.</summary>
    public class Parent : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ID of this parent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The response returned by a call to parents.List.</summary>
    public class ParentsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Next page token.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The parent assets.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parents")]
        public virtual System.Collections.Generic.IList<Parent> Parents { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A permission defines the user or group that has access to an asset, and the type of access they
    /// have.</summary>
    public class Permission : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Indicates whether a public asset is listed and can be found via a web search (value true), or is
        /// visible only to people who have a link to the asset (value false).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("discoverable")]
        public virtual System.Nullable<bool> Discoverable { get; set; } 

        /// <summary>The unique identifier of the permission. This could be the email address of the user or group this
        /// permission refers to, or the string "anyone" for public permissions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>The type of access granted to this user or group.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("role")]
        public virtual string Role { get; set; } 

        /// <summary>The account type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The request sent to mapsengine.permissions.batchDelete.</summary>
    public class PermissionsBatchDeleteRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>An array of permission ids to be removed. This could be the email address of the user or group this
        /// permission refers to, or the string "anyone" for public permissions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ids")]
        public virtual System.Collections.Generic.IList<string> Ids { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The response returned by a call to mapsengine.permissions.batchDelete.</summary>
    public class PermissionsBatchDeleteResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The request sent to mapsengine.permissions.batchUpdate.</summary>
    public class PermissionsBatchUpdateRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The permissions to be inserted or updated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("permissions")]
        public virtual System.Collections.Generic.IList<Permission> Permissions { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The response returned by a call to mapsengine.permissions.batchUpdate.</summary>
    public class PermissionsBatchUpdateResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class PermissionsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The set of permissions associated with this asset.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("permissions")]
        public virtual System.Collections.Generic.IList<Permission> Permissions { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Style for points.</summary>
    public class PointStyle : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Icon for the point; if it isn't null, exactly one of 'name', 'id' or 'scaledShape' must be
        /// set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("icon")]
        public virtual IconStyle Icon { get; set; } 

        /// <summary>Label style for the point.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("label")]
        public virtual LabelStyle Label { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Style for polygons.</summary>
    public class PolygonStyle : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Fill color of the polygon. If not provided, the polygon will be transparent and not visible if
        /// there is no border.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fill")]
        public virtual Color Fill { get; set; } 

        /// <summary>Label style for the polygon.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("label")]
        public virtual LabelStyle Label { get; set; } 

        /// <summary>Border of the polygon. 0 < border.width <= 10.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("stroke")]
        public virtual Border Stroke { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The response returned by a call to any asset's Process method.</summary>
    public class ProcessResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A project groups a collection of resources.</summary>
    public class Project : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>An ID used to refer to this project.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>A user provided name for this project.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The response returned by a call to projects.List.</summary>
    public class ProjectsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Projects returned.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("projects")]
        public virtual System.Collections.Generic.IList<Project> Projects { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The response returned by a call to any asset's Publish method.</summary>
    public class PublishResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The published version of a layer.</summary>
    public class PublishedLayer : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The description of this Layer, supplied by the author.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>A globally unique ID, used to refer to this Layer.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>The type of the datasources used to build this Layer. This should be used instead of
        /// datasourceType. At least one of layerType and datasourceType and must be specified, but layerType takes
        /// precedence.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("layerType")]
        public virtual string LayerType { get; set; } 

        /// <summary>The name of this Layer, supplied by the author.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ID of the project that this Layer is in.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("projectId")]
        public virtual string ProjectId { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The response returned by a call to layers.List.published.</summary>
    public class PublishedLayersListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Resources returned.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("layers")]
        public virtual System.Collections.Generic.IList<PublishedLayer> Layers { get; set; } 

        /// <summary>Next page token.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The published version of a map asset.</summary>
    public class PublishedMap : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The contents of this Map.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contents")]
        public virtual System.Collections.Generic.IList<MapItem> Contents { get; set; } 

        /// <summary>An array of four numbers (west, south, east, north) which defines the rectangular bounding box of
        /// the default viewport. The numbers represent latitude and longitude in decimal degrees.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultViewport")]
        public virtual System.Collections.Generic.IList<System.Nullable<double>> DefaultViewport { get; set; } 

        /// <summary>The description of this Map, supplied by the author.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>A globally unique ID, used to refer to this Map.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>The name of this Map, supplied by the author.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ID of the project that this Map is in.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("projectId")]
        public virtual string ProjectId { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The response returned by a call to maps.List.published.</summary>
    public class PublishedMapsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Resources returned.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maps")]
        public virtual System.Collections.Generic.IList<PublishedMap> Maps { get; set; } 

        /// <summary>Next page token.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A geo-referenced raster.</summary>
    public class Raster : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The acquisition time of this Raster.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("acquisitionTime")]
        public virtual AcquisitionTime AcquisitionTime { get; set; } 

        /// <summary>The name of the attribution to be used for this Raster.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("attribution")]
        public virtual string Attribution { get; set; } 

        /// <summary>A rectangular bounding box which contains all of the data in this Raster. The box is expressed as
        /// \"west, south, east, north\". The numbers represent latitudes and longitudes in decimal degrees.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bbox")]
        public virtual System.Collections.Generic.IList<System.Nullable<double>> Bbox { get; set; } 

        /// <summary>The creation time of this raster. The value is an RFC 3339 formatted date-time value (e.g.
        /// 1970-01-01T00:00:00Z).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creationTime")]
        public virtual string CreationTimeRaw { get; set; }

        /// <summary><seealso cref="System.DateTime"/> representation of <see cref="CreationTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnore]
        public virtual System.Nullable<System.DateTime> CreationTime
        {
            get
            {
                return Google.Apis.Util.Utilities.GetDateTimeFromString(CreationTimeRaw);
            }
            set
            {
                CreationTimeRaw = Google.Apis.Util.Utilities.GetStringFromDateTime(value);
            }
        }

        /// <summary>The email address of the creator of this raster. This is only returned on GET requests and not LIST
        /// requests.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creatorEmail")]
        public virtual string CreatorEmail { get; set; } 

        /// <summary>The description of this Raster, supplied by the author.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>Deprecated: The name of an access list of the Map Editor type. The user on whose behalf the request
        /// is being sent must be an editor on that access list. Note: Google Maps Engine no longer uses access lists.
        /// Instead, each asset has its own list of permissions. For backward compatibility, the API still accepts
        /// access lists for projects that are already using access lists. If you created a GME account/project after
        /// July 14th, 2014, you will not be able to send API requests that include access lists. Note: This is an input
        /// field only. It is not returned in response to a list or get request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("draftAccessList")]
        public virtual string DraftAccessList { get; set; } 

        /// <summary>The ETag, used to refer to the current version of the asset.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag { get; set; } 

        /// <summary>The files associated with this Raster.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("files")]
        public virtual System.Collections.Generic.IList<File> Files { get; set; } 

        /// <summary>A globally unique ID, used to refer to this Raster.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>The last modified time of this raster. The value is an RFC 3339 formatted date-time value (e.g.
        /// 1970-01-01T00:00:00Z).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastModifiedTime")]
        public virtual string LastModifiedTimeRaw { get; set; }

        /// <summary><seealso cref="System.DateTime"/> representation of <see cref="LastModifiedTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnore]
        public virtual System.Nullable<System.DateTime> LastModifiedTime
        {
            get
            {
                return Google.Apis.Util.Utilities.GetDateTimeFromString(LastModifiedTimeRaw);
            }
            set
            {
                LastModifiedTimeRaw = Google.Apis.Util.Utilities.GetStringFromDateTime(value);
            }
        }

        /// <summary>The email address of the last modifier of this raster. This is only returned on GET requests and
        /// not LIST requests.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastModifierEmail")]
        public virtual string LastModifierEmail { get; set; } 

        /// <summary>The mask processing type of this Raster.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maskType")]
        public virtual string MaskType { get; set; } 

        /// <summary>The name of this Raster, supplied by the author.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The processing status of this Raster.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("processingStatus")]
        public virtual string ProcessingStatus { get; set; } 

        /// <summary>The ID of the project that this Raster is in.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("projectId")]
        public virtual string ProjectId { get; set; } 

        /// <summary>The type of this Raster. Always "image" today.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rasterType")]
        public virtual string RasterType { get; set; } 

        /// <summary>Tags of this Raster.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tags")]
        public virtual System.Collections.Generic.IList<string> Tags { get; set; } 

        /// <summary>If true, WRITERs of the asset are able to edit the asset permissions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("writersCanEditPermissions")]
        public virtual System.Nullable<bool> WritersCanEditPermissions { get; set; } 

    }    

    /// <summary>A raster collection groups multiple Raster resources for inclusion in a Layer.</summary>
    public class RasterCollection : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The name of the attribution to be used for this RasterCollection. Note: Attribution is returned in
        /// response to a get request but not a list request. After requesting a list of raster collections, you'll need
        /// to send a get request to retrieve the attribution for each raster collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("attribution")]
        public virtual string Attribution { get; set; } 

        /// <summary>A rectangular bounding box which contains all of the data in this RasterCollection. The box is
        /// expressed as \"west, south, east, north\". The numbers represent latitude and longitude in decimal
        /// degrees.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bbox")]
        public virtual System.Collections.Generic.IList<System.Nullable<double>> Bbox { get; set; } 

        /// <summary>The creation time of this RasterCollection. The value is an RFC 3339 formatted date-time value
        /// (e.g. 1970-01-01T00:00:00Z).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creationTime")]
        public virtual string CreationTimeRaw { get; set; }

        /// <summary><seealso cref="System.DateTime"/> representation of <see cref="CreationTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnore]
        public virtual System.Nullable<System.DateTime> CreationTime
        {
            get
            {
                return Google.Apis.Util.Utilities.GetDateTimeFromString(CreationTimeRaw);
            }
            set
            {
                CreationTimeRaw = Google.Apis.Util.Utilities.GetStringFromDateTime(value);
            }
        }

        /// <summary>The email address of the creator of this raster collection. This is only returned on GET requests
        /// and not LIST requests.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creatorEmail")]
        public virtual string CreatorEmail { get; set; } 

        /// <summary>The description of this RasterCollection, supplied by the author.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>Deprecated: The name of an access list of the Map Editor type. The user on whose behalf the request
        /// is being sent must be an editor on that access list. Note: Google Maps Engine no longer uses access lists.
        /// Instead, each asset has its own list of permissions. For backward compatibility, the API still accepts
        /// access lists for projects that are already using access lists. If you created a GME account/project after
        /// July 14th, 2014, you will not be able to send API requests that include access lists. Note: This is an input
        /// field only. It is not returned in response to a list or get request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("draftAccessList")]
        public virtual string DraftAccessList { get; set; } 

        /// <summary>The ETag, used to refer to the current version of the asset.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag { get; set; } 

        /// <summary>A globally unique ID, used to refer to this RasterCollection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>The last modified time of this RasterCollection. The value is an RFC 3339 formatted date-time value
        /// (e.g. 1970-01-01T00:00:00Z).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastModifiedTime")]
        public virtual string LastModifiedTimeRaw { get; set; }

        /// <summary><seealso cref="System.DateTime"/> representation of <see cref="LastModifiedTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnore]
        public virtual System.Nullable<System.DateTime> LastModifiedTime
        {
            get
            {
                return Google.Apis.Util.Utilities.GetDateTimeFromString(LastModifiedTimeRaw);
            }
            set
            {
                LastModifiedTimeRaw = Google.Apis.Util.Utilities.GetStringFromDateTime(value);
            }
        }

        /// <summary>The email address of the last modifier of this raster collection. This is only returned on GET
        /// requests and not LIST requests.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastModifierEmail")]
        public virtual string LastModifierEmail { get; set; } 

        /// <summary>True if this RasterCollection is a mosaic.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mosaic")]
        public virtual System.Nullable<bool> Mosaic { get; set; } 

        /// <summary>The name of this RasterCollection, supplied by the author.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The processing status of this RasterCollection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("processingStatus")]
        public virtual string ProcessingStatus { get; set; } 

        /// <summary>The ID of the project that this RasterCollection is in.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("projectId")]
        public virtual string ProjectId { get; set; } 

        /// <summary>The type of rasters contained within this RasterCollection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rasterType")]
        public virtual string RasterType { get; set; } 

        /// <summary>Tags of this RasterCollection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tags")]
        public virtual System.Collections.Generic.IList<string> Tags { get; set; } 

        /// <summary>If true, WRITERs of the asset are able to edit the asset permissions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("writersCanEditPermissions")]
        public virtual System.Nullable<bool> WritersCanEditPermissions { get; set; } 

    }    

    /// <summary>The response returned by a call to raster_collections.List. Note: The list response does not include
    /// all the fields available in a raster collection. Refer to the RasterCollection resource description for details
    /// of the fields that are not included. You'll need to send a get request to retrieve the additional fields for
    /// each raster collection.</summary>
    public class RasterCollectionsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Next page token.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>Resources returned.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rasterCollections")]
        public virtual System.Collections.Generic.IList<RasterCollection> RasterCollections { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A raster resource.</summary>
    public class RasterCollectionsRaster : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A rectangular bounding box which contains all of the data in this Raster. The box is expressed as
        /// \"west, south, east, north\". The numbers represent latitudes and longitudes in decimal degrees.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bbox")]
        public virtual System.Collections.Generic.IList<System.Nullable<double>> Bbox { get; set; } 

        /// <summary>The creation time of this raster. The value is an RFC 3339 formatted date-time value (e.g.
        /// 1970-01-01T00:00:00Z).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creationTime")]
        public virtual string CreationTimeRaw { get; set; }

        /// <summary><seealso cref="System.DateTime"/> representation of <see cref="CreationTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnore]
        public virtual System.Nullable<System.DateTime> CreationTime
        {
            get
            {
                return Google.Apis.Util.Utilities.GetDateTimeFromString(CreationTimeRaw);
            }
            set
            {
                CreationTimeRaw = Google.Apis.Util.Utilities.GetStringFromDateTime(value);
            }
        }

        /// <summary>The description of this Raster, supplied by the author.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>A globally unique ID, used to refer to this Raster.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>The last modified time of this raster. The value is an RFC 3339 formatted date-time value (e.g.
        /// 1970-01-01T00:00:00Z).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastModifiedTime")]
        public virtual string LastModifiedTimeRaw { get; set; }

        /// <summary><seealso cref="System.DateTime"/> representation of <see cref="LastModifiedTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnore]
        public virtual System.Nullable<System.DateTime> LastModifiedTime
        {
            get
            {
                return Google.Apis.Util.Utilities.GetDateTimeFromString(LastModifiedTimeRaw);
            }
            set
            {
                LastModifiedTimeRaw = Google.Apis.Util.Utilities.GetStringFromDateTime(value);
            }
        }

        /// <summary>The name of this Raster, supplied by the author.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ID of the project that this Raster is in.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("projectId")]
        public virtual string ProjectId { get; set; } 

        /// <summary>The type of this Raster. Always "image" today.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rasterType")]
        public virtual string RasterType { get; set; } 

        /// <summary>Tags of this Raster.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tags")]
        public virtual System.Collections.Generic.IList<string> Tags { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The request sent to rasterCollections.Rasters.BatchDelete.</summary>
    public class RasterCollectionsRasterBatchDeleteRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>An array of Raster asset IDs to be removed from this RasterCollection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ids")]
        public virtual System.Collections.Generic.IList<string> Ids { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The response returned by a call to rasterCollections.rasters.batchDelete.</summary>
    public class RasterCollectionsRastersBatchDeleteResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The request sent to rasterCollections.Rasters.BatchInsert.</summary>
    public class RasterCollectionsRastersBatchInsertRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>An array of Raster asset IDs to be added to this RasterCollection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ids")]
        public virtual System.Collections.Generic.IList<string> Ids { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The response returned by a call to rasterCollections.rasters.batchInsert.</summary>
    public class RasterCollectionsRastersBatchInsertResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The response returned by a call to rasterCollections.rasters.List.</summary>
    public class RasterCollectionsRastersListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Next page token.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>Resources returned.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rasters")]
        public virtual System.Collections.Generic.IList<RasterCollectionsRaster> Rasters { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The response returned by a call to rasters.List.</summary>
    public class RastersListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Next page token.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>Resources returned.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rasters")]
        public virtual System.Collections.Generic.IList<Raster> Rasters { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Parameters for styling points as scaled shapes.</summary>
    public class ScaledShape : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Border color/width of the shape. If not specified the shape won't have a border.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("border")]
        public virtual Border Border { get; set; } 

        /// <summary>The fill color of the shape. If not specified the shape will be transparent (although the borders
        /// may not be).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fill")]
        public virtual Color Fill { get; set; } 

        /// <summary>Name of the shape.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("shape")]
        public virtual string Shape { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Parameters for scaling scaled shapes.</summary>
    public class ScalingFunction : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Name of the numeric column used to scale a shape.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("column")]
        public virtual string Column { get; set; } 

        /// <summary>The type of scaling function to use. Defaults to SQRT. Currently only linear and square root
        /// scaling are supported.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("scalingType")]
        public virtual string ScalingType { get; set; } 

        /// <summary>The range of shape sizes, in pixels. For circles, the size corresponds to the diameter.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sizeRange")]
        public virtual SizeRange SizeRange { get; set; } 

        /// <summary>The range of values to display across the size range.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("valueRange")]
        public virtual ValueRange ValueRange { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A schema indicating the properties which may be associated with features within a Table, and the types
    /// of those properties.</summary>
    public class Schema : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>An array of TableColumn objects. The first object in the array must be named geometry and be of
        /// type points, lineStrings, polygons, or mixedGeometry.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("columns")]
        public virtual System.Collections.Generic.IList<TableColumn> Columns { get; set; } 

        /// <summary>The name of the column that contains a feature's geometry. This field can be omitted during table
        /// create; Google Maps Engine supports only a single geometry column, which must be named geometry and be the
        /// first object in the columns array.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("primaryGeometry")]
        public virtual string PrimaryGeometry { get; set; } 

        /// <summary>The name of the column that contains the unique identifier of a Feature.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("primaryKey")]
        public virtual string PrimaryKey { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Scaled shape size range in pixels. For circles, size corresponds to diameter.</summary>
    public class SizeRange : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Maximum size, in pixels.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("max")]
        public virtual System.Nullable<double> Max { get; set; } 

        /// <summary>Minimum size, in pixels.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("min")]
        public virtual System.Nullable<double> Min { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A collection of geographic features, and associated metadata.</summary>
    public class Table : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A rectangular bounding box which contains all of the data in this Table. The box is expressed as
        /// \"west, south, east, north\". The numbers represent latitude and longitude in decimal degrees.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bbox")]
        public virtual System.Collections.Generic.IList<System.Nullable<double>> Bbox { get; set; } 

        /// <summary>The creation time of this table. The value is an RFC 3339 formatted date-time value (e.g.
        /// 1970-01-01T00:00:00Z).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creationTime")]
        public virtual string CreationTimeRaw { get; set; }

        /// <summary><seealso cref="System.DateTime"/> representation of <see cref="CreationTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnore]
        public virtual System.Nullable<System.DateTime> CreationTime
        {
            get
            {
                return Google.Apis.Util.Utilities.GetDateTimeFromString(CreationTimeRaw);
            }
            set
            {
                CreationTimeRaw = Google.Apis.Util.Utilities.GetStringFromDateTime(value);
            }
        }

        /// <summary>The email address of the creator of this table. This is only returned on GET requests and not LIST
        /// requests.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creatorEmail")]
        public virtual string CreatorEmail { get; set; } 

        /// <summary>The description of this table, supplied by the author.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>Deprecated: The name of an access list of the Map Editor type. The user on whose behalf the request
        /// is being sent must be an editor on that access list. Note: Google Maps Engine no longer uses access lists.
        /// Instead, each asset has its own list of permissions. For backward compatibility, the API still accepts
        /// access lists for projects that are already using access lists. If you created a GME account/project after
        /// July 14th, 2014, you will not be able to send API requests that include access lists. Note: This is an input
        /// field only. It is not returned in response to a list or get request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("draftAccessList")]
        public virtual string DraftAccessList { get; set; } 

        /// <summary>The ETag, used to refer to the current version of the asset.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag { get; set; } 

        /// <summary>The files associated with this table.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("files")]
        public virtual System.Collections.Generic.IList<File> Files { get; set; } 

        /// <summary>A globally unique ID, used to refer to this table.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>The last modified time of this table. The value is an RFC 3339 formatted date-time value (e.g.
        /// 1970-01-01T00:00:00Z).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastModifiedTime")]
        public virtual string LastModifiedTimeRaw { get; set; }

        /// <summary><seealso cref="System.DateTime"/> representation of <see cref="LastModifiedTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnore]
        public virtual System.Nullable<System.DateTime> LastModifiedTime
        {
            get
            {
                return Google.Apis.Util.Utilities.GetDateTimeFromString(LastModifiedTimeRaw);
            }
            set
            {
                LastModifiedTimeRaw = Google.Apis.Util.Utilities.GetStringFromDateTime(value);
            }
        }

        /// <summary>The email address of the last modifier of this table. This is only returned on GET requests and not
        /// LIST requests.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastModifierEmail")]
        public virtual string LastModifierEmail { get; set; } 

        /// <summary>The name of this table, supplied by the author.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The processing status of this table.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("processingStatus")]
        public virtual string ProcessingStatus { get; set; } 

        /// <summary>The ID of the project to which the table belongs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("projectId")]
        public virtual string ProjectId { get; set; } 

        /// <summary>Deprecated: The access list to whom view permissions are granted. The value must be the name of a
        /// Maps Engine access list of the Map Viewer type, and the user must be a viewer on that list. Note: Google
        /// Maps Engine no longer uses access lists. Instead, each asset has its own list of permissions. For backward
        /// compatibility, the API still accepts access lists for projects that are already using access lists. If you
        /// created a GME account/project after July 14th, 2014, you will not be able to send API requests that include
        /// access lists. Note: This is an input field only. It is not returned in response to a list or get
        /// request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("publishedAccessList")]
        public virtual string PublishedAccessList { get; set; } 

        /// <summary>The schema for this table. Note: The schema is returned in response to a get request but not a list
        /// request. After requesting a list of tables, you'll need to send a get request to retrieve the schema for
        /// each table.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("schema")]
        public virtual Schema Schema { get; set; } 

        /// <summary>Encoding of the uploaded files. Valid values include UTF-8, CP1251, ISO 8859-1, and
        /// Shift_JIS.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sourceEncoding")]
        public virtual string SourceEncoding { get; set; } 

        /// <summary>An array of text strings, with each string representing a tag. More information about tags can be
        /// found in the Tagging data article of the Maps Engine help center.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tags")]
        public virtual System.Collections.Generic.IList<string> Tags { get; set; } 

        /// <summary>If true, WRITERs of the asset are able to edit the asset permissions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("writersCanEditPermissions")]
        public virtual System.Nullable<bool> WritersCanEditPermissions { get; set; } 

    }    

    public class TableColumn : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The column name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The type of data stored in this column.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The response returned by a call to tables.List. Note: The list response does not include all the fields
    /// available in a table. Refer to the table resource description for details of the fields that are not included.
    /// You'll need to send a get request to retrieve the additional fields for each table.</summary>
    public class TablesListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Next page token.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>Resources returned.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tables")]
        public virtual System.Collections.Generic.IList<Table> Tables { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Range of values used for scaling shapes. The min/max values will be drawn as shapes with the min/max
    /// size.</summary>
    public class ValueRange : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Maximum value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("max")]
        public virtual System.Nullable<double> Max { get; set; } 

        /// <summary>Minimum value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("min")]
        public virtual System.Nullable<double> Min { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A vector style contains styling information for vector layer.</summary>
    public class VectorStyle : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("displayRules")]
        public virtual System.Collections.Generic.IList<DisplayRule> DisplayRules { get; set; } 

        /// <summary>Individual feature info, this is called Info Window in Maps Engine UI. If not provided, a default
        /// template with all attributes will be generated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("featureInfo")]
        public virtual FeatureInfo FeatureInfo { get; set; } 

        /// <summary>The type of the vector style. Currently, only displayRule is supported.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Zoom level range. Zoom levels are restricted between 0 and 24, inclusive.</summary>
    public class ZoomLevels : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Maximum zoom level.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("max")]
        public virtual System.Nullable<int> Max { get; set; } 

        /// <summary>Minimum zoom level.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("min")]
        public virtual System.Nullable<int> Min { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }
}
