// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by google-apis-code-generator 1.5.1
//     C# generator version: 1.10.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

/**
 * \brief
 *   Deployment Manager API Version v1beta2
 *
 * \section ApiInfo API Version Information
 *    <table>
 *      <tr><th>API
 *          <td><a href='https://developers.google.com/deployment-manager/'>Deployment Manager API</a>
 *      <tr><th>API Version<td>v1beta2
 *      <tr><th>API Rev<td>20140915 (0)
 *      <tr><th>API Docs
 *          <td><a href='https://developers.google.com/deployment-manager/'>
 *              https://developers.google.com/deployment-manager/</a>
 *      <tr><th>Discovery Name<td>manager
 *    </table>
 *
 * \section ForMoreInfo For More Information
 *
 * The complete API documentation for using Deployment Manager API can be found at
 * <a href='https://developers.google.com/deployment-manager/'>https://developers.google.com/deployment-manager/</a>.
 *
 * For more information about the Google APIs Client Library for .NET, see
 * <a href='https://developers.google.com/api-client-library/dotnet/get_started'>
 * https://developers.google.com/api-client-library/dotnet/get_started</a>
 */

namespace Google.Apis.Manager.v1beta2
{
    /// <summary>The Manager Service.</summary>
    public class ManagerService : Google.Apis.Services.BaseClientService
    {
        /// <summary>The API version.</summary>
        public const string Version = "v1beta2";

        /// <summary>The discovery version used to generate this service.</summary>
        public static Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed =
            Google.Apis.Discovery.DiscoveryVersion.Version_1_0;

        /// <summary>Constructs a new service.</summary>
        public ManagerService() :
            this(new Google.Apis.Services.BaseClientService.Initializer()) {}

        /// <summary>Constructs a new service.</summary>
        /// <param name="initializer">The service initializer.</param>
        public ManagerService(Google.Apis.Services.BaseClientService.Initializer initializer)
            : base(initializer)
        {
            deployments = new DeploymentsResource(this);
            templates = new TemplatesResource(this);
        }

        /// <summary>Gets the service supported features.</summary>
        public override System.Collections.Generic.IList<string> Features
        {
            get { return new string[0]; }
        }

        /// <summary>Gets the service name.</summary>
        public override string Name
        {
            get { return "manager"; }
        }

        /// <summary>Gets the service base URI.</summary>
        public override string BaseUri
        {
            get { return "https://www.googleapis.com/manager/v1beta2/projects/"; }
        }

        /// <summary>Gets the service base path.</summary>
        public override string BasePath
        {
            get { return "manager/v1beta2/projects/"; }
        }

        /// <summary>Available OAuth 2.0 scopes for use with the Deployment Manager API.</summary>
        public class Scope
        {
            /// <summary>View and manage your applications deployed on Google App Engine</summary>
            public static string AppengineAdmin = "https://www.googleapis.com/auth/appengine.admin";

            /// <summary>View and manage your data across Google Cloud Platform services</summary>
            public static string CloudPlatform = "https://www.googleapis.com/auth/cloud-platform";

            /// <summary>View your data across Google Cloud Platform services</summary>
            public static string CloudPlatformReadOnly = "https://www.googleapis.com/auth/cloud-platform.read-only";

            /// <summary>View and manage your Google Compute Engine resources</summary>
            public static string Compute = "https://www.googleapis.com/auth/compute";

            /// <summary>Manage your data in Google Cloud Storage</summary>
            public static string DevstorageReadWrite = "https://www.googleapis.com/auth/devstorage.read_write";

            /// <summary>View and manage your Google Cloud Platform management resources and deployment status
            /// information</summary>
            public static string NdevCloudman = "https://www.googleapis.com/auth/ndev.cloudman";

            /// <summary>View your Google Cloud Platform management resources and deployment status
            /// information</summary>
            public static string NdevCloudmanReadonly = "https://www.googleapis.com/auth/ndev.cloudman.readonly";

        }



        private readonly DeploymentsResource deployments;

        /// <summary>Gets the Deployments resource.</summary>
        public virtual DeploymentsResource Deployments
        {
            get { return deployments; }
        }

        private readonly TemplatesResource templates;

        /// <summary>Gets the Templates resource.</summary>
        public virtual TemplatesResource Templates
        {
            get { return templates; }
        }
    }

    ///<summary>A base abstract class for Manager requests.</summary>
    public abstract class ManagerBaseServiceRequest<TResponse> : Google.Apis.Requests.ClientServiceRequest<TResponse>
    {
        ///<summary>Constructs a new ManagerBaseServiceRequest instance.</summary>
        protected ManagerBaseServiceRequest(Google.Apis.Services.IClientService service)
            : base(service)
        {
        }

        /// <summary>Data format for the response.</summary>
        /// [default: json]
        [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<AltEnum> Alt { get; set; }

        /// <summary>Data format for the response.</summary>
        public enum AltEnum
        {
            /// <summary>Responses with Content-Type of application/json</summary>
            [Google.Apis.Util.StringValueAttribute("json")]
            Json,
        }

        /// <summary>Selector specifying which fields to include in a partial response.</summary>
        [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Fields { get; set; }

        /// <summary>API key. Your API key identifies your project and provides you with API access, quota, and reports.
        /// Required unless you provide an OAuth 2.0 token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("key", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Key { get; set; }

        /// <summary>OAuth 2.0 token for the current user.</summary>
        [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string OauthToken { get; set; }

        /// <summary>Returns response with indentations and line breaks.</summary>
        /// [default: true]
        [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<bool> PrettyPrint { get; set; }

        /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string
        /// assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.</summary>
        [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string QuotaUser { get; set; }

        /// <summary>IP address of the site where the request originates. Use this if you want to enforce per-user
        /// limits.</summary>
        [Google.Apis.Util.RequestParameterAttribute("userIp", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UserIp { get; set; }

        /// <summary>Initializes Manager parameter list.</summary>
        protected override void InitParameters()
        {
            base.InitParameters();

            RequestParameters.Add(
                "alt", new Google.Apis.Discovery.Parameter
                {
                    Name = "alt",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "json",
                    Pattern = null,
                });
            RequestParameters.Add(
                "fields", new Google.Apis.Discovery.Parameter
                {
                    Name = "fields",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "key", new Google.Apis.Discovery.Parameter
                {
                    Name = "key",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "oauth_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "oauth_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "prettyPrint", new Google.Apis.Discovery.Parameter
                {
                    Name = "prettyPrint",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "true",
                    Pattern = null,
                });
            RequestParameters.Add(
                "quotaUser", new Google.Apis.Discovery.Parameter
                {
                    Name = "quotaUser",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "userIp", new Google.Apis.Discovery.Parameter
                {
                    Name = "userIp",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
        }
    }

    /// <summary>The "deployments" collection of methods.</summary>
    public class DeploymentsResource
    {
        private const string Resource = "deployments";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public DeploymentsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }



        /// <param name="projectId"></param>
        /// <param name="region"></param>
        /// <param
        /// name="deploymentName"></param>
        public virtual DeleteRequest Delete(string projectId, string region, string deploymentName)
        {
            return new DeleteRequest(service, projectId, region, deploymentName);
        }


        public class DeleteRequest : ManagerBaseServiceRequest<string>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string projectId, string region, string deploymentName)
                : base(service)
            {
                ProjectId = projectId;
                Region = region;
                DeploymentName = deploymentName;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("projectId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ProjectId { get; private set; }


            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }


            [Google.Apis.Util.RequestParameterAttribute("deploymentName", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string DeploymentName { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{projectId}/regions/{region}/deployments/{deploymentName}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "projectId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "projectId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "deploymentName", new Google.Apis.Discovery.Parameter
                    {
                        Name = "deploymentName",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }


        /// <param name="projectId"></param>
        /// <param name="region"></param>
        /// <param
        /// name="deploymentName"></param>
        public virtual GetRequest Get(string projectId, string region, string deploymentName)
        {
            return new GetRequest(service, projectId, region, deploymentName);
        }


        public class GetRequest : ManagerBaseServiceRequest<Google.Apis.Manager.v1beta2.Data.Deployment>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string projectId, string region, string deploymentName)
                : base(service)
            {
                ProjectId = projectId;
                Region = region;
                DeploymentName = deploymentName;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("projectId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ProjectId { get; private set; }


            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }


            [Google.Apis.Util.RequestParameterAttribute("deploymentName", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string DeploymentName { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{projectId}/regions/{region}/deployments/{deploymentName}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "projectId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "projectId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "deploymentName", new Google.Apis.Discovery.Parameter
                    {
                        Name = "deploymentName",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }


        /// <param name="body">The body of the request.</param>
        /// <param name="projectId"></param>
        /// <param name="region"></param>
        public virtual InsertRequest Insert(Google.Apis.Manager.v1beta2.Data.Deployment body, string projectId, string region)
        {
            return new InsertRequest(service, body, projectId, region);
        }


        public class InsertRequest : ManagerBaseServiceRequest<Google.Apis.Manager.v1beta2.Data.Deployment>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Manager.v1beta2.Data.Deployment body, string projectId, string region)
                : base(service)
            {
                ProjectId = projectId;
                Region = region;
                Body = body;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("projectId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ProjectId { get; private set; }


            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Manager.v1beta2.Data.Deployment Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{projectId}/regions/{region}/deployments"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "projectId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "projectId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }


        /// <param name="projectId"></param>
        /// <param name="region"></param>
        public virtual ListRequest List(string projectId, string region)
        {
            return new ListRequest(service, projectId, region);
        }


        public class ListRequest : ManagerBaseServiceRequest<Google.Apis.Manager.v1beta2.Data.DeploymentsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string projectId, string region)
                : base(service)
            {
                ProjectId = projectId;
                Region = region;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("projectId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ProjectId { get; private set; }


            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Maximum count of results to be returned. Acceptable values are 0 to 100, inclusive. (Default:
            /// 50)</summary>
            /// [default: 50]
            /// [minimum: 0]
            /// [maximum: 100]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Specifies a nextPageToken returned by a previous list request. This token can be used to
            /// request the next page of results from a previous list request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{projectId}/regions/{region}/deployments"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "projectId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "projectId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "50",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "templates" collection of methods.</summary>
    public class TemplatesResource
    {
        private const string Resource = "templates";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public TemplatesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }



        /// <param name="projectId"></param>
        /// <param name="templateName"></param>
        public virtual DeleteRequest Delete(string projectId, string templateName)
        {
            return new DeleteRequest(service, projectId, templateName);
        }


        public class DeleteRequest : ManagerBaseServiceRequest<string>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string projectId, string templateName)
                : base(service)
            {
                ProjectId = projectId;
                TemplateName = templateName;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("projectId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ProjectId { get; private set; }


            [Google.Apis.Util.RequestParameterAttribute("templateName", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string TemplateName { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{projectId}/templates/{templateName}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "projectId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "projectId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "templateName", new Google.Apis.Discovery.Parameter
                    {
                        Name = "templateName",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }


        /// <param name="projectId"></param>
        /// <param name="templateName"></param>
        public virtual GetRequest Get(string projectId, string templateName)
        {
            return new GetRequest(service, projectId, templateName);
        }


        public class GetRequest : ManagerBaseServiceRequest<Google.Apis.Manager.v1beta2.Data.Template>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string projectId, string templateName)
                : base(service)
            {
                ProjectId = projectId;
                TemplateName = templateName;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("projectId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ProjectId { get; private set; }


            [Google.Apis.Util.RequestParameterAttribute("templateName", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string TemplateName { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{projectId}/templates/{templateName}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "projectId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "projectId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "templateName", new Google.Apis.Discovery.Parameter
                    {
                        Name = "templateName",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }


        /// <param name="body">The body of the request.</param>
        /// <param name="projectId"></param>
        public virtual InsertRequest Insert(Google.Apis.Manager.v1beta2.Data.Template body, string projectId)
        {
            return new InsertRequest(service, body, projectId);
        }


        public class InsertRequest : ManagerBaseServiceRequest<Google.Apis.Manager.v1beta2.Data.Template>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Manager.v1beta2.Data.Template body, string projectId)
                : base(service)
            {
                ProjectId = projectId;
                Body = body;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("projectId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ProjectId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Manager.v1beta2.Data.Template Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{projectId}/templates"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "projectId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "projectId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }


        /// <param name="projectId"></param>
        public virtual ListRequest List(string projectId)
        {
            return new ListRequest(service, projectId);
        }


        public class ListRequest : ManagerBaseServiceRequest<Google.Apis.Manager.v1beta2.Data.TemplatesListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string projectId)
                : base(service)
            {
                ProjectId = projectId;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("projectId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ProjectId { get; private set; }

            /// <summary>Maximum count of results to be returned. Acceptable values are 0 to 100, inclusive. (Default:
            /// 50)</summary>
            /// [default: 50]
            /// [minimum: 0]
            /// [maximum: 100]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Specifies a nextPageToken returned by a previous list request. This token can be used to
            /// request the next page of results from a previous list request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{projectId}/templates"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "projectId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "projectId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "50",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }
}

namespace Google.Apis.Manager.v1beta2.Data
{    

    /// <summary>A Compute Engine network accessConfig. Identical to the accessConfig on corresponding Compute Engine
    /// resource.</summary>
    public class AccessConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Name of this access configuration.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>An external IP address associated with this instance.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("natIp")]
        public virtual string NatIp { get; set; } 

        /// <summary>Type of this access configuration file. (Currently only ONE_TO_ONE_NAT is legal.)</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>An Action encapsulates a set of commands as a single runnable module with additional information needed
    /// during run-time.</summary>
    public class Action : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A list of commands to run sequentially for this action.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("commands")]
        public virtual System.Collections.Generic.IList<string> Commands { get; set; } 

        /// <summary>The timeout in milliseconds for this action to run.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timeoutMs")]
        public virtual System.Nullable<int> TimeoutMs { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>An allowed port resource.</summary>
    public class AllowedRule : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>?tcp?, ?udp? or ?icmp?</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("IPProtocol")]
        public virtual string IPProtocol { get; set; } 

        /// <summary>List of ports or port ranges (Example inputs include: ["22"], [?33?, "12345-12349"].</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ports")]
        public virtual System.Collections.Generic.IList<string> Ports { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class AutoscalingModule : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("coolDownPeriodSec")]
        public virtual System.Nullable<int> CoolDownPeriodSec { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("maxNumReplicas")]
        public virtual System.Nullable<int> MaxNumReplicas { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("minNumReplicas")]
        public virtual System.Nullable<int> MinNumReplicas { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("signalType")]
        public virtual string SignalType { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("targetModule")]
        public virtual string TargetModule { get; set; } 

        /// <summary>target_utilization should be in range [0,1].</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetUtilization")]
        public virtual System.Nullable<double> TargetUtilization { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class AutoscalingModuleStatus : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The URL of the corresponding Autoscaling configuration.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("autoscalingConfigUrl")]
        public virtual string AutoscalingConfigUrl { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>[Output Only] The current state of a replica or module.</summary>
    public class DeployState : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] Human readable details about the current state.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("details")]
        public virtual string Details { get; set; } 

        /// <summary>[Output Only] The status of the deployment. Possible values include: - UNKNOWN - DEPLOYING -
        /// DEPLOYED - DEPLOYMENT_FAILED - DELETING - DELETED - DELETE_FAILED</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual string Status { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A deployment represents a physical instantiation of a Template.</summary>
    public class Deployment : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The time when this deployment was created.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creationDate")]
        public virtual string CreationDate { get; set; } 

        /// <summary>A user-supplied description of this Deployment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>[Output Only] List of status for the modules in this deployment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("modules")]
        public virtual System.Collections.Generic.IDictionary<string,ModuleStatus> Modules { get; set; } 

        /// <summary>Name of this deployment. The name must conform to the following regular expression:
        /// [a-zA-Z0-9-_]{1,64}</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The set of parameter overrides to apply to the corresponding Template before deploying.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("overrides")]
        public virtual System.Collections.Generic.IList<ParamOverride> Overrides { get; set; } 

        /// <summary>[Output Only] Current status of this deployment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual DeployState State { get; set; } 

        /// <summary>The name of the Template on which this deployment is based.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("templateName")]
        public virtual string TemplateName { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class DeploymentsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("resources")]
        public virtual System.Collections.Generic.IList<Deployment> Resources { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>How to attach a disk to a Replica.</summary>
    public class DiskAttachment : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The device name of this disk.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deviceName")]
        public virtual string DeviceName { get; set; } 

        /// <summary>A zero-based index to assign to this disk, where 0 is reserved for the boot disk. If not specified,
        /// this is assigned by the server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("index")]
        public virtual System.Nullable<long> Index { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>An environment variable.</summary>
    public class EnvVariable : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Whether this variable is hidden or visible.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hidden")]
        public virtual System.Nullable<bool> Hidden { get; set; } 

        /// <summary>Value of the environment variable.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A pre-existing persistent disk that will be attached to every Replica in the Pool.</summary>
    public class ExistingDisk : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. How the disk will be attached to the Replica.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("attachment")]
        public virtual DiskAttachment Attachment { get; set; } 

        /// <summary>The fully-qualified URL of the Persistent Disk resource. It must be in the same zone as the
        /// Pool.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("source")]
        public virtual string Source { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A Firewall resource</summary>
    public class FirewallModule : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The allowed ports or port ranges.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("allowed")]
        public virtual System.Collections.Generic.IList<AllowedRule> Allowed { get; set; } 

        /// <summary>The description of the firewall (optional)</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>The NetworkModule to which this firewall should apply. If not specified, or if specified as
        /// 'default', this firewall will be applied to the 'default' network.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("network")]
        public virtual string Network { get; set; } 

        /// <summary>Source IP ranges to apply this firewall to, see the GCE Spec for details on syntax</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sourceRanges")]
        public virtual System.Collections.Generic.IList<string> SourceRanges { get; set; } 

        /// <summary>Source Tags to apply this firewall to, see the GCE Spec for details on syntax</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sourceTags")]
        public virtual System.Collections.Generic.IList<string> SourceTags { get; set; } 

        /// <summary>Target Tags to apply this firewall to, see the GCE Spec for details on syntax</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetTags")]
        public virtual System.Collections.Generic.IList<string> TargetTags { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class FirewallModuleStatus : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The URL of the corresponding Firewall resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("firewallUrl")]
        public virtual string FirewallUrl { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class HealthCheckModule : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("checkIntervalSec")]
        public virtual System.Nullable<int> CheckIntervalSec { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("healthyThreshold")]
        public virtual System.Nullable<int> HealthyThreshold { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("host")]
        public virtual string Host { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("path")]
        public virtual string Path { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("port")]
        public virtual System.Nullable<int> Port { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("timeoutSec")]
        public virtual System.Nullable<int> TimeoutSec { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("unhealthyThreshold")]
        public virtual System.Nullable<int> UnhealthyThreshold { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class HealthCheckModuleStatus : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The HealthCheck URL.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("healthCheckUrl")]
        public virtual string HealthCheckUrl { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class LbModule : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("healthChecks")]
        public virtual System.Collections.Generic.IList<string> HealthChecks { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("ipAddress")]
        public virtual string IpAddress { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("ipProtocol")]
        public virtual string IpProtocol { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("portRange")]
        public virtual string PortRange { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("sessionAffinity")]
        public virtual string SessionAffinity { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("targetModules")]
        public virtual System.Collections.Generic.IList<string> TargetModules { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class LbModuleStatus : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The URL of the corresponding ForwardingRule in GCE.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("forwardingRuleUrl")]
        public virtual string ForwardingRuleUrl { get; set; } 

        /// <summary>[Output Only] The URL of the corresponding TargetPool resource in GCE.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetPoolUrl")]
        public virtual string TargetPoolUrl { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A Compute Engine metadata entry. Identical to the metadata on the corresponding Compute Engine
    /// resource.</summary>
    public class Metadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The fingerprint of the metadata.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fingerPrint")]
        public virtual string FingerPrint { get; set; } 

        /// <summary>A list of metadata items.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<MetadataItem> Items { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A Compute Engine metadata item, defined as a key:value pair. Identical to the metadata on the
    /// corresponding Compute Engine resource.</summary>
    public class MetadataItem : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A metadata key.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("key")]
        public virtual string Key { get; set; } 

        /// <summary>A metadata value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A module in a configuration. A module represents a single homogeneous, possibly replicated
    /// task.</summary>
    public class Module : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("autoscalingModule")]
        public virtual AutoscalingModule AutoscalingModule { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("firewallModule")]
        public virtual FirewallModule FirewallModule { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("healthCheckModule")]
        public virtual HealthCheckModule HealthCheckModule { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("lbModule")]
        public virtual LbModule LbModule { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("networkModule")]
        public virtual NetworkModule NetworkModule { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("replicaPoolModule")]
        public virtual ReplicaPoolModule ReplicaPoolModule { get; set; } 

        /// <summary>The type of this module. Valid values ("AUTOSCALING", "FIREWALL", "HEALTH_CHECK", "LOAD_BALANCING",
        /// "NETWORK", "REPLICA_POOL")</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>[Output Only] Aggregate status for a module.</summary>
    public class ModuleStatus : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The status of the AutoscalingModule, set for type AUTOSCALING.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("autoscalingModuleStatus")]
        public virtual AutoscalingModuleStatus AutoscalingModuleStatus { get; set; } 

        /// <summary>[Output Only] The status of the FirewallModule, set for type FIREWALL.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("firewallModuleStatus")]
        public virtual FirewallModuleStatus FirewallModuleStatus { get; set; } 

        /// <summary>[Output Only] The status of the HealthCheckModule, set for type HEALTH_CHECK.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("healthCheckModuleStatus")]
        public virtual HealthCheckModuleStatus HealthCheckModuleStatus { get; set; } 

        /// <summary>[Output Only] The status of the LbModule, set for type LOAD_BALANCING.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lbModuleStatus")]
        public virtual LbModuleStatus LbModuleStatus { get; set; } 

        /// <summary>[Output Only] The status of the NetworkModule, set for type NETWORK.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("networkModuleStatus")]
        public virtual NetworkModuleStatus NetworkModuleStatus { get; set; } 

        /// <summary>[Output Only] The status of the ReplicaPoolModule, set for type VM.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("replicaPoolModuleStatus")]
        public virtual ReplicaPoolModuleStatus ReplicaPoolModuleStatus { get; set; } 

        /// <summary>[Output Only] The current state of the module.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual DeployState State { get; set; } 

        /// <summary>[Output Only] The type of the module.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A Compute Engine NetworkInterface resource. Identical to the NetworkInterface on the corresponding
    /// Compute Engine resource.</summary>
    public class NetworkInterface : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>An array of configurations for this interface. This specifies how this interface is configured to
        /// interact with other network services</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accessConfigs")]
        public virtual System.Collections.Generic.IList<AccessConfig> AccessConfigs { get; set; } 

        /// <summary>Name of the interface.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The name of the NetworkModule to which this interface applies. If not specified, or specified as
        /// 'default', this will use the 'default' network.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("network")]
        public virtual string Network { get; set; } 

        /// <summary>An optional IPV4 internal network address to assign to the instance for this network
        /// interface.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("networkIp")]
        public virtual string NetworkIp { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class NetworkModule : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required; The range of internal addresses that are legal on this network. This range is a CIDR
        /// specification, for example: 192.168.0.0/16.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("IPv4Range")]
        public virtual string IPv4Range { get; set; } 

        /// <summary>The description of the network.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>An optional address that is used for default routing to other networks. This must be within the
        /// range specified by IPv4Range, and is typicall the first usable address in that range. If not specified, the
        /// default value is the first usable address in IPv4Range.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("gatewayIPv4")]
        public virtual string GatewayIPv4 { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class NetworkModuleStatus : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The URL of the corresponding Network resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("networkUrl")]
        public virtual string NetworkUrl { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A Persistent Disk resource that will be created and attached to each Replica in the Pool. Each Replica
    /// will have a unique persistent disk that is created and attached to that Replica.</summary>
    public class NewDisk : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>How the disk will be attached to the Replica.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("attachment")]
        public virtual DiskAttachment Attachment { get; set; } 

        /// <summary>If true, then this disk will be deleted when the instance is deleted.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("autoDelete")]
        public virtual System.Nullable<bool> AutoDelete { get; set; } 

        /// <summary>If true, indicates that this is the root persistent disk.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("boot")]
        public virtual System.Nullable<bool> Boot { get; set; } 

        /// <summary>Create the new disk using these parameters. The name of the disk will be -</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("initializeParams")]
        public virtual NewDiskInitializeParams InitializeParams { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Initialization parameters for creating a new disk.</summary>
    public class NewDiskInitializeParams : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The size of the created disk in gigabytes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("diskSizeGb")]
        public virtual System.Nullable<long> DiskSizeGb { get; set; } 

        /// <summary>Name of the disk type resource describing which disk type to use to create the disk. For example
        /// 'pd-ssd' or 'pd-standard'. Default is 'pd-standard'</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("diskType")]
        public virtual string DiskType { get; set; } 

        /// <summary>The fully-qualified URL of a source image to use to create this disk.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sourceImage")]
        public virtual string SourceImage { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A specification for overriding parameters in a Template that corresponds to the Deployment.</summary>
    public class ParamOverride : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A JSON Path expression that specifies which parameter should be overridden.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("path")]
        public virtual string Path { get; set; } 

        /// <summary>The new value to assign to the overridden parameter.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class ReplicaPoolModule : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A list of environment variables.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("envVariables")]
        public virtual System.Collections.Generic.IDictionary<string,EnvVariable> EnvVariables { get; set; } 

        /// <summary>The Health Checks to configure for the ReplicaPoolModule</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("healthChecks")]
        public virtual System.Collections.Generic.IList<string> HealthChecks { get; set; } 

        /// <summary>Number of replicas in this module.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("numReplicas")]
        public virtual System.Nullable<int> NumReplicas { get; set; } 

        /// <summary>Information for a ReplicaPoolModule.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("replicaPoolParams")]
        public virtual ReplicaPoolParams ReplicaPoolParams { get; set; } 

        /// <summary>[Output Only] The name of the Resource View associated with a ReplicaPoolModule. This field will be
        /// generated by the service.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resourceView")]
        public virtual string ResourceView { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class ReplicaPoolModuleStatus : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The URL of the associated ReplicaPool resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("replicaPoolUrl")]
        public virtual string ReplicaPoolUrl { get; set; } 

        /// <summary>[Output Only] The URL of the Resource Group associated with this ReplicaPool.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resourceViewUrl")]
        public virtual string ResourceViewUrl { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Configuration information for a ReplicaPools resource. Specifying an item within will determine the
    /// ReplicaPools API version used for a ReplicaPoolModule. Only one may be specified.</summary>
    public class ReplicaPoolParams : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>ReplicaPoolParams specifications for use with ReplicaPools v1beta1.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("v1beta1")]
        public virtual ReplicaPoolParamsV1Beta1 V1beta1 { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Configuration information for a ReplicaPools v1beta1 API resource. Directly maps to ReplicaPool
    /// InitTemplate.</summary>
    public class ReplicaPoolParamsV1Beta1 : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Whether these replicas should be restarted if they experience a failure. The default value is
        /// true.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("autoRestart")]
        public virtual System.Nullable<bool> AutoRestart { get; set; } 

        /// <summary>The base name for instances within this ReplicaPool.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("baseInstanceName")]
        public virtual string BaseInstanceName { get; set; } 

        /// <summary>Enables IP Forwarding</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("canIpForward")]
        public virtual System.Nullable<bool> CanIpForward { get; set; } 

        /// <summary>An optional textual description of the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>A list of existing Persistent Disk resources to attach to each replica in the pool. Each disk will
        /// be attached in read-only mode to every replica.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("disksToAttach")]
        public virtual System.Collections.Generic.IList<ExistingDisk> DisksToAttach { get; set; } 

        /// <summary>A list of Disk resources to create and attach to each Replica in the Pool. Currently, you can only
        /// define one disk and it must be a root persistent disk. Note that Replica Pool will create a root persistent
        /// disk for each replica.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("disksToCreate")]
        public virtual System.Collections.Generic.IList<NewDisk> DisksToCreate { get; set; } 

        /// <summary>Name of the Action to be run during initialization of a ReplicaPoolModule.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("initAction")]
        public virtual string InitAction { get; set; } 

        /// <summary>The machine type for this instance. Either a complete URL, or the resource name (e.g.
        /// n1-standard-1).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("machineType")]
        public virtual string MachineType { get; set; } 

        /// <summary>The metadata key/value pairs assigned to this instance.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual Metadata Metadata { get; set; } 

        /// <summary>A list of network interfaces for the instance. Currently only one interface is supported by Google
        /// Compute Engine.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("networkInterfaces")]
        public virtual System.Collections.Generic.IList<NetworkInterface> NetworkInterfaces { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("onHostMaintenance")]
        public virtual string OnHostMaintenance { get; set; } 

        /// <summary>A list of Service Accounts to enable for this instance.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("serviceAccounts")]
        public virtual System.Collections.Generic.IList<ServiceAccount> ServiceAccounts { get; set; } 

        /// <summary>A list of tags to apply to the Google Compute Engine instance to identify resources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tags")]
        public virtual Tag Tags { get; set; } 

        /// <summary>The zone for this ReplicaPool.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("zone")]
        public virtual string Zone { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A Compute Engine service account, identical to the Compute Engine resource.</summary>
    public class ServiceAccount : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Service account email address.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("email")]
        public virtual string Email { get; set; } 

        /// <summary>List of OAuth2 scopes to obtain for the service account.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("scopes")]
        public virtual System.Collections.Generic.IList<string> Scopes { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A Compute Engine Instance tag, identical to the tags on the corresponding Compute Engine Instance
    /// resource.</summary>
    public class Tag : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The fingerprint of the tag.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fingerPrint")]
        public virtual string FingerPrint { get; set; } 

        /// <summary>Items contained in this tag.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<string> Items { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A Template represents a complete configuration for a Deployment.</summary>
    public class Template : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Action definitions for use in Module intents in this Template.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("actions")]
        public virtual System.Collections.Generic.IDictionary<string,Action> Actions { get; set; } 

        /// <summary>A user-supplied description of this Template.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>A list of modules for this Template.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("modules")]
        public virtual System.Collections.Generic.IDictionary<string,Module> Modules { get; set; } 

        /// <summary>Name of this Template. The name must conform to the expression: [a-zA-Z0-9-_]{1,64}</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class TemplatesListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("resources")]
        public virtual System.Collections.Generic.IList<Template> Resources { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }
}
